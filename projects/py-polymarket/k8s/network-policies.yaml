# NetworkPolicy for PostgreSQL
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-netpol
  namespace: polymarket
  labels:
    app: postgres
    component: database
spec:
  podSelector:
    matchLabels:
      app: postgres
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: data-collector
    - podSelector:
        matchLabels:
          app: risk-manager
    - podSelector:
        matchLabels:
          app: trading-engine
    - podSelector:
        matchLabels:
          app: web-monitor
    ports:
    - protocol: TCP
      port: 5432
  egress:
  - {} # Allow all egress for database operations
---
# NetworkPolicy for Redis
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-netpol
  namespace: polymarket
  labels:
    app: redis
    component: cache
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          tier: microservice
    - podSelector:
        matchLabels:
          tier: monitoring
    ports:
    - protocol: TCP
      port: 6379
  egress:
  - {} # Allow all egress for cache operations
---
# NetworkPolicy for Microservices (Backend)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: microservices-netpol
  namespace: polymarket
  labels:
    app: polymarket-trading
    tier: microservice
spec:
  podSelector:
    matchLabels:
      tier: microservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: nginx
    - podSelector:
        matchLabels:
          tier: microservice
    - podSelector:
        matchLabels:
          tier: monitoring
    ports:
    - protocol: TCP
      port: 8000  # API Gateway
    - protocol: TCP
      port: 8001  # Data Collector
    - protocol: TCP
      port: 8002  # Strategy Engine
    - protocol: TCP
      port: 8003  # Risk Manager
    - protocol: TCP
      port: 8004  # Trading Engine
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          tier: microservice
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8001
    - protocol: TCP
      port: 8002
    - protocol: TCP
      port: 8003
    - protocol: TCP
      port: 8004
  - {} # Allow external API calls (Polymarket API)
---
# NetworkPolicy for Frontend (Nginx)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-netpol
  namespace: polymarket
  labels:
    app: nginx
    tier: frontend
spec:
  podSelector:
    matchLabels:
      tier: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - {} # Allow all ingress traffic to frontend
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8000
  - to:
    - podSelector:
        matchLabels:
          app: web-monitor
    ports:
    - protocol: TCP
      port: 8888
  - {} # Allow DNS resolution
---
# NetworkPolicy for Monitoring
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-netpol
  namespace: polymarket
  labels:
    app: web-monitor
    tier: monitoring
spec:
  podSelector:
    matchLabels:
      tier: monitoring
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: nginx
    ports:
    - protocol: TCP
      port: 8888
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          tier: microservice
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8001
    - protocol: TCP
      port: 8002
    - protocol: TCP
      port: 8003
    - protocol: TCP
      port: 8004