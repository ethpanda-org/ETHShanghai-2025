# Risk Manager Microservice Dockerfile
# Specialized container for risk assessment and portfolio management

FROM python:3.11-slim as risk-manager

# Set microservice-specific environment variables
ENV SERVICE_NAME=risk-manager \
    SERVICE_PORT=8003 \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy requirements
COPY requirements.txt ./
RUN pip install --upgrade pip && pip install -r requirements.txt

# Additional dependencies for risk management
RUN pip install \
    quantlib>=1.29 \
    cvxpy>=1.3.0 \
    pyfolio>=0.9.2

# Copy source code
COPY src/ ./src/
COPY config/ ./config/
COPY docker/microservices/microservice-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/microservice-entrypoint.sh

# Create microservice user
RUN useradd --create-home --shell /bin/bash riskmanager && \
    mkdir -p /app/logs /app/data /app/cache /app/reports && \
    chown -R riskmanager:riskmanager /app

USER riskmanager

# Set Python path and risk-specific environment
ENV PYTHONPATH=/app/src \
    WAIT_FOR_REDIS=true \
    WAIT_FOR_SERVICE_REGISTRY=true \
    WAIT_FOR_DB=true \
    RISK_CONFIG_PATH=/app/config/risk_management.yaml \
    REPORTS_DIR=/app/reports

# Health check for risk manager
HEALTHCHECK --interval=25s --timeout=10s --start-period=35s --retries=3 \
    CMD curl -f http://localhost:8003/health || exit 1

EXPOSE 8003

ENTRYPOINT ["/usr/local/bin/microservice-entrypoint.sh"]
CMD ["risk-manager"]