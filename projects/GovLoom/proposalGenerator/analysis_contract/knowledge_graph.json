[
  {
    "function_signature": "_msgSender() returns(address)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_0",
        "type": "address"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_msgData() returns(bytes)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "msg.data",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_msgSender() returns(address)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_1",
        "type": "address"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_msgData() returns(bytes)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "msg.data",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "constructor(string,string) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "__name",
        "type": "string"
      },
      {
        "name": "__symbol",
        "type": "string"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "_decimals",
      "_name",
      "_symbol"
    ],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "name() returns(string)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "_name",
        "type": "string"
      }
    ],
    "state_reads": [
      "_name"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "symbol() returns(string)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "_symbol",
        "type": "string"
      }
    ],
    "state_reads": [
      "_symbol"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "decimals() returns(uint8)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "_decimals",
        "type": "uint8"
      }
    ],
    "state_reads": [
      "_decimals"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "totalSupply() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "_totalSupply",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_totalSupply"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "balanceOf(address) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "REF_0",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_balances"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "transfer(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_msgSender() returns(address)",
      "_transfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "allowance(address,address) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "spender",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "REF_2",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "approve(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "transferFrom(address,address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "sender",
        "type": "address"
      },
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_4",
          "amount",
          "ERC20: transfer amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)",
      "_transfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "increaseAllowance(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "addedValue",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_7",
          "addedValue"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "decreaseAllowance(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "subtractedValue",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_10",
          "subtractedValue",
          "ERC20: decreased allowance below zero"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_transfer(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "sender",
        "type": "address"
      },
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances"
    ],
    "state_writes": [
      "_balances"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_13",
          "amount",
          "ERC20: transfer amount exceeds balance"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_16",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "_mint(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances",
      "_totalSupply"
    ],
    "state_writes": [
      "_balances",
      "_totalSupply"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "_totalSupply",
          "amount"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_20",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "burn(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "burnFrom(address,uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_41",
          "amount",
          "ERC20: burn amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)",
      "allowance(address,address) returns(uint256)"
    ]
  },
  {
    "function_signature": "_burn(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances",
      "_totalSupply"
    ],
    "state_writes": [
      "_balances",
      "_totalSupply"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_24",
          "amount",
          "ERC20: burn amount exceeds balance"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "_totalSupply",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "_approve(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "_allowances"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "_burnFrom(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_30",
          "amount",
          "ERC20: burn amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_beforeTokenTransfer(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "from",
        "type": "address"
      },
      {
        "name": "to",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_msgSender() returns(address)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_67",
        "type": "address"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_msgData() returns(bytes)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "msg.data",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "totalSupply() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "_totalSupply",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_totalSupply"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "balanceOf(address) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "REF_32",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_balances"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "transfer(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_msgSender() returns(address)",
      "_transfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "allowance(address,address) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "spender",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "REF_34",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "approve(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "transferFrom(address,address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "sender",
        "type": "address"
      },
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_36",
          "amount",
          "ERC20: transfer amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)",
      "_transfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "increaseAllowance(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "addedValue",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_39",
          "addedValue"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "decreaseAllowance(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "subtractedValue",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_42",
          "subtractedValue",
          "ERC20: decreased allowance below zero"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_transfer(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "sender",
        "type": "address"
      },
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances"
    ],
    "state_writes": [
      "_balances"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_45",
          "amount",
          "ERC20: transfer amount exceeds balance"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_48",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "_mint(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances",
      "_totalSupply"
    ],
    "state_writes": [
      "_balances",
      "_totalSupply"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "_totalSupply",
          "amount"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_52",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "burn(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "burnFrom(address,uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_107",
          "amount",
          "ERC20: burn amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)",
      "allowance(address,address) returns(uint256)"
    ]
  },
  {
    "function_signature": "_burn(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances",
      "_totalSupply"
    ],
    "state_writes": [
      "_balances",
      "_totalSupply"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_56",
          "amount",
          "ERC20: burn amount exceeds balance"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "_totalSupply",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "_approve(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "_allowances"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "_burnFrom(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_62",
          "amount",
          "ERC20: burn amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_beforeTokenTransfer(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "from",
        "type": "address"
      },
      {
        "name": "to",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "constructor(address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "owner"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "nominateNewOwner(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "nominatedOwner"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyOwner() returns()"
    ]
  },
  {
    "function_signature": "acceptOwnership() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "nominatedOwner",
      "owner"
    ],
    "state_writes": [
      "nominatedOwner",
      "owner"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "hasRole(bytes32,address) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_144",
        "type": "bool"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "contains",
        "arguments": [
          "REF_65",
          "account"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleMemberCount(bytes32) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_145",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "length",
        "arguments": [
          "REF_68"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleMember(bytes32,uint256) returns(address)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_146",
        "type": "address"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "at",
        "arguments": [
          "REF_71",
          "index"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleAdmin(bytes32) returns(bytes32)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      }
    ],
    "return_variables": [
      {
        "name": "REF_74",
        "type": "bytes32"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "grantRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_grantRole(bytes32,address) returns()",
      "_msgSender() returns(address)",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "revokeRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_msgSender() returns(address)",
      "_revokeRole(bytes32,address) returns()",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "renounceRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_msgSender() returns(address)",
      "_revokeRole(bytes32,address) returns()"
    ]
  },
  {
    "function_signature": "_setupRole(bytes32,address) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_grantRole(bytes32,address) returns()"
    ]
  },
  {
    "function_signature": "_setRoleAdmin(bytes32,bytes32) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "adminRole",
        "type": "bytes32"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [
      "_roles"
    ],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_grantRole(bytes32,address) returns()",
    "visibility": "private",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "add",
        "arguments": [
          "REF_84",
          "account"
        ]
      }
    ],
    "internal_calls": [
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_revokeRole(bytes32,address) returns()",
    "visibility": "private",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "remove",
        "arguments": [
          "REF_87",
          "account"
        ]
      }
    ],
    "internal_calls": [
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_msgSender() returns(address)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_167",
        "type": "address"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_msgData() returns(bytes)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "msg.data",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "totalSupply() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "_totalSupply",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_totalSupply"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "balanceOf(address) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "REF_89",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_balances"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "transfer(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_msgSender() returns(address)",
      "_transfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "allowance(address,address) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "spender",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "REF_91",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "approve(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "transferFrom(address,address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "sender",
        "type": "address"
      },
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_93",
          "amount",
          "ERC20: transfer amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)",
      "_transfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "increaseAllowance(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "addedValue",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_96",
          "addedValue"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "decreaseAllowance(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "subtractedValue",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_99",
          "subtractedValue",
          "ERC20: decreased allowance below zero"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_transfer(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "sender",
        "type": "address"
      },
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances"
    ],
    "state_writes": [
      "_balances"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_102",
          "amount",
          "ERC20: transfer amount exceeds balance"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_105",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "_mint(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances",
      "_totalSupply"
    ],
    "state_writes": [
      "_balances",
      "_totalSupply"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "_totalSupply",
          "amount"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_109",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "burn(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "burnFrom(address,uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_207",
          "amount",
          "ERC20: burn amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)",
      "allowance(address,address) returns(uint256)"
    ]
  },
  {
    "function_signature": "_burn(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances",
      "_totalSupply"
    ],
    "state_writes": [
      "_balances",
      "_totalSupply"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_113",
          "amount",
          "ERC20: burn amount exceeds balance"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "_totalSupply",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "_approve(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "_allowances"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "_burnFrom(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_119",
          "amount",
          "ERC20: burn amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_beforeTokenTransfer(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "from",
        "type": "address"
      },
      {
        "name": "to",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "constructor(string,string,address,address,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_name",
        "type": "string"
      },
      {
        "name": "_symbol",
        "type": "string"
      },
      {
        "name": "_oracle_address",
        "type": "address"
      },
      {
        "name": "_creator_address",
        "type": "address"
      },
      {
        "name": "_timelock_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "DEFAULT_ADMIN_ROLE",
      "genesis_supply"
    ],
    "state_writes": [
      "name",
      "oracle_address",
      "symbol",
      "timelock_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_mint(address,uint256) returns()",
      "_msgSender() returns(address)",
      "_setupRole(bytes32,address) returns()",
      "_writeCheckpoint(address,uint32,uint96,uint96) returns()",
      "constructor(address) returns()"
    ]
  },
  {
    "function_signature": "setOracle(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "new_oracle",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "oracle_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "setTimelock(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "new_timelock",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "timelock_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "setFRAXAddress(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "frax_contract_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "FRAX"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "mint(address,uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "to",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_mint(address,uint256) returns()",
      "onlyPools() returns()"
    ]
  },
  {
    "function_signature": "pool_mint(address,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "m_address",
        "type": "address"
      },
      {
        "name": "m_amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "checkpoints",
      "numCheckpoints",
      "trackingVotes"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_mint(address,uint256) returns()",
      "_writeCheckpoint(address,uint32,uint96,uint96) returns()",
      "add96(uint96,uint96,string) returns(uint96)",
      "onlyPools() returns()",
      "trackVotes(address,address,uint96) returns()"
    ]
  },
  {
    "function_signature": "pool_burn_from(address,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "b_address",
        "type": "address"
      },
      {
        "name": "b_amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "checkpoints",
      "numCheckpoints",
      "trackingVotes"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_burnFrom(address,uint256) returns()",
      "_writeCheckpoint(address,uint32,uint96,uint96) returns()",
      "onlyPools() returns()",
      "sub96(uint96,uint96,string) returns(uint96)",
      "trackVotes(address,address,uint96) returns()"
    ]
  },
  {
    "function_signature": "toggleVotes() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "trackingVotes"
    ],
    "state_writes": [
      "trackingVotes"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "transfer(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "trackingVotes"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_msgSender() returns(address)",
      "_transfer(address,address,uint256) returns()",
      "trackVotes(address,address,uint96) returns()"
    ]
  },
  {
    "function_signature": "transferFrom(address,address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "sender",
        "type": "address"
      },
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances",
      "trackingVotes"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_130",
          "amount",
          "ERC20: transfer amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)",
      "_transfer(address,address,uint256) returns()",
      "trackVotes(address,address,uint96) returns()"
    ]
  },
  {
    "function_signature": "getCurrentVotes(address) returns(uint96)",
    "visibility": "external",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "REF_135",
        "type": "uint96"
      }
    ],
    "state_reads": [
      "checkpoints",
      "numCheckpoints"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "getPriorVotes(address,uint256) returns(uint96)",
    "visibility": "public",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "blockNumber",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "REF_149",
        "type": "uint96"
      },
      {
        "name": "REF_153",
        "type": "uint96"
      },
      {
        "name": "REF_142",
        "type": "uint96"
      }
    ],
    "state_reads": [
      "checkpoints",
      "numCheckpoints"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "trackVotes(address,address,uint96) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "srcRep",
        "type": "address"
      },
      {
        "name": "dstRep",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint96"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "checkpoints",
      "numCheckpoints"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_writeCheckpoint(address,uint32,uint96,uint96) returns()",
      "add96(uint96,uint96,string) returns(uint96)",
      "sub96(uint96,uint96,string) returns(uint96)"
    ]
  },
  {
    "function_signature": "_writeCheckpoint(address,uint32,uint96,uint96) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "voter",
        "type": "address"
      },
      {
        "name": "nCheckpoints",
        "type": "uint32"
      },
      {
        "name": "oldVotes",
        "type": "uint96"
      },
      {
        "name": "newVotes",
        "type": "uint96"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "checkpoints"
    ],
    "state_writes": [
      "checkpoints",
      "numCheckpoints"
    ],
    "external_calls": [],
    "internal_calls": [
      "safe32(uint256,string) returns(uint32)"
    ]
  },
  {
    "function_signature": "safe32(uint256,string) returns(uint32)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "n",
        "type": "uint256"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_349",
        "type": "uint32"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "safe96(uint256,string) returns(uint96)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "n",
        "type": "uint256"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_353",
        "type": "uint96"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "add96(uint96,uint96,string) returns(uint96)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint96"
      },
      {
        "name": "b",
        "type": "uint96"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "c",
        "type": "uint96"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "sub96(uint96,uint96,string) returns(uint96)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint96"
      },
      {
        "name": "b",
        "type": "uint96"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_359",
        "type": "uint96"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "constructor(address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "owner"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "nominateNewOwner(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "nominatedOwner"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyOwner() returns()"
    ]
  },
  {
    "function_signature": "acceptOwnership() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "nominatedOwner",
      "owner"
    ],
    "state_writes": [
      "nominatedOwner",
      "owner"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "hasRole(bytes32,address) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_380",
        "type": "bool"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "contains",
        "arguments": [
          "REF_173",
          "account"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleMemberCount(bytes32) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_381",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "length",
        "arguments": [
          "REF_176"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleMember(bytes32,uint256) returns(address)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_382",
        "type": "address"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "at",
        "arguments": [
          "REF_179",
          "index"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleAdmin(bytes32) returns(bytes32)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      }
    ],
    "return_variables": [
      {
        "name": "REF_182",
        "type": "bytes32"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "grantRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_grantRole(bytes32,address) returns()",
      "_msgSender() returns(address)",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "revokeRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_msgSender() returns(address)",
      "_revokeRole(bytes32,address) returns()",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "renounceRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_msgSender() returns(address)",
      "_revokeRole(bytes32,address) returns()"
    ]
  },
  {
    "function_signature": "_setupRole(bytes32,address) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_grantRole(bytes32,address) returns()"
    ]
  },
  {
    "function_signature": "_setRoleAdmin(bytes32,bytes32) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "adminRole",
        "type": "bytes32"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [
      "_roles"
    ],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_grantRole(bytes32,address) returns()",
    "visibility": "private",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "add",
        "arguments": [
          "REF_192",
          "account"
        ]
      }
    ],
    "internal_calls": [
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_revokeRole(bytes32,address) returns()",
    "visibility": "private",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "remove",
        "arguments": [
          "REF_195",
          "account"
        ]
      }
    ],
    "internal_calls": [
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_msgSender() returns(address)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_403",
        "type": "address"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_msgData() returns(bytes)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "msg.data",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "totalSupply() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "_totalSupply",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_totalSupply"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "balanceOf(address) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "REF_197",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_balances"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "transfer(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_msgSender() returns(address)",
      "_transfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "allowance(address,address) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "spender",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "REF_199",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "approve(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "transferFrom(address,address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "sender",
        "type": "address"
      },
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_201",
          "amount",
          "ERC20: transfer amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)",
      "_transfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "increaseAllowance(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "addedValue",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_204",
          "addedValue"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "decreaseAllowance(address,uint256) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "subtractedValue",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_207",
          "subtractedValue",
          "ERC20: decreased allowance below zero"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_transfer(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "sender",
        "type": "address"
      },
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances"
    ],
    "state_writes": [
      "_balances"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_210",
          "amount",
          "ERC20: transfer amount exceeds balance"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_213",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "_mint(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances",
      "_totalSupply"
    ],
    "state_writes": [
      "_balances",
      "_totalSupply"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "_totalSupply",
          "amount"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_217",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "burn(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "burnFrom(address,uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_443",
          "amount",
          "ERC20: burn amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)",
      "allowance(address,address) returns(uint256)"
    ]
  },
  {
    "function_signature": "_burn(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_balances",
      "_totalSupply"
    ],
    "state_writes": [
      "_balances",
      "_totalSupply"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_221",
          "amount",
          "ERC20: burn amount exceeds balance"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "_totalSupply",
          "amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_beforeTokenTransfer(address,address,uint256) returns()"
    ]
  },
  {
    "function_signature": "_approve(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "spender",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "_allowances"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "_burnFrom(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_allowances"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "REF_227",
          "amount",
          "ERC20: burn amount exceeds allowance"
        ]
      }
    ],
    "internal_calls": [
      "_approve(address,address,uint256) returns()",
      "_burn(address,uint256) returns()",
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_beforeTokenTransfer(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "from",
        "type": "address"
      },
      {
        "name": "to",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "constructor(string,string,address,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_name",
        "type": "string"
      },
      {
        "name": "_symbol",
        "type": "string"
      },
      {
        "name": "_creator_address",
        "type": "address"
      },
      {
        "name": "_timelock_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "COLLATERAL_RATIO_PAUSER",
      "DEFAULT_ADMIN_ROLE",
      "creator_address",
      "genesis_supply",
      "timelock_address"
    ],
    "state_writes": [
      "DEFAULT_ADMIN_ADDRESS",
      "creator_address",
      "frax_step",
      "global_collateral_ratio",
      "name",
      "price_band",
      "price_target",
      "refresh_cooldown",
      "symbol",
      "timelock_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_mint(address,uint256) returns()",
      "_msgSender() returns(address)",
      "_setupRole(bytes32,address) returns()",
      "constructor(address) returns()",
      "grantRole(bytes32,address) returns()"
    ]
  },
  {
    "function_signature": "oracle_price(FRAXStablecoin.PriceChoice) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "choice",
        "type": "FRAXStablecoin.PriceChoice"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_493",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "PRICE_PRECISION",
      "eth_usd_pricer",
      "eth_usd_pricer_decimals",
      "fraxEthOracle",
      "fxsEthOracle",
      "weth_address"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "ChainlinkETHUSDPriceConsumer",
        "function_name": "getLatestPrice",
        "arguments": []
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "TMP_480",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_481",
          "TMP_483"
        ]
      },
      {
        "target_contract": "UniswapPairOracle",
        "function_name": "consult",
        "arguments": [
          "weth_address",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "UniswapPairOracle",
        "function_name": "consult",
        "arguments": [
          "weth_address",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "__eth_usd_price",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_492",
          "price_vs_eth"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.revert(string)()"
    ]
  },
  {
    "function_signature": "frax_price() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_494",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "oracle_price(FRAXStablecoin.PriceChoice) returns(uint256)"
    ]
  },
  {
    "function_signature": "fxs_price() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_495",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "oracle_price(FRAXStablecoin.PriceChoice) returns(uint256)"
    ]
  },
  {
    "function_signature": "eth_usd_price() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_501",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "PRICE_PRECISION",
      "eth_usd_pricer",
      "eth_usd_pricer_decimals"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "ChainlinkETHUSDPriceConsumer",
        "function_name": "getLatestPrice",
        "arguments": []
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "TMP_497",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_498",
          "TMP_500"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "frax_info() returns(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_511",
        "type": "uint256"
      },
      {
        "name": "TMP_502",
        "type": "uint256"
      },
      {
        "name": "global_collateral_ratio",
        "type": "uint256"
      },
      {
        "name": "TMP_503",
        "type": "uint256"
      },
      {
        "name": "TMP_504",
        "type": "uint256"
      },
      {
        "name": "redemption_fee",
        "type": "uint256"
      },
      {
        "name": "TMP_505",
        "type": "uint256"
      },
      {
        "name": "minting_fee",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "PRICE_PRECISION",
      "eth_usd_pricer",
      "eth_usd_pricer_decimals",
      "global_collateral_ratio",
      "minting_fee",
      "redemption_fee"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "ChainlinkETHUSDPriceConsumer",
        "function_name": "getLatestPrice",
        "arguments": []
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "TMP_507",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_508",
          "TMP_510"
        ]
      }
    ],
    "internal_calls": [
      "globalCollateralValue() returns(uint256)",
      "oracle_price(FRAXStablecoin.PriceChoice) returns(uint256)",
      "totalSupply() returns(uint256)"
    ]
  },
  {
    "function_signature": "globalCollateralValue() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "total_collateral_value_d18",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "frax_pools_array"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "FraxPool",
        "function_name": "collatDollarBalance",
        "arguments": []
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "total_collateral_value_d18",
          "TMP_516"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "refreshCollateralRatio() returns()",
    "visibility": "public",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "collateral_ratio_paused",
      "frax_step",
      "global_collateral_ratio",
      "last_call_time",
      "price_band",
      "price_target",
      "refresh_cooldown"
    ],
    "state_writes": [
      "global_collateral_ratio",
      "last_call_time"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "price_target",
          "price_band"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "global_collateral_ratio",
          "frax_step"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "price_target",
          "price_band"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "global_collateral_ratio",
          "frax_step"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "global_collateral_ratio",
          "frax_step"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "frax_price() returns(uint256)"
    ]
  },
  {
    "function_signature": "pool_burn_from(address,uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "b_address",
        "type": "address"
      },
      {
        "name": "b_amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_burnFrom(address,uint256) returns()",
      "onlyPools() returns()"
    ]
  },
  {
    "function_signature": "pool_mint(address,uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "m_address",
        "type": "address"
      },
      {
        "name": "m_amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_mint(address,uint256) returns()",
      "onlyPools() returns()"
    ]
  },
  {
    "function_signature": "addPool(address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "pool_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "frax_pools",
      "frax_pools_array"
    ],
    "state_writes": [
      "frax_pools",
      "frax_pools_array"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "removePool(address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "pool_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "frax_pools",
      "frax_pools_array"
    ],
    "state_writes": [
      "frax_pools",
      "frax_pools_array"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setRedemptionFee(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "red_fee",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "redemption_fee"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setMintingFee(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "min_fee",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "minting_fee"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setFraxStep(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_new_step",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "frax_step"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setPriceTarget(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_new_price_target",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "price_target"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setRefreshCooldown(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_new_cooldown",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "refresh_cooldown"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setFXSAddress(address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_fxs_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "fxs_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setETHUSDOracle(address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_eth_usd_consumer_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "eth_usd_consumer_address",
      "eth_usd_pricer"
    ],
    "state_writes": [
      "eth_usd_consumer_address",
      "eth_usd_pricer",
      "eth_usd_pricer_decimals"
    ],
    "external_calls": [
      {
        "target_contract": "ChainlinkETHUSDPriceConsumer",
        "function_name": "getDecimals",
        "arguments": []
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setTimelock(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "new_timelock",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "timelock_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setController(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_controller_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "controller_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setPriceBand(uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_price_band",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "price_band"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setFRAXEthOracle(address,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_frax_oracle_addr",
        "type": "address"
      },
      {
        "name": "_weth_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "fraxEthOracle",
      "frax_eth_oracle_address",
      "weth_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "setFXSEthOracle(address,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_fxs_oracle_addr",
        "type": "address"
      },
      {
        "name": "_weth_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "fxsEthOracle",
      "fxs_eth_oracle_address",
      "weth_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "onlyByOwnerGovernanceOrController() returns()"
    ]
  },
  {
    "function_signature": "toggleCollateralRatio() returns()",
    "visibility": "public",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "collateral_ratio_paused"
    ],
    "state_writes": [
      "collateral_ratio_paused"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyCollateralRatioPauser() returns()"
    ]
  },
  {
    "function_signature": "constructor(address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "owner"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "nominateNewOwner(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "nominatedOwner"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyOwner() returns()"
    ]
  },
  {
    "function_signature": "acceptOwnership() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "nominatedOwner",
      "owner"
    ],
    "state_writes": [
      "nominatedOwner",
      "owner"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "hasRole(bytes32,address) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_647",
        "type": "bool"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "contains",
        "arguments": [
          "REF_272",
          "account"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleMemberCount(bytes32) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_648",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "length",
        "arguments": [
          "REF_275"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleMember(bytes32,uint256) returns(address)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_649",
        "type": "address"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "at",
        "arguments": [
          "REF_278",
          "index"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleAdmin(bytes32) returns(bytes32)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      }
    ],
    "return_variables": [
      {
        "name": "REF_281",
        "type": "bytes32"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "grantRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_grantRole(bytes32,address) returns()",
      "_msgSender() returns(address)",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "revokeRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_msgSender() returns(address)",
      "_revokeRole(bytes32,address) returns()",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "renounceRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_msgSender() returns(address)",
      "_revokeRole(bytes32,address) returns()"
    ]
  },
  {
    "function_signature": "_setupRole(bytes32,address) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_grantRole(bytes32,address) returns()"
    ]
  },
  {
    "function_signature": "_setRoleAdmin(bytes32,bytes32) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "adminRole",
        "type": "bytes32"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [
      "_roles"
    ],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_grantRole(bytes32,address) returns()",
    "visibility": "private",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "add",
        "arguments": [
          "REF_291",
          "account"
        ]
      }
    ],
    "internal_calls": [
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_revokeRole(bytes32,address) returns()",
    "visibility": "private",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "remove",
        "arguments": [
          "REF_294",
          "account"
        ]
      }
    ],
    "internal_calls": [
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_msgSender() returns(address)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_670",
        "type": "address"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_msgData() returns(bytes)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "msg.data",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "constructor(address,address,address,address,address,uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_frax_contract_address",
        "type": "address"
      },
      {
        "name": "_fxs_contract_address",
        "type": "address"
      },
      {
        "name": "_collateral_address",
        "type": "address"
      },
      {
        "name": "_creator_address",
        "type": "address"
      },
      {
        "name": "_timelock_address",
        "type": "address"
      },
      {
        "name": "_pool_ceiling",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "BUYBACK_PAUSER",
      "COLLATERAL_PRICE_PAUSER",
      "DEFAULT_ADMIN_ROLE",
      "MINT_PAUSER",
      "RECOLLATERALIZE_PAUSER",
      "REDEEM_PAUSER",
      "collateral_token",
      "timelock_address"
    ],
    "state_writes": [
      "FRAX",
      "FXS",
      "collateral_address",
      "collateral_token",
      "frax_contract_address",
      "fxs_contract_address",
      "missing_decimals",
      "pool_ceiling",
      "timelock_address"
    ],
    "external_calls": [
      {
        "target_contract": "ERC20",
        "function_name": "decimals",
        "arguments": []
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_689",
          "TMP_690"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_msgSender() returns(address)",
      "_setupRole(bytes32,address) returns()",
      "constructor(address) returns()",
      "grantRole(bytes32,address) returns()"
    ]
  },
  {
    "function_signature": "collatDollarBalance() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_720",
        "type": "uint256"
      },
      {
        "name": "TMP_707",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "FRAX",
      "PRICE_PRECISION",
      "collatEthOracle",
      "collateralPricePaused",
      "collateral_token",
      "missing_decimals",
      "pausedPrice",
      "unclaimedPoolCollateral",
      "weth_address"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "ERC20",
        "function_name": "balanceOf",
        "arguments": [
          "TMP_701"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_702",
          "unclaimedPoolCollateral"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "TMP_703",
          "TMP_704"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "TMP_705",
          "pausedPrice"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_706",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "eth_usd_price",
        "arguments": []
      },
      {
        "target_contract": "UniswapPairOracle",
        "function_name": "consult",
        "arguments": [
          "weth_address",
          "TMP_710"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "eth_usd_price",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_712",
          "eth_collat_price"
        ]
      },
      {
        "target_contract": "ERC20",
        "function_name": "balanceOf",
        "arguments": [
          "TMP_714"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_715",
          "unclaimedPoolCollateral"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "TMP_716",
          "TMP_717"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "TMP_718",
          "collat_usd_price"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_719",
          "PRICE_PRECISION"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "availableExcessCollatDV() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_728",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "COLLATERAL_RATIO_PRECISION",
      "FRAX"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "totalSupply",
        "arguments": []
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "global_collateral_ratio",
        "arguments": []
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "globalCollateralValue",
        "arguments": []
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "total_supply",
          "global_collateral_ratio"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_725",
          "COLLATERAL_RATIO_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "global_collat_value",
          "required_collat_dollar_value_d18"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getCollateralPrice() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "pausedPrice",
        "type": "uint256"
      },
      {
        "name": "TMP_735",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "FRAX",
      "PRICE_PRECISION",
      "collatEthOracle",
      "collateralPricePaused",
      "missing_decimals",
      "pausedPrice",
      "weth_address"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "eth_usd_price",
        "arguments": []
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "eth_usd_price",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "UniswapPairOracle",
        "function_name": "consult",
        "arguments": [
          "weth_address",
          "TMP_733"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_731",
          "TMP_734"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "setCollatETHOracle(address,address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_collateral_weth_oracle_address",
        "type": "address"
      },
      {
        "name": "_weth_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "collatEthOracle",
      "collat_eth_oracle_address",
      "weth_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "mint1t1FRAX(uint256,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "collateral_amount",
        "type": "uint256"
      },
      {
        "name": "FRAX_out_min",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "COLLATERAL_RATIO_MAX",
      "FRAX",
      "collateral_token",
      "minting_fee",
      "missing_decimals",
      "pool_ceiling",
      "unclaimedPoolCollateral"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "global_collateral_ratio",
        "arguments": []
      },
      {
        "target_contract": "ERC20",
        "function_name": "balanceOf",
        "arguments": [
          "TMP_743"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_744",
          "unclaimedPoolCollateral"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "TMP_745",
          "collateral_amount"
        ]
      },
      {
        "target_contract": "FraxPoolLibrary",
        "function_name": "calcMint1t1FRAX",
        "arguments": [
          "TMP_749",
          "collateral_amount_d18"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_751",
          "minting_fee"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "frax_amount_d18",
          "TMP_752"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_753",
          "1000000"
        ]
      },
      {
        "target_contract": "TransferHelper",
        "function_name": "safeTransferFrom",
        "arguments": [
          "TMP_757",
          "msg.sender",
          "TMP_758",
          "collateral_amount"
        ]
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "pool_mint",
        "arguments": [
          "msg.sender",
          "frax_amount_d18"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "getCollateralPrice() returns(uint256)",
      "notMintPaused() returns()"
    ]
  },
  {
    "function_signature": "mintAlgorithmicFRAX(uint256,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "fxs_amount_d18",
        "type": "uint256"
      },
      {
        "name": "FRAX_out_min",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "FRAX",
      "FXS",
      "minting_fee"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "fxs_price",
        "arguments": []
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "global_collateral_ratio",
        "arguments": []
      },
      {
        "target_contract": "FraxPoolLibrary",
        "function_name": "calcMintAlgorithmicFRAX",
        "arguments": [
          "fxs_price",
          "fxs_amount_d18"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_767",
          "minting_fee"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "frax_amount_d18",
          "TMP_768"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_769",
          "1000000"
        ]
      },
      {
        "target_contract": "FRAXShares",
        "function_name": "pool_burn_from",
        "arguments": [
          "msg.sender",
          "fxs_amount_d18"
        ]
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "pool_mint",
        "arguments": [
          "msg.sender",
          "frax_amount_d18"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "notMintPaused() returns()"
    ]
  },
  {
    "function_signature": "mintFractionalFRAX(uint256,uint256,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "collateral_amount",
        "type": "uint256"
      },
      {
        "name": "fxs_amount",
        "type": "uint256"
      },
      {
        "name": "FRAX_out_min",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "COLLATERAL_RATIO_MAX",
      "FRAX",
      "FXS",
      "collateral_token",
      "minting_fee",
      "missing_decimals",
      "pool_ceiling",
      "unclaimedPoolCollateral"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "fxs_price",
        "arguments": []
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "global_collateral_ratio",
        "arguments": []
      },
      {
        "target_contract": "ERC20",
        "function_name": "balanceOf",
        "arguments": [
          "TMP_782"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_783",
          "unclaimedPoolCollateral"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "TMP_784",
          "collateral_amount"
        ]
      },
      {
        "target_contract": "FraxPoolLibrary",
        "function_name": "calcMintFractionalFRAX",
        "arguments": [
          "input_params"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_792",
          "minting_fee"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "mint_amount",
          "TMP_793"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_794",
          "1000000"
        ]
      },
      {
        "target_contract": "FRAXShares",
        "function_name": "pool_burn_from",
        "arguments": [
          "msg.sender",
          "fxs_needed"
        ]
      },
      {
        "target_contract": "TransferHelper",
        "function_name": "safeTransferFrom",
        "arguments": [
          "TMP_801",
          "msg.sender",
          "TMP_802",
          "collateral_amount"
        ]
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "pool_mint",
        "arguments": [
          "msg.sender",
          "mint_amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "getCollateralPrice() returns(uint256)",
      "notMintPaused() returns()"
    ]
  },
  {
    "function_signature": "redeem1t1FRAX(uint256,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "FRAX_amount",
        "type": "uint256"
      },
      {
        "name": "COLLATERAL_out_min",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "COLLATERAL_RATIO_MAX",
      "FRAX",
      "collateral_token",
      "missing_decimals",
      "redeemCollateralBalances",
      "redemption_fee",
      "unclaimedPoolCollateral"
    ],
    "state_writes": [
      "lastRedeemed",
      "redeemCollateralBalances",
      "unclaimedPoolCollateral"
    ],
    "external_calls": [
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "global_collateral_ratio",
        "arguments": []
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "FRAX_amount",
          "TMP_809"
        ]
      },
      {
        "target_contract": "FraxPoolLibrary",
        "function_name": "calcRedeem1t1FRAX",
        "arguments": [
          "TMP_811",
          "FRAX_amount_precision"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_813",
          "redemption_fee"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "collateral_needed",
          "TMP_814"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_815",
          "1000000"
        ]
      },
      {
        "target_contract": "ERC20",
        "function_name": "balanceOf",
        "arguments": [
          "TMP_817"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_818",
          "unclaimedPoolCollateral"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_362",
          "collateral_needed"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "unclaimedPoolCollateral",
          "collateral_needed"
        ]
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "pool_burn_from",
        "arguments": [
          "msg.sender",
          "FRAX_amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "getCollateralPrice() returns(uint256)",
      "notRedeemPaused() returns()"
    ]
  },
  {
    "function_signature": "redeemFractionalFRAX(uint256,uint256,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "FRAX_amount",
        "type": "uint256"
      },
      {
        "name": "FXS_out_min",
        "type": "uint256"
      },
      {
        "name": "COLLATERAL_out_min",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "COLLATERAL_RATIO_MAX",
      "FRAX",
      "FXS",
      "PRICE_PRECISION",
      "collateral_token",
      "missing_decimals",
      "redeemCollateralBalances",
      "redeemFXSBalances",
      "redemption_fee",
      "unclaimedPoolCollateral",
      "unclaimedPoolFXS"
    ],
    "state_writes": [
      "lastRedeemed",
      "redeemCollateralBalances",
      "redeemFXSBalances",
      "unclaimedPoolCollateral",
      "unclaimedPoolFXS"
    ],
    "external_calls": [
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "fxs_price",
        "arguments": []
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "global_collateral_ratio",
        "arguments": []
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_835",
          "redemption_fee"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "FRAX_amount",
          "TMP_836"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_837",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "FRAX_amount_post_fee",
          "global_collateral_ratio"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_839",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "FRAX_amount_post_fee",
          "TMP_840"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "fxs_dollar_value_d18",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_842",
          "fxs_price"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "FRAX_amount_post_fee",
          "TMP_844"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "FRAX_amount_precision",
          "global_collateral_ratio"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_846",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "collateral_dollar_value",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_848",
          "col_price_usd"
        ]
      },
      {
        "target_contract": "ERC20",
        "function_name": "balanceOf",
        "arguments": [
          "TMP_850"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_851",
          "unclaimedPoolCollateral"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_385",
          "collateral_amount"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "unclaimedPoolCollateral",
          "collateral_amount"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_389",
          "fxs_amount"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "unclaimedPoolFXS",
          "fxs_amount"
        ]
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "pool_burn_from",
        "arguments": [
          "msg.sender",
          "FRAX_amount"
        ]
      },
      {
        "target_contract": "FRAXShares",
        "function_name": "pool_mint",
        "arguments": [
          "TMP_864",
          "fxs_amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "getCollateralPrice() returns(uint256)",
      "notRedeemPaused() returns()"
    ]
  },
  {
    "function_signature": "redeemAlgorithmicFRAX(uint256,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "FRAX_amount",
        "type": "uint256"
      },
      {
        "name": "FXS_out_min",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "FRAX",
      "FXS",
      "PRICE_PRECISION",
      "redeemFXSBalances",
      "redemption_fee",
      "unclaimedPoolFXS"
    ],
    "state_writes": [
      "lastRedeemed",
      "redeemFXSBalances",
      "unclaimedPoolFXS"
    ],
    "external_calls": [
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "fxs_price",
        "arguments": []
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "global_collateral_ratio",
        "arguments": []
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_871",
          "redemption_fee"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "fxs_dollar_value_d18",
          "TMP_872"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_873",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "fxs_dollar_value_d18",
          "PRICE_PRECISION"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_875",
          "fxs_price"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_403",
          "fxs_amount"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "unclaimedPoolFXS",
          "fxs_amount"
        ]
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "pool_burn_from",
        "arguments": [
          "msg.sender",
          "FRAX_amount"
        ]
      },
      {
        "target_contract": "FRAXShares",
        "function_name": "pool_mint",
        "arguments": [
          "TMP_882",
          "fxs_amount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "notRedeemPaused() returns()"
    ]
  },
  {
    "function_signature": "collectRedemption() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "FXS",
      "collateral_token",
      "lastRedeemed",
      "redeemCollateralBalances",
      "redeemFXSBalances",
      "redemption_delay",
      "unclaimedPoolCollateral",
      "unclaimedPoolFXS"
    ],
    "state_writes": [
      "redeemCollateralBalances",
      "redeemFXSBalances",
      "unclaimedPoolCollateral",
      "unclaimedPoolFXS"
    ],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "REF_409",
          "redemption_delay"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "unclaimedPoolFXS",
          "FXSAmount"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "unclaimedPoolCollateral",
          "CollateralAmount"
        ]
      },
      {
        "target_contract": "TransferHelper",
        "function_name": "safeTransfer",
        "arguments": [
          "TMP_892",
          "msg.sender",
          "FXSAmount"
        ]
      },
      {
        "target_contract": "TransferHelper",
        "function_name": "safeTransfer",
        "arguments": [
          "TMP_894",
          "msg.sender",
          "CollateralAmount"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "recollateralizeFRAX(uint256,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "collateral_amount",
        "type": "uint256"
      },
      {
        "name": "FXS_out_min",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "FRAX",
      "FXS",
      "bonus_rate",
      "collateral_token",
      "missing_decimals",
      "recollat_fee",
      "recollateralizePaused"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "fxs_price",
        "arguments": []
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "totalSupply",
        "arguments": []
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "global_collateral_ratio",
        "arguments": []
      },
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "globalCollateralValue",
        "arguments": []
      },
      {
        "target_contract": "FraxPoolLibrary",
        "function_name": "calcRecollateralizeFRAXInner",
        "arguments": [
          "collateral_amount_d18",
          "TMP_904",
          "global_collat_value",
          "frax_total_supply",
          "global_collateral_ratio"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "collateral_units",
          "TMP_905"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "TMP_907",
          "bonus_rate"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_908",
          "recollat_fee"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "amount_to_recollat",
          "TMP_909"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_910",
          "fxs_price"
        ]
      },
      {
        "target_contract": "TransferHelper",
        "function_name": "safeTransferFrom",
        "arguments": [
          "TMP_914",
          "msg.sender",
          "TMP_915",
          "collateral_units_precision"
        ]
      },
      {
        "target_contract": "FRAXShares",
        "function_name": "pool_mint",
        "arguments": [
          "msg.sender",
          "fxs_paid_back"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "getCollateralPrice() returns(uint256)"
    ]
  },
  {
    "function_signature": "buyBackFXS(uint256,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "FXS_amount",
        "type": "uint256"
      },
      {
        "name": "COLLATERAL_out_min",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "FRAX",
      "FXS",
      "buyBackPaused",
      "buyback_fee",
      "collateral_token",
      "missing_decimals"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "FRAXStablecoin",
        "function_name": "fxs_price",
        "arguments": []
      },
      {
        "target_contract": "FraxPoolLibrary",
        "function_name": "calcBuyBackFXS",
        "arguments": [
          "input_params"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_925",
          "buyback_fee"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "TMP_924",
          "TMP_926"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_927",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "collateral_equivalent_d18",
          "TMP_929"
        ]
      },
      {
        "target_contract": "FRAXShares",
        "function_name": "pool_burn_from",
        "arguments": [
          "msg.sender",
          "FXS_amount"
        ]
      },
      {
        "target_contract": "TransferHelper",
        "function_name": "safeTransfer",
        "arguments": [
          "TMP_934",
          "msg.sender",
          "collateral_precision"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "availableExcessCollatDV() returns(uint256)",
      "getCollateralPrice() returns(uint256)"
    ]
  },
  {
    "function_signature": "toggleMinting() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "MINT_PAUSER",
      "mintPaused"
    ],
    "state_writes": [
      "mintPaused"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool)()",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "toggleRedeeming() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "REDEEM_PAUSER",
      "redeemPaused"
    ],
    "state_writes": [
      "redeemPaused"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool)()",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "toggleRecollateralize() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "RECOLLATERALIZE_PAUSER",
      "recollateralizePaused"
    ],
    "state_writes": [
      "recollateralizePaused"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool)()",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "toggleBuyBack() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "BUYBACK_PAUSER",
      "buyBackPaused"
    ],
    "state_writes": [
      "buyBackPaused"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool)()",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "toggleCollateralPrice(uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_new_price",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "COLLATERAL_PRICE_PAUSER",
      "collateralPricePaused"
    ],
    "state_writes": [
      "collateralPricePaused",
      "pausedPrice"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool)()",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "setPoolParameters(uint256,uint256,uint256,uint256,uint256,uint256,uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "new_ceiling",
        "type": "uint256"
      },
      {
        "name": "new_bonus_rate",
        "type": "uint256"
      },
      {
        "name": "new_redemption_delay",
        "type": "uint256"
      },
      {
        "name": "new_mint_fee",
        "type": "uint256"
      },
      {
        "name": "new_redeem_fee",
        "type": "uint256"
      },
      {
        "name": "new_buyback_fee",
        "type": "uint256"
      },
      {
        "name": "new_recollat_fee",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "bonus_rate",
      "buyback_fee",
      "minting_fee",
      "pool_ceiling",
      "recollat_fee",
      "redemption_delay",
      "redemption_fee"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "setTimelock(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "new_timelock",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "timelock_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "calcMint1t1FRAX(uint256,uint256) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "col_price",
        "type": "uint256"
      },
      {
        "name": "collateral_amount_d18",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_977",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "collateral_amount_d18",
          "col_price"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_976",
          "1000000"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "calcMintAlgorithmicFRAX(uint256,uint256) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "fxs_price_usd",
        "type": "uint256"
      },
      {
        "name": "fxs_amount_d18",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_979",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "fxs_amount_d18",
          "fxs_price_usd"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_978",
          "1000000"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "calcMintFractionalFRAX(FraxPoolLibrary.MintFF_Params) returns(uint256,uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "params",
        "type": "FraxPoolLibrary.MintFF_Params"
      }
    ],
    "return_variables": [
      {
        "name": "calculated_fxs_needed",
        "type": "uint256"
      },
      {
        "name": "TMP_989",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "REF_446",
          "REF_448"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_980",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "REF_450",
          "REF_452"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_982",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "c_dollar_value_d18",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_984",
          "REF_456"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_985",
          "c_dollar_value_d18"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "calculated_fxs_dollar_value_d18",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_987",
          "REF_460"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "c_dollar_value_d18",
          "calculated_fxs_dollar_value_d18"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "calcRedeem1t1FRAX(uint256,uint256) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "col_price_usd",
        "type": "uint256"
      },
      {
        "name": "FRAX_amount",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_991",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "FRAX_amount",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_990",
          "col_price_usd"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "calcBuyBackFXS(FraxPoolLibrary.BuybackFXS_Params) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "params",
        "type": "FraxPoolLibrary.BuybackFXS_Params"
      }
    ],
    "return_variables": [
      {
        "name": "collateral_equivalent_d18",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "REF_465",
          "REF_467"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_994",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "fxs_dollar_value_d18",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_998",
          "REF_472"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "recollateralizeAmount(uint256,uint256,uint256) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "total_supply",
        "type": "uint256"
      },
      {
        "name": "global_collateral_ratio",
        "type": "uint256"
      },
      {
        "name": "global_collat_value",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1002",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "total_supply",
          "global_collateral_ratio"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_1000",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "target_collat_value",
          "global_collat_value"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "calcRecollateralizeFRAXInner(uint256,uint256,uint256,uint256,uint256) returns(uint256,uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "collateral_amount",
        "type": "uint256"
      },
      {
        "name": "col_price",
        "type": "uint256"
      },
      {
        "name": "global_collat_value",
        "type": "uint256"
      },
      {
        "name": "frax_total_supply",
        "type": "uint256"
      },
      {
        "name": "global_collateral_ratio",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1013",
        "type": "uint256"
      },
      {
        "name": "amount_to_recollat",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "collateral_amount",
          "col_price"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_1003",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "global_collat_value",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_1005",
          "frax_total_supply"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "global_collateral_ratio",
          "frax_total_supply"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "frax_total_supply",
          "effective_collateral_ratio"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "TMP_1007",
          "TMP_1008"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_1009",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "amount_to_recollat",
          "1000000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "div",
        "arguments": [
          "TMP_1012",
          "col_price"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "_msgSender() returns(address)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_1014",
        "type": "address"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_msgData() returns(bytes)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "msg.data",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "hasRole(bytes32,address) returns(bool)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1015",
        "type": "bool"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "contains",
        "arguments": [
          "REF_487",
          "account"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleMemberCount(bytes32) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1016",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "length",
        "arguments": [
          "REF_490"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleMember(bytes32,uint256) returns(address)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1017",
        "type": "address"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "at",
        "arguments": [
          "REF_493",
          "index"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "getRoleAdmin(bytes32) returns(bytes32)",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      }
    ],
    "return_variables": [
      {
        "name": "REF_496",
        "type": "bytes32"
      }
    ],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "grantRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_grantRole(bytes32,address) returns()",
      "_msgSender() returns(address)",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "revokeRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_msgSender() returns(address)",
      "_revokeRole(bytes32,address) returns()",
      "hasRole(bytes32,address) returns(bool)"
    ]
  },
  {
    "function_signature": "renounceRole(bytes32,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_msgSender() returns(address)",
      "_revokeRole(bytes32,address) returns()"
    ]
  },
  {
    "function_signature": "_setupRole(bytes32,address) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_grantRole(bytes32,address) returns()"
    ]
  },
  {
    "function_signature": "_setRoleAdmin(bytes32,bytes32) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "adminRole",
        "type": "bytes32"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [
      "_roles"
    ],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_grantRole(bytes32,address) returns()",
    "visibility": "private",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "add",
        "arguments": [
          "REF_506",
          "account"
        ]
      }
    ],
    "internal_calls": [
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "_revokeRole(bytes32,address) returns()",
    "visibility": "private",
    "parameters": [
      {
        "name": "role",
        "type": "bytes32"
      },
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "_roles"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "EnumerableSet",
        "function_name": "remove",
        "arguments": [
          "REF_509",
          "account"
        ]
      }
    ],
    "internal_calls": [
      "_msgSender() returns(address)"
    ]
  },
  {
    "function_signature": "quorumVotes() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "proposalThreshold() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "proposalMaxOperations() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "votingDelay() returns(uint256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "constructor(address,address,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "timelock_",
        "type": "address"
      },
      {
        "name": "fxs_",
        "type": "address"
      },
      {
        "name": "guardian_",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "fxs",
      "guardian",
      "timelock"
    ],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "propose(address[],uint256[],string[],bytes[],string,string) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "targets",
        "type": "address[]"
      },
      {
        "name": "values",
        "type": "uint256[]"
      },
      {
        "name": "signatures",
        "type": "string[]"
      },
      {
        "name": "calldatas",
        "type": "bytes[]"
      },
      {
        "name": "title",
        "type": "string"
      },
      {
        "name": "description",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "REF_529",
        "type": "uint256"
      }
    ],
    "state_reads": [
      "fxs",
      "latestProposalIds",
      "proposalCount",
      "votingPeriod"
    ],
    "state_writes": [
      "latestProposalIds",
      "proposalCount",
      "proposals"
    ],
    "external_calls": [
      {
        "target_contract": "FRAXShares",
        "function_name": "getPriorVotes",
        "arguments": [
          "msg.sender",
          "TMP_1040"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "add256(uint256,uint256) returns(uint256)",
      "proposalMaxOperations() returns(uint256)",
      "proposalThreshold() returns(uint256)",
      "state(uint256) returns(GovernorAlpha.ProposalState)",
      "sub256(uint256,uint256) returns(uint256)",
      "votingDelay() returns(uint256)"
    ]
  },
  {
    "function_signature": "queue(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "proposalId",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "proposals",
      "timelock"
    ],
    "state_writes": [
      "proposals"
    ],
    "external_calls": [
      {
        "target_contract": "TimelockInterface",
        "function_name": "delay",
        "arguments": []
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_queueOrRevert(address,uint256,string,bytes,uint256) returns()",
      "add256(uint256,uint256) returns(uint256)",
      "state(uint256) returns(GovernorAlpha.ProposalState)"
    ]
  },
  {
    "function_signature": "_queueOrRevert(address,uint256,string,bytes,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "value",
        "type": "uint256"
      },
      {
        "name": "signature",
        "type": "string"
      },
      {
        "name": "data",
        "type": "bytes"
      },
      {
        "name": "eta",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "timelock"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "TimelockInterface",
        "function_name": "queuedTransactions",
        "arguments": [
          "TMP_1078"
        ]
      },
      {
        "target_contract": "TimelockInterface",
        "function_name": "queueTransaction",
        "arguments": [
          "target",
          "value",
          "signature",
          "data",
          "eta"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.abi.encode()()",
      "Solidity.keccak256(bytes)()",
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "execute(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "proposalId",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "proposals",
      "timelock"
    ],
    "state_writes": [
      "proposals"
    ],
    "external_calls": [
      {
        "target_contract": "TimelockInterface",
        "function_name": "executeTransaction",
        "arguments": [
          "REF_554",
          "REF_556",
          "REF_558",
          "REF_560",
          "REF_561"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "state(uint256) returns(GovernorAlpha.ProposalState)"
    ]
  },
  {
    "function_signature": "cancel(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "proposalId",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "fxs",
      "guardian",
      "proposals",
      "timelock"
    ],
    "state_writes": [
      "proposals"
    ],
    "external_calls": [
      {
        "target_contract": "FRAXShares",
        "function_name": "getPriorVotes",
        "arguments": [
          "REF_565",
          "TMP_1094"
        ]
      },
      {
        "target_contract": "TimelockInterface",
        "function_name": "cancelTransaction",
        "arguments": [
          "REF_571",
          "REF_573",
          "REF_575",
          "REF_577",
          "REF_578"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "proposalThreshold() returns(uint256)",
      "state(uint256) returns(GovernorAlpha.ProposalState)",
      "sub256(uint256,uint256) returns(uint256)"
    ]
  },
  {
    "function_signature": "getActions(uint256) returns(address[],uint256[],string[],bytes[])",
    "visibility": "public",
    "parameters": [
      {
        "name": "proposalId",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "REF_583",
        "type": "bytes[]"
      },
      {
        "name": "REF_582",
        "type": "string[]"
      },
      {
        "name": "REF_581",
        "type": "uint256[]"
      },
      {
        "name": "REF_580",
        "type": "address[]"
      }
    ],
    "state_reads": [
      "proposals"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "getReceipt(uint256,address) returns(GovernorAlpha.Receipt)",
    "visibility": "public",
    "parameters": [
      {
        "name": "proposalId",
        "type": "uint256"
      },
      {
        "name": "voter",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "REF_586",
        "type": "GovernorAlpha.Receipt"
      }
    ],
    "state_reads": [
      "proposals"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "state(uint256) returns(GovernorAlpha.ProposalState)",
    "visibility": "public",
    "parameters": [
      {
        "name": "proposalId",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "REF_599",
        "type": "GovernorAlpha.ProposalState"
      },
      {
        "name": "REF_597",
        "type": "GovernorAlpha.ProposalState"
      },
      {
        "name": "REF_593",
        "type": "GovernorAlpha.ProposalState"
      },
      {
        "name": "REF_591",
        "type": "GovernorAlpha.ProposalState"
      },
      {
        "name": "REF_601",
        "type": "GovernorAlpha.ProposalState"
      },
      {
        "name": "REF_589",
        "type": "GovernorAlpha.ProposalState"
      },
      {
        "name": "REF_605",
        "type": "GovernorAlpha.ProposalState"
      },
      {
        "name": "REF_604",
        "type": "GovernorAlpha.ProposalState"
      }
    ],
    "state_reads": [
      "proposalCount",
      "proposals",
      "timelock"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "TimelockInterface",
        "function_name": "GRACE_PERIOD",
        "arguments": []
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "add256(uint256,uint256) returns(uint256)",
      "quorumVotes() returns(uint256)"
    ]
  },
  {
    "function_signature": "castVote(uint256,bool) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "proposalId",
        "type": "uint256"
      },
      {
        "name": "support",
        "type": "bool"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1118",
        "type": "None"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_castVote(address,uint256,bool) returns()"
    ]
  },
  {
    "function_signature": "castVoteBySig(uint256,bool,uint8,bytes32,bytes32) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "proposalId",
        "type": "uint256"
      },
      {
        "name": "support",
        "type": "bool"
      },
      {
        "name": "v",
        "type": "uint8"
      },
      {
        "name": "r",
        "type": "bytes32"
      },
      {
        "name": "s",
        "type": "bytes32"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1133",
        "type": "None"
      }
    ],
    "state_reads": [
      "BALLOT_TYPEHASH",
      "DOMAIN_TYPEHASH",
      "name"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.abi.encode()()",
      "Solidity.abi.encodePacked()()",
      "Solidity.ecrecover(bytes32,uint8,bytes32,bytes32)()",
      "Solidity.keccak256(bytes)()",
      "Solidity.require(bool,string)()",
      "_castVote(address,uint256,bool) returns()",
      "getChainId() returns(uint256)"
    ]
  },
  {
    "function_signature": "_castVote(address,uint256,bool) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "voter",
        "type": "address"
      },
      {
        "name": "proposalId",
        "type": "uint256"
      },
      {
        "name": "support",
        "type": "bool"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "fxs",
      "proposals"
    ],
    "state_writes": [
      "proposals"
    ],
    "external_calls": [
      {
        "target_contract": "FRAXShares",
        "function_name": "getPriorVotes",
        "arguments": [
          "voter",
          "REF_615"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "add256(uint256,uint256) returns(uint256)",
      "state(uint256) returns(GovernorAlpha.ProposalState)"
    ]
  },
  {
    "function_signature": "__acceptAdmin() returns()",
    "visibility": "public",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "guardian",
      "timelock"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "TimelockInterface",
        "function_name": "acceptAdmin",
        "arguments": []
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "__abdicate() returns()",
    "visibility": "public",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "guardian"
    ],
    "state_writes": [
      "guardian"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "__setVotingPeriod(uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "period",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "guardian"
    ],
    "state_writes": [
      "votingPeriod"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "__setTimelockAddress(address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "timelock_",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "guardian"
    ],
    "state_writes": [
      "timelock"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "__queueSetTimelockPendingAdmin(address,uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "newPendingAdmin",
        "type": "address"
      },
      {
        "name": "eta",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "guardian",
      "timelock"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "TimelockInterface",
        "function_name": "queueTransaction",
        "arguments": [
          "TMP_1156",
          "0",
          "setPendingAdmin(address)",
          "TMP_1157",
          "eta"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.abi.encode()()",
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "__executeSetTimelockPendingAdmin(address,uint256) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "newPendingAdmin",
        "type": "address"
      },
      {
        "name": "eta",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "guardian",
      "timelock"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "TimelockInterface",
        "function_name": "executeTransaction",
        "arguments": [
          "TMP_1161",
          "0",
          "setPendingAdmin(address)",
          "TMP_1162",
          "eta"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.abi.encode()()",
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "add256(uint256,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint256"
      },
      {
        "name": "b",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "c",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "sub256(uint256,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint256"
      },
      {
        "name": "b",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1169",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "getChainId() returns(uint256)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "chainId",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.chainid()()"
    ]
  },
  {
    "function_signature": "sqrt(uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "y",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "encode(uint112) returns(FixedPoint.uq112x112)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "x",
        "type": "uint112"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1183",
        "type": "FixedPoint.uq112x112"
      }
    ],
    "state_reads": [
      "RESOLUTION"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "encode144(uint144) returns(FixedPoint.uq144x112)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "x",
        "type": "uint144"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1186",
        "type": "FixedPoint.uq144x112"
      }
    ],
    "state_reads": [
      "RESOLUTION"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "div(FixedPoint.uq112x112,uint112) returns(FixedPoint.uq112x112)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "self",
        "type": "FixedPoint.uq112x112"
      },
      {
        "name": "x",
        "type": "uint112"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1191",
        "type": "FixedPoint.uq112x112"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "mul(FixedPoint.uq112x112,uint256) returns(FixedPoint.uq144x112)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "self",
        "type": "FixedPoint.uq112x112"
      },
      {
        "name": "y",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1200",
        "type": "FixedPoint.uq144x112"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "fraction(uint112,uint112) returns(FixedPoint.uq112x112)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "numerator",
        "type": "uint112"
      },
      {
        "name": "denominator",
        "type": "uint112"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1206",
        "type": "FixedPoint.uq112x112"
      }
    ],
    "state_reads": [
      "RESOLUTION"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "decode(FixedPoint.uq112x112) returns(uint112)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "self",
        "type": "FixedPoint.uq112x112"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1208",
        "type": "uint112"
      }
    ],
    "state_reads": [
      "RESOLUTION"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "decode144(FixedPoint.uq144x112) returns(uint144)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "self",
        "type": "FixedPoint.uq144x112"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1210",
        "type": "uint144"
      }
    ],
    "state_reads": [
      "RESOLUTION"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "reciprocal(FixedPoint.uq112x112) returns(FixedPoint.uq112x112)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "self",
        "type": "FixedPoint.uq112x112"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1215",
        "type": "FixedPoint.uq112x112"
      }
    ],
    "state_reads": [
      "Q224"
    ],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "sqrt(FixedPoint.uq112x112) returns(FixedPoint.uq112x112)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "self",
        "type": "FixedPoint.uq112x112"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1220",
        "type": "FixedPoint.uq112x112"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "Babylonian",
        "function_name": "sqrt",
        "arguments": [
          "TMP_1216"
        ]
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "add(uint256,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint256"
      },
      {
        "name": "b",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "c",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "sub(uint256,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint256"
      },
      {
        "name": "b",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1227",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "sub(uint256,uint256,string) returns(uint256)"
    ]
  },
  {
    "function_signature": "sub(uint256,uint256,string) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint256"
      },
      {
        "name": "b",
        "type": "uint256"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "c",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "mul(uint256,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint256"
      },
      {
        "name": "b",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "c",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "div(uint256,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint256"
      },
      {
        "name": "b",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1236",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "div(uint256,uint256,string) returns(uint256)"
    ]
  },
  {
    "function_signature": "div(uint256,uint256,string) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint256"
      },
      {
        "name": "b",
        "type": "uint256"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "c",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "mod(uint256,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint256"
      },
      {
        "name": "b",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1240",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "mod(uint256,uint256,string) returns(uint256)"
    ]
  },
  {
    "function_signature": "mod(uint256,uint256,string) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "a",
        "type": "uint256"
      },
      {
        "name": "b",
        "type": "uint256"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1243",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "constructor() returns()",
    "visibility": "public",
    "parameters": [],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "priceFeed"
    ],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "getLatestPrice() returns(int256)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "price",
        "type": "int256"
      }
    ],
    "state_reads": [
      "priceFeed"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "AggregatorV3Interface",
        "function_name": "latestRoundData",
        "arguments": []
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "getDecimals() returns(uint8)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_1251",
        "type": "uint8"
      }
    ],
    "state_reads": [
      "priceFeed"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "AggregatorV3Interface",
        "function_name": "decimals",
        "arguments": []
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "constructor(address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "owner"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "nominateNewOwner(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "nominatedOwner"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyOwner() returns()"
    ]
  },
  {
    "function_signature": "acceptOwnership() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "nominatedOwner",
      "owner"
    ],
    "state_writes": [
      "nominatedOwner",
      "owner"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "constructor(address,address,address,address,address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "factory",
        "type": "address"
      },
      {
        "name": "tokenA",
        "type": "address"
      },
      {
        "name": "tokenB",
        "type": "address"
      },
      {
        "name": "_owner_address",
        "type": "address"
      },
      {
        "name": "_timelock_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "blockTimestampLast",
      "pair",
      "price0CumulativeLast",
      "price1CumulativeLast",
      "timelock_address",
      "token0",
      "token1"
    ],
    "external_calls": [
      {
        "target_contract": "UniswapV2Library",
        "function_name": "pairFor",
        "arguments": [
          "factory",
          "tokenA",
          "tokenB"
        ]
      },
      {
        "target_contract": "IUniswapV2Pair",
        "function_name": "token0",
        "arguments": []
      },
      {
        "target_contract": "IUniswapV2Pair",
        "function_name": "token1",
        "arguments": []
      },
      {
        "target_contract": "IUniswapV2Pair",
        "function_name": "price0CumulativeLast",
        "arguments": []
      },
      {
        "target_contract": "IUniswapV2Pair",
        "function_name": "price1CumulativeLast",
        "arguments": []
      },
      {
        "target_contract": "IUniswapV2Pair",
        "function_name": "getReserves",
        "arguments": []
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "constructor(address) returns()"
    ]
  },
  {
    "function_signature": "setTimelock(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_timelock_address",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "timelock_address"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "setPeriod(uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_period",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "PERIOD"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "setConsultLeniency(uint256) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_consult_leniency",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "CONSULT_LENIENCY"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "setAllowStaleConsults(bool) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_allow_stale_consults",
        "type": "bool"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "ALLOW_STALE_CONSULTS"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyByOwnGov() returns()"
    ]
  },
  {
    "function_signature": "canUpdate() returns(bool)",
    "visibility": "public",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_1280",
        "type": "bool"
      }
    ],
    "state_reads": [
      "PERIOD",
      "blockTimestampLast"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "UniswapV2OracleLibrary",
        "function_name": "currentBlockTimestamp",
        "arguments": []
      }
    ],
    "internal_calls": []
  },
  {
    "function_signature": "update() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "PERIOD",
      "blockTimestampLast",
      "pair",
      "price0CumulativeLast",
      "price1CumulativeLast"
    ],
    "state_writes": [
      "blockTimestampLast",
      "price0Average",
      "price0CumulativeLast",
      "price1Average",
      "price1CumulativeLast"
    ],
    "external_calls": [
      {
        "target_contract": "UniswapV2OracleLibrary",
        "function_name": "currentCumulativePrices",
        "arguments": [
          "TMP_1281"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "consult(address,uint256) returns(uint256)",
    "visibility": "public",
    "parameters": [
      {
        "name": "token",
        "type": "address"
      },
      {
        "name": "amountIn",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [
      "ALLOW_STALE_CONSULTS",
      "CONSULT_LENIENCY",
      "PERIOD",
      "blockTimestampLast",
      "price0Average",
      "price1Average",
      "token0",
      "token1"
    ],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "UniswapV2OracleLibrary",
        "function_name": "currentBlockTimestamp",
        "arguments": []
      },
      {
        "target_contract": "FixedPoint",
        "function_name": "mul",
        "arguments": [
          "price0Average",
          "amountIn"
        ]
      },
      {
        "target_contract": "FixedPoint",
        "function_name": "decode144",
        "arguments": [
          "TMP_1300"
        ]
      },
      {
        "target_contract": "FixedPoint",
        "function_name": "mul",
        "arguments": [
          "price1Average",
          "amountIn"
        ]
      },
      {
        "target_contract": "FixedPoint",
        "function_name": "decode144",
        "arguments": [
          "TMP_1304"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "constructor(address) returns()",
    "visibility": "public",
    "parameters": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "owner"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "nominateNewOwner(address) returns()",
    "visibility": "external",
    "parameters": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [
      "nominatedOwner"
    ],
    "external_calls": [],
    "internal_calls": [
      "onlyOwner() returns()"
    ]
  },
  {
    "function_signature": "acceptOwnership() returns()",
    "visibility": "external",
    "parameters": [],
    "return_variables": [],
    "state_reads": [
      "nominatedOwner",
      "owner"
    ],
    "state_writes": [
      "nominatedOwner",
      "owner"
    ],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "safeApprove(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "token",
        "type": "address"
      },
      {
        "name": "to",
        "type": "address"
      },
      {
        "name": "value",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.abi.decode()()",
      "Solidity.abi.encodeWithSelector()()",
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "safeTransfer(address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "token",
        "type": "address"
      },
      {
        "name": "to",
        "type": "address"
      },
      {
        "name": "value",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.abi.decode()()",
      "Solidity.abi.encodeWithSelector()()",
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "safeTransferFrom(address,address,address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "token",
        "type": "address"
      },
      {
        "name": "from",
        "type": "address"
      },
      {
        "name": "to",
        "type": "address"
      },
      {
        "name": "value",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.abi.decode()()",
      "Solidity.abi.encodeWithSelector()()",
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "safeTransferETH(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "to",
        "type": "address"
      },
      {
        "name": "value",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "sortTokens(address,address) returns(address,address)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "tokenA",
        "type": "address"
      },
      {
        "name": "tokenB",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "pairFor(address,address,address) returns(address)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "factory",
        "type": "address"
      },
      {
        "name": "tokenA",
        "type": "address"
      },
      {
        "name": "tokenB",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "IUniswapV2Factory",
        "function_name": "getPair",
        "arguments": [
          "token0",
          "token1"
        ]
      }
    ],
    "internal_calls": [
      "sortTokens(address,address) returns(address,address)"
    ]
  },
  {
    "function_signature": "pairForCreate2(address,address,address) returns(address)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "factory",
        "type": "address"
      },
      {
        "name": "tokenA",
        "type": "address"
      },
      {
        "name": "tokenB",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.abi.encodePacked()()",
      "Solidity.keccak256(bytes)()",
      "sortTokens(address,address) returns(address,address)"
    ]
  },
  {
    "function_signature": "getReserves(address,address,address) returns(uint256,uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "factory",
        "type": "address"
      },
      {
        "name": "tokenA",
        "type": "address"
      },
      {
        "name": "tokenB",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "IUniswapV2Pair",
        "function_name": "getReserves",
        "arguments": []
      }
    ],
    "internal_calls": [
      "pairFor(address,address,address) returns(address)",
      "sortTokens(address,address) returns(address,address)"
    ]
  },
  {
    "function_signature": "quote(uint256,uint256,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "amountA",
        "type": "uint256"
      },
      {
        "name": "reserveA",
        "type": "uint256"
      },
      {
        "name": "reserveB",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "amountA",
          "reserveB"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "getAmountOut(uint256,uint256,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "amountIn",
        "type": "uint256"
      },
      {
        "name": "reserveIn",
        "type": "uint256"
      },
      {
        "name": "reserveOut",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "amountIn",
          "997"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "amountInWithFee",
          "reserveOut"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "reserveIn",
          "1000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "TMP_1380",
          "amountInWithFee"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "getAmountIn(uint256,uint256,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "amountOut",
        "type": "uint256"
      },
      {
        "name": "reserveIn",
        "type": "uint256"
      },
      {
        "name": "reserveOut",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "reserveIn",
          "amountOut"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "TMP_1389",
          "1000"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "sub",
        "arguments": [
          "reserveOut",
          "amountOut"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "mul",
        "arguments": [
          "TMP_1391",
          "997"
        ]
      },
      {
        "target_contract": "SafeMath",
        "function_name": "add",
        "arguments": [
          "TMP_1393",
          "1"
        ]
      }
    ],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "getAmountsOut(address,uint256,address[]) returns(uint256[])",
    "visibility": "internal",
    "parameters": [
      {
        "name": "factory",
        "type": "address"
      },
      {
        "name": "amountIn",
        "type": "uint256"
      },
      {
        "name": "path",
        "type": "address[]"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "getAmountOut(uint256,uint256,uint256) returns(uint256)",
      "getReserves(address,address,address) returns(uint256,uint256)"
    ]
  },
  {
    "function_signature": "getAmountsIn(address,uint256,address[]) returns(uint256[])",
    "visibility": "internal",
    "parameters": [
      {
        "name": "factory",
        "type": "address"
      },
      {
        "name": "amountOut",
        "type": "uint256"
      },
      {
        "name": "path",
        "type": "address[]"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "getAmountIn(uint256,uint256,uint256) returns(uint256)",
      "getReserves(address,address,address) returns(uint256,uint256)"
    ]
  },
  {
    "function_signature": "currentBlockTimestamp() returns(uint32)",
    "visibility": "internal",
    "parameters": [],
    "return_variables": [
      {
        "name": "TMP_1418",
        "type": "uint32"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "currentCumulativePrices(address) returns(uint256,uint256,uint32)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "pair",
        "type": "address"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [
      {
        "target_contract": "IUniswapV2Pair",
        "function_name": "price0CumulativeLast",
        "arguments": []
      },
      {
        "target_contract": "IUniswapV2Pair",
        "function_name": "price1CumulativeLast",
        "arguments": []
      },
      {
        "target_contract": "IUniswapV2Pair",
        "function_name": "getReserves",
        "arguments": []
      },
      {
        "target_contract": "FixedPoint",
        "function_name": "fraction",
        "arguments": [
          "reserve1",
          "reserve0"
        ]
      },
      {
        "target_contract": "FixedPoint",
        "function_name": "fraction",
        "arguments": [
          "reserve0",
          "reserve1"
        ]
      }
    ],
    "internal_calls": [
      "currentBlockTimestamp() returns(uint32)"
    ]
  },
  {
    "function_signature": "isContract(address) returns(bool)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "account",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1433",
        "type": "bool"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "sendValue(address,uint256) returns()",
    "visibility": "internal",
    "parameters": [
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.balance(address)()",
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "functionCall(address,bytes) returns(bytes)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1439",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "functionCall(address,bytes,string) returns(bytes)"
    ]
  },
  {
    "function_signature": "functionCall(address,bytes,string) returns(bytes)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "data",
        "type": "bytes"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1440",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "functionCallWithValue(address,bytes,uint256,string) returns(bytes)"
    ]
  },
  {
    "function_signature": "functionCallWithValue(address,bytes,uint256) returns(bytes)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "data",
        "type": "bytes"
      },
      {
        "name": "value",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1441",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "functionCallWithValue(address,bytes,uint256,string) returns(bytes)"
    ]
  },
  {
    "function_signature": "functionCallWithValue(address,bytes,uint256,string) returns(bytes)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "data",
        "type": "bytes"
      },
      {
        "name": "value",
        "type": "uint256"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1448",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.balance(address)()",
      "Solidity.require(bool,string)()",
      "_verifyCallResult(bool,bytes,string) returns(bytes)",
      "isContract(address) returns(bool)"
    ]
  },
  {
    "function_signature": "functionStaticCall(address,bytes) returns(bytes)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1449",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "functionStaticCall(address,bytes,string) returns(bytes)"
    ]
  },
  {
    "function_signature": "functionStaticCall(address,bytes,string) returns(bytes)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "data",
        "type": "bytes"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1452",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_verifyCallResult(bool,bytes,string) returns(bytes)",
      "isContract(address) returns(bool)"
    ]
  },
  {
    "function_signature": "functionDelegateCall(address,bytes) returns(bytes)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1453",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "functionDelegateCall(address,bytes,string) returns(bytes)"
    ]
  },
  {
    "function_signature": "functionDelegateCall(address,bytes,string) returns(bytes)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "data",
        "type": "bytes"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1456",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()",
      "_verifyCallResult(bool,bytes,string) returns(bytes)",
      "isContract(address) returns(bool)"
    ]
  },
  {
    "function_signature": "_verifyCallResult(bool,bytes,string) returns(bytes)",
    "visibility": "private",
    "parameters": [
      {
        "name": "success",
        "type": "bool"
      },
      {
        "name": "returndata",
        "type": "bytes"
      },
      {
        "name": "errorMessage",
        "type": "string"
      }
    ],
    "return_variables": [
      {
        "name": "returndata",
        "type": "bytes"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.mload(uint256)()",
      "Solidity.revert(string)()",
      "Solidity.revert(uint256,uint256)()"
    ]
  },
  {
    "function_signature": "_add(EnumerableSet.Set,bytes32) returns(bool)",
    "visibility": "private",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.Set"
      },
      {
        "name": "value",
        "type": "bytes32"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_contains(EnumerableSet.Set,bytes32) returns(bool)"
    ]
  },
  {
    "function_signature": "_remove(EnumerableSet.Set,bytes32) returns(bool)",
    "visibility": "private",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.Set"
      },
      {
        "name": "value",
        "type": "bytes32"
      }
    ],
    "return_variables": [],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_contains(EnumerableSet.Set,bytes32) returns(bool)",
    "visibility": "private",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.Set"
      },
      {
        "name": "value",
        "type": "bytes32"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1473",
        "type": "bool"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_length(EnumerableSet.Set) returns(uint256)",
    "visibility": "private",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.Set"
      }
    ],
    "return_variables": [
      {
        "name": "REF_739",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": []
  },
  {
    "function_signature": "_at(EnumerableSet.Set,uint256) returns(bytes32)",
    "visibility": "private",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.Set"
      },
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "REF_743",
        "type": "bytes32"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "Solidity.require(bool,string)()"
    ]
  },
  {
    "function_signature": "add(EnumerableSet.AddressSet,address) returns(bool)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.AddressSet"
      },
      {
        "name": "value",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1478",
        "type": "bool"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_add(EnumerableSet.Set,bytes32) returns(bool)"
    ]
  },
  {
    "function_signature": "remove(EnumerableSet.AddressSet,address) returns(bool)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.AddressSet"
      },
      {
        "name": "value",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1481",
        "type": "bool"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_remove(EnumerableSet.Set,bytes32) returns(bool)"
    ]
  },
  {
    "function_signature": "contains(EnumerableSet.AddressSet,address) returns(bool)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.AddressSet"
      },
      {
        "name": "value",
        "type": "address"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1484",
        "type": "bool"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_contains(EnumerableSet.Set,bytes32) returns(bool)"
    ]
  },
  {
    "function_signature": "length(EnumerableSet.AddressSet) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.AddressSet"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1485",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_length(EnumerableSet.Set) returns(uint256)"
    ]
  },
  {
    "function_signature": "at(EnumerableSet.AddressSet,uint256) returns(address)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.AddressSet"
      },
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1488",
        "type": "address"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_at(EnumerableSet.Set,uint256) returns(bytes32)"
    ]
  },
  {
    "function_signature": "add(EnumerableSet.UintSet,uint256) returns(bool)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.UintSet"
      },
      {
        "name": "value",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1490",
        "type": "bool"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_add(EnumerableSet.Set,bytes32) returns(bool)"
    ]
  },
  {
    "function_signature": "remove(EnumerableSet.UintSet,uint256) returns(bool)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.UintSet"
      },
      {
        "name": "value",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1492",
        "type": "bool"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_remove(EnumerableSet.Set,bytes32) returns(bool)"
    ]
  },
  {
    "function_signature": "contains(EnumerableSet.UintSet,uint256) returns(bool)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.UintSet"
      },
      {
        "name": "value",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1494",
        "type": "bool"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_contains(EnumerableSet.Set,bytes32) returns(bool)"
    ]
  },
  {
    "function_signature": "length(EnumerableSet.UintSet) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.UintSet"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1495",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_length(EnumerableSet.Set) returns(uint256)"
    ]
  },
  {
    "function_signature": "at(EnumerableSet.UintSet,uint256) returns(uint256)",
    "visibility": "internal",
    "parameters": [
      {
        "name": "set",
        "type": "EnumerableSet.UintSet"
      },
      {
        "name": "index",
        "type": "uint256"
      }
    ],
    "return_variables": [
      {
        "name": "TMP_1497",
        "type": "uint256"
      }
    ],
    "state_reads": [],
    "state_writes": [],
    "external_calls": [],
    "internal_calls": [
      "_at(EnumerableSet.Set,uint256) returns(bytes32)"
    ]
  }
]