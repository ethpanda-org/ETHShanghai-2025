{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xec261261c83B76549181909ec09995e56Ca549E7",
      "txHash": "0x46105f35f0946cb1d7604fc4ea3f53ff5410810e503efcde4522d56c6274ca14",
      "kind": "uups"
    }
  ],
  "impls": {
    "867360608367f5edb96e77ea802e51ddb5002ad8970b477d92bf2cd85f41c6eb": {
      "address": "0xDb5f27B2280683FC4e2202ADfb01838da741b364",
      "txHash": "0x973c3bf164b49ae11f152c63050bc5e6891cc4c7277779b759153bd9d76779d6",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_baseMetadataURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:56"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:57"
          },
          {
            "label": "_tokenTypeOf",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_uint8)",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:59"
          },
          {
            "label": "_hasBadge",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_bool))",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:60"
          },
          {
            "label": "_tokenIdOf",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_mapping(t_uint8,t_uint256))",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:61"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:62"
          },
          {
            "label": "tokenValidationHash",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:63"
          },
          {
            "label": "identityRegistry",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:66"
          },
          {
            "label": "reputationRegistry",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:67"
          },
          {
            "label": "validationRegistry",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:68"
          },
          {
            "label": "minAvgScore",
            "offset": 20,
            "slot": "9",
            "type": "t_uint8",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:69"
          },
          {
            "label": "minValidationResponse",
            "offset": 21,
            "slot": "9",
            "type": "t_uint8",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:70"
          },
          {
            "label": "preferredValidator",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:71"
          },
          {
            "label": "enforceRegistryChecks",
            "offset": 20,
            "slot": "10",
            "type": "t_bool",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:72"
          },
          {
            "label": "issuerAgentId",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:73"
          },
          {
            "label": "dynamicAgent",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:77"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:88"
          },
          {
            "label": "trustedForwarderAddress",
            "offset": 0,
            "slot": "14",
            "type": "t_address",
            "contract": "CrediNetSBTUpgradeable",
            "src": "contracts\\upgradeable\\CrediNetSBTUpgradeable.sol:137"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)835_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721EnumerableStorage)626_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)314_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)772_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(address => mapping(uint8 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(address => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
