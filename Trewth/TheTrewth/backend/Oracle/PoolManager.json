{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        {
          "name": "spender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "balance",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "clear",
      "inputs": [
        {
          "name": "currency",
          "type": "address",
          "internalType": "Currency"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "collectProtocolFees",
      "inputs": [
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "currency",
          "type": "address",
          "internalType": "Currency"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "amountCollected",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "donate",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "amount0",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount1",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hookData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "delta",
          "type": "int256",
          "internalType": "BalanceDelta"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        {
          "name": "slot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        {
          "name": "startSlot",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "nSlots",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "extsload",
      "inputs": [
        {
          "name": "slots",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "exttload",
      "inputs": [
        {
          "name": "slots",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "exttload",
      "inputs": [
        {
          "name": "slot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "sqrtPriceX96",
          "type": "uint160",
          "internalType": "uint160"
        }
      ],
      "outputs": [
        {
          "name": "tick",
          "type": "int24",
          "internalType": "int24"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isOperator",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "isOperator",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "modifyLiquidity",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IPoolManager.ModifyLiquidityParams",
          "components": [
            {
              "name": "tickLower",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "tickUpper",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "salt",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "name": "hookData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "callerDelta",
          "type": "int256",
          "internalType": "BalanceDelta"
        },
        {
          "name": "feesAccrued",
          "type": "int256",
          "internalType": "BalanceDelta"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "protocolFeeController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "protocolFeesAccrued",
      "inputs": [
        {
          "name": "currency",
          "type": "address",
          "internalType": "Currency"
        }
      ],
      "outputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setOperator",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setProtocolFee",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "newProtocolFee",
          "type": "uint24",
          "internalType": "uint24"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setProtocolFeeController",
      "inputs": [
        {
          "name": "controller",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "settle",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "settleFor",
      "inputs": [
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "swap",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IPoolManager.SwapParams",
          "components": [
            {
              "name": "zeroForOne",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "amountSpecified",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "sqrtPriceLimitX96",
              "type": "uint160",
              "internalType": "uint160"
            }
          ]
        },
        {
          "name": "hookData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "swapDelta",
          "type": "int256",
          "internalType": "BalanceDelta"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sync",
      "inputs": [
        {
          "name": "currency",
          "type": "address",
          "internalType": "Currency"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "take",
      "inputs": [
        {
          "name": "currency",
          "type": "address",
          "internalType": "Currency"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        {
          "name": "receiver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "receiver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unlock",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "result",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateDynamicLPFee",
      "inputs": [
        {
          "name": "key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "newDynamicLPFee",
          "type": "uint24",
          "internalType": "uint24"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Donate",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount0",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "amount1",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialize",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "currency0",
          "type": "address",
          "indexed": true,
          "internalType": "Currency"
        },
        {
          "name": "currency1",
          "type": "address",
          "indexed": true,
          "internalType": "Currency"
        },
        {
          "name": "fee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        },
        {
          "name": "tickSpacing",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "hooks",
          "type": "address",
          "indexed": false,
          "internalType": "contract IHooks"
        },
        {
          "name": "sqrtPriceX96",
          "type": "uint160",
          "indexed": false,
          "internalType": "uint160"
        },
        {
          "name": "tick",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ModifyLiquidity",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tickLower",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "tickUpper",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "liquidityDelta",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSet",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolReserves",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "currency0",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "currency1",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "reserve0",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "reserve1",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "nativeGlobalBalance",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "sqrtPriceX96",
          "type": "uint160",
          "indexed": false,
          "internalType": "uint160"
        },
        {
          "name": "liquidity",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "tick",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProtocolFeeControllerUpdated",
      "inputs": [
        {
          "name": "protocolFeeController",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProtocolFeeUpdated",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "protocolFee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Swap",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount0",
          "type": "int128",
          "indexed": false,
          "internalType": "int128"
        },
        {
          "name": "amount1",
          "type": "int128",
          "indexed": false,
          "internalType": "int128"
        },
        {
          "name": "sqrtPriceX96",
          "type": "uint160",
          "indexed": false,
          "internalType": "uint160"
        },
        {
          "name": "liquidity",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "tick",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "fee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "caller",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyUnlocked",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrenciesOutOfOrderOrEqual",
      "inputs": [
        {
          "name": "currency0",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "currency1",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "CurrencyNotSettled",
      "inputs": []
    },
    {
      "type": "error",
      "name": "DelegateCallNotAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCaller",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ManagerLocked",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MustClearExactPositiveDelta",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NonzeroNativeValue",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PoolNotInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProtocolFeeCurrencySynced",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProtocolFeeTooLarge",
      "inputs": [
        {
          "name": "fee",
          "type": "uint24",
          "internalType": "uint24"
        }
      ]
    },
    {
      "type": "error",
      "name": "SwapAmountCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TickSpacingTooLarge",
      "inputs": [
        {
          "name": "tickSpacing",
          "type": "int24",
          "internalType": "int24"
        }
      ]
    },
    {
      "type": "error",
      "name": "TickSpacingTooSmall",
      "inputs": [
        {
          "name": "tickSpacing",
          "type": "int24",
          "internalType": "int24"
        }
      ]
    },
    {
      "type": "error",
      "name": "UnauthorizedDynamicLPFeeUpdate",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60a03460a057601f615faa38819003918201601f19168301916001600160401b0383118484101760a45780849260209460405283398101031260a057516001600160a01b0381169081900360a0575f80546001600160a01b0319168217815560405191907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a330608052615ef190816100b98239608051816136250152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60a0806040526004361015610012575f80fd5b5f3560e01c908162fdd58e14612dd45750806301ffc9a714612d15578063095bcdb614612c6b5780630b0d9c0914612bdf57806311da60b414612b84578063156e29f614612ad45780631e2eaeaf14612a9a578063234266d7146127fb5780632d7713891461275057806335fd631a146126dc5780633dd45adb14612678578063426a8493146125f457806348c89491146123695780635275965114612251578063558a72971461217a578063598af9e7146120e25780635a6bcfda1461154e5780636276cbbe146110955780637e87ce7d14610f5857806380f0b44c14610e865780638161b87414610d305780638da5cb5b14610ce057806397e8cd4e14610c7d5780639bf6645f14610c30578063a584119414610b65578063b6363cf214610ad4578063dbd035ff14610a7e578063f02de3b214610a2d578063f135baaa146109f3578063f2fde38b14610947578063f3cd914c146104ff578063f5298aca146103345763fe99049a14610186575f80fd5b346103305760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576101bd612e3e565b6101c5612e61565b90604435917f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac72885961027973ffffffffffffffffffffffffffffffffffffffff80606435951693843314158061030d575b610287575b845f52600460205260405f20875f5260205260405f2061023a8782546130ec565b90551693845f52600460205260405f20865f5260205260405f2061025f8282546130f9565b905560408051338152602081019290925290918291820190565b0390a4602060405160018152f35b845f52600560205260405f208233165f5260205260405f20875f5260205260405f2054867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102da575b5050610219565b6102e3916130ec565b855f52600560205260405f208333165f5260205260405f20885f5260205260405f20555f866102d3565b50845f52600360205260405f208233165f5260205260ff60405f20541615610214565b5f80fd5b346103305761034236612e84565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d7577f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac7288596103ed73ffffffffffffffffffffffffffffffffffffffff805f9516956103bb6103b3866131a9565b3390896131ef565b169233841415806104a0575b6103f2575b8385526004602052604085208686526020526040852061025f8282546130ec565b0390a4005b83855260056020526040852073ffffffffffffffffffffffffffffffffffffffff33168652602052604085208686526020526040852054817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610459575b50506103cc565b610462916130ec565b84865260056020526040862073ffffffffffffffffffffffffffffffffffffffff331687526020526040862087875260205260408620558681610452565b5083855260036020526040852073ffffffffffffffffffffffffffffffffffffffff3316865260205260ff604086205416156103c7565b7f54e3ca0d000000000000000000000000000000000000000000000000000000005f5260045ffd5b34610330576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305761053836612f80565b60607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5c3601126103305760405161056e81612ef5565b60a4358015158103610330578152602081019060c435825260e4359073ffffffffffffffffffffffffffffffffffffffff8216820361033057604081019182526101043567ffffffffffffffff8111610330576105cf90369060040161304c565b9290937fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d75761060161360e565b511561091f57849160a0832093845f52600660205260405f209561062487613675565b6080850196858383868b5173ffffffffffffffffffffffffffffffffffffffff169361064f94613c43565b90959196606089015160020b9083511515905173ffffffffffffffffffffffffffffffffffffffff1691604051996106868b612f11565b8a5260208a01526040890152606088015262ffffff166080870152805115155f1460209a610869997f8d060588a299d20d6adde48169888631be20f791e7dfeb50d458ae59256484a86106fb6108569a60c0956108fe5773ffffffffffffffffffffffffffffffffffffffff85511697614a58565b9190969298816108cf575b505073ffffffffffffffffffffffffffffffffffffffff815116908862ffffff60408301986fffffffffffffffffffffffffffffffff8a5116946020850195865160020b91604051958060801d600f0b8752600f0b60208701526040860152606085015260808401521660a0820152857f40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f853393a3602073ffffffffffffffffffffffffffffffffffffffff87511696019173ffffffffffffffffffffffffffffffffffffffff8351169787155f146108c05747935b8961089a575047925b6fffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff47925116925116925160020b93604051958652602086015260408501526060840152608083015260a0820152a48673ffffffffffffffffffffffffffffffffffffffff8a5116613e80565b80949194610871575b5050823391613751565b604051908152f35b73ffffffffffffffffffffffffffffffffffffffff6108939251169083613751565b848061085f565b73ffffffffffffffffffffffffffffffffffffffff6108ba915116613b91565b926107e5565b6108c988613b91565b936107dc565b73ffffffffffffffffffffffffffffffffffffffff165f5260206001905260405f209081540190555f80610706565b8f73ffffffffffffffffffffffffffffffffffffffff908601511697614a58565b7fbe8b8507000000000000000000000000000000000000000000000000000000005f5260045ffd5b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330577fffffffffffffffffffffffff000000000000000000000000000000000000000061099f612e3e565b73ffffffffffffffffffffffffffffffffffffffff5f54916109c48284163314613106565b1691829116175f55337f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576004355c5f5260205ff35b34610330575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b3461033057610a8c3661307a565b6040519160408360208152836020820152019160051b8301916020806040850193925b8335548152019101908483821015610acb575060208091610aaf565b60408186030190f35b346103305760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057610b0b612e3e565b73ffffffffffffffffffffffffffffffffffffffff610b28612e61565b91165f52600360205273ffffffffffffffffffffffffffffffffffffffff60405f2091165f52602052602060ff60405f2054166040519015158152f35b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057610b9c612e3e565b73ffffffffffffffffffffffffffffffffffffffff81169081610be05750505f7f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95d005b610be990613b91565b907f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95d7f1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd955d005b3461033057610c3e3661307a565b6040519160408360208152836020820152019160051b8301916020806040850193925b83355c8152019101908483821015610acb575060208091610c61565b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305773ffffffffffffffffffffffffffffffffffffffff610cc9612e3e565b165f526001602052602060405f2054604051908152f35b34610330575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346103305760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057610d67612e3e565b610d6f612e61565b60443573ffffffffffffffffffffffffffffffffffffffff600254163303610e5e5773ffffffffffffffffffffffffffffffffffffffff821680151580610e1e575b610df6576020936108699280610dee5750815f526001855260405f20549384925b5f526001865260405f20610de78482546130ec565b90556132f7565b938492610dd2565b7fc79e5948000000000000000000000000000000000000000000000000000000005f5260045ffd5b508073ffffffffffffffffffffffffffffffffffffffff7f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95c1614610db1565b7f48f5c3ed000000000000000000000000000000000000000000000000000000005f5260045ffd5b346103305760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057610ebd612e3e565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d757335f90815273ffffffffffffffffffffffffffffffffffffffff8216602052604090205c610f136024356131a9565b9081600f0b03610f3057610f2e9133915f03600f0b906131ef565b005b7fbda73abf000000000000000000000000000000000000000000000000000000005f5260045ffd5b346103305760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057610f9036612f80565b610f98612f6e565b9073ffffffffffffffffffffffffffffffffffffffff600254163303610e5e57623e900062fff0008316106103e9610fff841610161561106457602060a07fe9c42593e71f84403b84352cd168d693e2c9fcd1fdbcc3feb21d92b43e6696f9922092835f526006825260405f2061100e81613675565b805479ffffff00000000000000000000000000000000000000000000008360b81b16907fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff1617905562ffffff60405191168152a2005b62ffffff827fa7abe2f7000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b346103305760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576110cd36612f80565b60a4359073ffffffffffffffffffffffffffffffffffffffff8216808303610330576110f761360e565b6060820191825160020b617fff81136115235750825160020b600181126114f8575073ffffffffffffffffffffffffffffffffffffffff815116602082019073ffffffffffffffffffffffffffffffffffffffff825116808210156114c1575050608082019073ffffffffffffffffffffffffffffffffffffffff82511690604084019161118b62ffffff84511682613ab6565b1561149657506111a062ffffff835116613b74565b96835173ffffffffffffffffffffffffffffffffffffffff8116908133036113df575b505060a0852090815f52600660205260405f2090815473ffffffffffffffffffffffffffffffffffffffff166113b7576020997fdd466e674ea557f56295e2d0218a125ea4b4f0f6f3307b95f85e6110838d6438927cffffff000000000000000000000000000000000000000000000000000061124160a0946146fb565b9260d01b168a76ffffff000000000000000000000000000000000000000084861b161717905562ffffff73ffffffffffffffffffffffffffffffffffffffff808a5116965116965116995160020b73ffffffffffffffffffffffffffffffffffffffff885116906040519b8c528c8c015260408b01528860608b015260020b98896080820152a45173ffffffffffffffffffffffffffffffffffffffff8116908133036112f3575b8585604051908152f35b61100016611302575b806112e9565b6113ae9261138c604051937f6fe7e6eb0000000000000000000000000000000000000000000000000000000088860152336024860152604485019073ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b60e48301528361010483015261010482526113a961012483612f2d565b614024565b508280806112fc565b7f7983c051000000000000000000000000000000000000000000000000000000005f5260045ffd5b612000166113ee575b806111c3565b61148f90604051907fdc98354e000000000000000000000000000000000000000000000000000000006020830152336024830152611479604483018973ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b8860e483015260e482526113a961010483612f2d565b50886113e8565b7fe65af6a0000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b60449250604051917f6e6c983000000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b7fe9e90588000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7fb70024f8000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b34610330576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305761158736612f80565b60807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5c36011261033057604051906115be82612ed9565b60a4358060020b810361033057825260c4358060020b810361033057602083015260e43560408301526101043560608301526101243567ffffffffffffffff81116103305761161190369060040161304c565b90927fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d75761164261360e565b60a0832093845f52600660205260405f20608052611661608051613675565b608084015173ffffffffffffffffffffffffffffffffffffffff811690813303611fdd575b5050815160020b92602083015160020b916116a46040850151613884565b93606087015160020b9760608201516040519960c08b018b811067ffffffffffffffff821117611fb057604052338b528860208c01528660408c015287600f0b60608c015260808b015260a08a01525f9185881215611f79577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276188812611f4d57620d89e88613611f21576040519261173b84612ed9565b5f84525f60208501525f60408501525f606085015287600f0b611c24575b600460805101978960020b5f528860205260405f20988860020b5f5260205260405f206080515460a01c60020b8b81125f14611bce575060028060018c0154600184015490039b015491015490039b5b60a073ffffffffffffffffffffffffffffffffffffffff825116910151906040519160268301528960068301528b600383015281525f603a600c83012091816040820152816020820152525f5260066080510160205260405f20976fffffffffffffffffffffffffffffffff8954169982600f0b155f14611b71578a15611b495761186e61186860409f9b61194d9c61195f9e5b60018301956118606002611854848a548503615802565b95019283548503615802565b9655556131a9565b916131a9565b6fffffffffffffffffffffffffffffffff169060801b179a8b965f84600f0b12611adb575b5082600f0b611997575b5050506118c36118b48560801d8360801d01613884565b9185600f0b90600f0b01613884565b6fffffffffffffffffffffffffffffffff169060801b1791815160020b90602083015160020b8c8401516060850151918e5194855260208501528d84015260608301527ff208f4912782fd25c7f114ca3723a2d5dd6f3bcc3ac8db5af63baa85f711d5ec60803393a38873ffffffffffffffffffffffffffffffffffffffff60808201511661395a565b8094919461196b575b50833391613751565b82519182526020820152f35b6119919073ffffffffffffffffffffffffffffffffffffffff6080840151169083613751565b85611956565b60805154929350909173ffffffffffffffffffffffffffffffffffffffff81169060a01c60020b828112156119fd575050906119f1926119e66119dc6119ec94614257565b91600f0b92614257565b90614626565b613884565b60801b5b8b808061189d565b92809193125f14611aa857611a3c91611a296119ec6119ec93611a2388600f0b91614257565b87614626565b93611a3786600f0b92614257565b6145c9565b6fffffffffffffffffffffffffffffffff169060801b17906fffffffffffffffffffffffffffffffff611a7b60036080510192600f0b8284541661466d565b167fffffffffffffffffffffffffffffffff000000000000000000000000000000008254161790556119f5565b906119ec925092611abe6119dc611ac495614257565b906145c9565b6fffffffffffffffffffffffffffffffff166119f5565b808f9151611b1d575b0151611af1575b8e611893565b611b188260805160049160020b5f52016020525f6002604082208281558260018201550155565b611aeb565b611b448360805160049160020b5f52016020525f6002604082208281558260018201550155565b611ae4565b7faefeb924000000000000000000000000000000000000000000000000000000005f5260045ffd5b61186e61186860409f9b61194d9c61195f9e6fffffffffffffffffffffffffffffffff611ba189600f0b8361466d565b167fffffffffffffffffffffffffffffffff0000000000000000000000000000000084541617835561183d565b9099908913611bf45760028060018c0154600184015490039b015491015490039b6117a9565b9860026001608051015460018c01549003600183015490039a81806080510154910154900391015490039b6117a9565b6004608051018960020b5f5280602052898960405f20611c7d81546fffffffffffffffffffffffffffffffff611c6081831695600f0b8661466d565b16931594858515141595611eed575b508d600f0b9060801d613e39565b60801b82179055602087015285528760020b5f5260205260405f208054906fffffffffffffffffffffffffffffffff8216611cbb8b600f0b8261466d565b901592836fffffffffffffffffffffffffffffffff831615141593611ec0575b8b600f0b9060801d600f0b03916f7fffffffffffffffffffffffffffffff83137fffffffffffffffffffffffffffffffff80000000000000000000000000000000841217611e9357826fffffffffffffffffffffffffffffffff935060801b83831617905516606086015260408501525f88600f0b1215611da0575b8351611d84575b60408401511561175957611d7f60808c015160020b8860056080510161420b565b611759565b611d9b60808c015160020b8a60056080510161420b565b611d5e565b60808b015160020b6fffffffffffffffffffffffffffffffff600181602088015116925f817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276180712817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618050390620d89e8050301810416809111611e67576fffffffffffffffffffffffffffffffff6060860151161115611d5757867fb8e3c385000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b897fb8e3c385000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b6080515460a01c60020b8b13611cdb57600160805101546001840155600260805101546002840155611cdb565b6080515460a01c60020b1215611f04575b8e611c6f565b600160805101546001840155600260805101546002840155611efe565b857f1ad777f8000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b877fd5e2f7ab000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b60448887604051917fc4433ed500000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f6040850151138080916120d5575b1561206a5750506040517f259982e5000000000000000000000000000000000000000000000000000000006020820152612061916113a9826120358887898c33602487016137ca565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101845283612f2d565b505b8580611686565b1590816120c7575b5061207e575b50612063565b6040517f21d0ee700000000000000000000000000000000000000000000000000000000060208201526120c0916113a9826120358887898c33602487016137ca565b5085612078565b610200915016151587612072565b5061080082161515611fec565b346103305760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057612119612e3e565b73ffffffffffffffffffffffffffffffffffffffff612136612e61565b91165f52600560205273ffffffffffffffffffffffffffffffffffffffff60405f2091165f5260205260405f206044355f52602052602060405f2054604051908152f35b346103305760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576121b1612e3e565b602435908115158092036103305773ffffffffffffffffffffffffffffffffffffffff90335f52600360205260405f208282165f5260205260405f207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa26760203392a3602060405160018152f35b346103305760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305761228936612f80565b612291612f6e565b906280000062ffffff60408301511614801590612345575b61231d5760a0906122b98361378d565b205f52600660205260405f20906122cf82613675565b81547fffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffff1660d09190911b7cffffff000000000000000000000000000000000000000000000000000016179055005b7f30d21641000000000000000000000000000000000000000000000000000000005f5260045ffd5b5073ffffffffffffffffffffffffffffffffffffffff6080820151163314156122a9565b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305760043567ffffffffffffffff8111610330576123b890369060040161304c565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c6125cc57612444915f9160017fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235d60405193849283927f91dd734600000000000000000000000000000000000000000000000000000000845260206004850152602484019161316b565b038183335af19081156125c1575f91612519575b507f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5c6124f15760406020915f7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f835194859381855280519182918282880152018686015e5f85828601015201168101030190f35b7f5212cba1000000000000000000000000000000000000000000000000000000005f5260045ffd5b90503d805f833e61252a8183612f2d565b8101906020818303126103305780519067ffffffffffffffff8211610330570181601f820112156103305780519067ffffffffffffffff8211611fb0576040519261259d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185612f2d565b8284526020838301011161033057815f9260208093018386015e8301015281612458565b6040513d5f823e3d90fd5b7f5090d6c6000000000000000000000000000000000000000000000000000000005f5260045ffd5b346103305773ffffffffffffffffffffffffffffffffffffffff61261736612e84565b91929092335f52600560205260405f208282165f5260205260405f20845f526020528260405f205560405192835216907fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a760203392a4602060405160018152f35b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576126aa612e3e565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d75761086960209161352c565b346103305760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576024356004356040519160408360208152826020820152019060051b8301916001602060408501935b83548152019101908483821015610acb57506020600191612734565b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305773ffffffffffffffffffffffffffffffffffffffff61279c612e3e565b6127aa825f54163314613106565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060025416176002557fb4bd8ef53df690b9943d3318996006dbb82a25f54719d8c8035b516a2a5b8acc5f80a2005b34610330576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305761283436612f80565b60c4359060a43560e43567ffffffffffffffff81116103305761285b90369060040161304c565b9190937fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d75761288d61360e565b60a0842094855f52600660205260405f20946128a886613675565b60808101805173ffffffffffffffffffffffffffffffffffffffff811690813303612a42575b50506fffffffffffffffffffffffffffffffff600388015416978815612a1a576020986128fa876131a9565b5f03612905876131a9565b5f036fffffffffffffffffffffffffffffffff169060801b179887612a06575b866129f1575b5050612938338985613751565b60405190868252858a8301527f29ef05caaff9404b7cb6d1c0e9bbae9eaa7ab2541feba1a9c4248594c08156cb60403393a3519273ffffffffffffffffffffffffffffffffffffffff841693843303612996575b8888604051908152f35b6010166129a4575b8061298c565b6129e5956113a993612035926040519788957fe1b4af69000000000000000000000000000000000000000000000000000000008d88015233602488016136bb565b5082808080808061299e565b600201908660801b048154019055898061292b565b60018101828960801b048154019055612925565b7fa74f97ab000000000000000000000000000000000000000000000000000000005f5260045ffd5b602016612a50575b806128ce565b6040517fb6a8b0fa000000000000000000000000000000000000000000000000000000006020820152612a93916113a9826120358b898b8d8b33602488016136bb565b5088612a4a565b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057600435545f5260205ff35b3461033057612ae236612e84565b907fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d7577f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac7288596103ed73ffffffffffffffffffffffffffffffffffffffff805f941695612b61612b54876131a9565b8603600f0b3390896131ef565b16938484526004602052604084208685526020526040842061025f8282546130f9565b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330577fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d75760206108693361352c565b346103305760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057612c16612e3e565b612c1e612e61565b604435907fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d757610f2e92612c66612c59846131a9565b5f03600f0b3390836131ef565b6132f7565b346103305773ffffffffffffffffffffffffffffffffffffffff612c8e36612e84565b91929092335f52600460205260405f20845f5260205260405f20612cb38482546130ec565b90551690815f52600460205260405f20835f5260205260405f20612cd88282546130f9565b9055604080513380825260208201939093527f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac7288599181908101610279565b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361033057807f01ffc9a70000000000000000000000000000000000000000000000000000000060209214908115612daa575b506040519015158152f35b7f0f632fb30000000000000000000000000000000000000000000000000000000091501482612d9f565b346103305760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305760209073ffffffffffffffffffffffffffffffffffffffff612e23612e3e565b165f526004825260405f206024355f52825260405f20548152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361033057565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361033057565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126103305760043573ffffffffffffffffffffffffffffffffffffffff8116810361033057906024359060443590565b6080810190811067ffffffffffffffff821117611fb057604052565b6060810190811067ffffffffffffffff821117611fb057604052565b60a0810190811067ffffffffffffffff821117611fb057604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611fb057604052565b60a4359062ffffff8216820361033057565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60a09101126103305760405190612fb782612f11565b8160043573ffffffffffffffffffffffffffffffffffffffff8116810361033057815260243573ffffffffffffffffffffffffffffffffffffffff8116810361033057602082015260443562ffffff811681036103305760408201526064358060020b81036103305760608201526084359073ffffffffffffffffffffffffffffffffffffffff821682036103305760800152565b9181601f840112156103305782359167ffffffffffffffff8311610330576020838186019501011161033057565b9060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126103305760043567ffffffffffffffff811161033057826023820112156103305780600401359267ffffffffffffffff84116103305760248460051b83010111610330576024019190565b91908203918211611e9357565b91908201809211611e9357565b1561310d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601375f8582860101520116010190565b6f800000000000000000000000000000008110156131c757600f0b90565b7f93dafdf1000000000000000000000000000000000000000000000000000000005f5260045ffd5b9190600f0b9182156132f257613225919073ffffffffffffffffffffffffffffffffffffffff8092165f521660205260405f2090565b613231815c9283613c28565b80915d6132a257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5c017f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5d5b565b156132a957565b60017f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5c017f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5d565b505050565b90919073ffffffffffffffffffffffffffffffffffffffff811690816133e95750505f80808093855af1156133295750565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f3d011673ffffffffffffffffffffffffffffffffffffffff604051927f90bfb8650000000000000000000000000000000000000000000000000000000084521660048301525f6024830152608060448301528060a00160648301523d60848301523d5f60a484013e7ff4b3b1bc0000000000000000000000000000000000000000000000000000000060c4828401600460a4820152015260e40190fd5b60205f60448194968260409573ffffffffffffffffffffffffffffffffffffffff988751998a947fa9059cbb00000000000000000000000000000000000000000000000000000000865216600485015260248401525af13d15601f3d116001855114161716928281528260208201520152156134625750565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f3d0116604051917f90bfb86500000000000000000000000000000000000000000000000000000000835260048301527fa9059cbb000000000000000000000000000000000000000000000000000000006024830152608060448301528060a00160648301523d60848301523d5f60a484013e7ff27f64e40000000000000000000000000000000000000000000000000000000060c4828401600460a4820152015260e40190fd5b7f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95c919073ffffffffffffffffffffffffffffffffffffffff8316613581576132a09034935b61357b856131a9565b906131ef565b346135e6576132a0906135bd7f1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd955c6135b886613b91565b6130ec565b935f7f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95d613572565b7fb0ec849e000000000000000000000000000000000000000000000000000000005f5260045ffd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361364d57565b7f0d89438e000000000000000000000000000000000000000000000000000000005f5260045ffd5b5473ffffffffffffffffffffffffffffffffffffffff161561369357565b7f486aa307000000000000000000000000000000000000000000000000000000005f5260045ffd5b91926137366101209473ffffffffffffffffffffffffffffffffffffffff61374e999794168552602085019073ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b60c083015260e082015281610100820152019161316b565b90565b9073ffffffffffffffffffffffffffffffffffffffff60206132a0949361378085848351168660801d906131ef565b01511690600f0b906131ef565b62ffffff16620f4240811161379f5750565b7f14002113000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9061374e95936138476101609473ffffffffffffffffffffffffffffffffffffffff61387694168552602085019073ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b8051600290810b60c08501526020820151900b60e0840152604081015161010084015260600151610120830152565b81610140820152019161316b565b9081600f0b9182036131c757565b926139409061391161374e99979473ffffffffffffffffffffffffffffffffffffffff6101a09895168752602087019073ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b8051600290810b60c08701526020820151900b60e0860152604081015161010086015260600151610120850152565b61014083015261016082015281610180820152019161316b565b939590919296945f9673ffffffffffffffffffffffffffffffffffffffff86163314613aab57885f6040870151135f14613a3a5761040087166139a1575b50505050505050565b613a2d9799985092613a26969594926139ee92613a1a956040519788967f9f063efc0000000000000000000000000000000000000000000000000000000060208901523360248901613892565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612f2d565b6002821615159161469e565b80926146be565b915f808080808080613998565b9594939291906101008616613a525750505050505050565b613a2d979950869850916139ee91613a9f9493613a26986040519788967f6c2bbe7e0000000000000000000000000000000000000000000000000000000060208901523360248901613892565b6001821615159161469e565b505f96505050505050565b608081161580613b68575b613b3e57604081161580613b5c575b613b3e5761040081161580613b50575b613b3e5761010081161580613b44575b613b3e5773ffffffffffffffffffffffffffffffffffffffff8116613b1e575062ffffff1662800000141590565b613fff161590811591613b2f575090565b62800000915062ffffff161490565b50505f90565b50600181161515613af0565b50600281161515613ae0565b50600481161515613ad0565b50600881161515613ac1565b6280000062ffffff821614613b8c5761374e8161378d565b505f90565b73ffffffffffffffffffffffffffffffffffffffff1680613bb157504790565b6020602491604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa9081156125c1575f91613bf9575090565b90506020813d602011613c20575b81613c1460209383612f2d565b81010312610330575190565b3d9150613c07565b9190915f8382019384129112908015821691151617611e9357565b6020830151955f9586959194913373ffffffffffffffffffffffffffffffffffffffff851614613e2c5760808416613c7d575b5050505050565b613d65926139ee613d5f92613d4b946040519586947f575e24b4000000000000000000000000000000000000000000000000000000006020870152336024870152613d15604487018c73ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b8051151560e487015260208101516101048701526040015173ffffffffffffffffffffffffffffffffffffffff16610124860152565b61014061014485015261016484019161316b565b82614024565b916060835103613e04576040015162ffffff166280000014613df8575b600816613d93575b80808080613c76565b604001519250608083901d600f0b8015613d8a57613db4905f861295613c28565b9315613df0575f84135b613dc8575f613d8a565b7ffa0b71d6000000000000000000000000000000000000000000000000000000005f5260045ffd5b5f8412613dbe565b60608201519350613d82565b7f1e048e1d000000000000000000000000000000000000000000000000000000005f5260045ffd5b505f965086955050505050565b90600f0b90600f0b01907fffffffffffffffffffffffffffffffff8000000000000000000000000000000082126f7fffffffffffffffffffffffffffffff831317611e9357565b9196959394929473ffffffffffffffffffffffffffffffffffffffff83163314614017578460801d94600f0b938860408516613f3f575b50505050505f9481600f0b15801590613f33575b613ed7575b5050509190565b613f0e9395505f60208201511290511515145f14613f16576fffffffffffffffffffffffffffffffff169060801b175b80936146be565b5f8080613ed0565b906fffffffffffffffffffffffffffffffff169060801b17613f07565b5082600f0b1515613ecb565b613ffb614007946139ee6119ec9561400d999895613fe0613d15966040519788967fb47b2fb1000000000000000000000000000000000000000000000000000000006020890152336024890152604488019073ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b8c61014485015261016061016485015261018484019161316b565b6004821615159161469e565b90613e39565b5f80808088613eb7565b5050505050909150905f90565b9190918251925f8060208301958682865af1156140c2575050604051917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f3d011683016040523d83523d9060208401915f833e602084511091821561408e575b5050613e0457565b5190517fffffffff000000000000000000000000000000000000000000000000000000009182169116141590505f80614086565b5183517fffffffff00000000000000000000000000000000000000000000000000000000811691600481106141d6575b50507fffffffff000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f3d01169173ffffffffffffffffffffffffffffffffffffffff604051947f90bfb865000000000000000000000000000000000000000000000000000000008652166004850152166024830152608060448301528060a00160648301523d60848301523d5f60a484013e7fa9e35b2f0000000000000000000000000000000000000000000000000000000060c4828401600460a4820152015260e40190fd5b7fffffffff000000000000000000000000000000000000000000000000000000009250829060040360031b1b161682806140f2565b919060020b9060020b908181076142395705908160081d5f52602052600160ff60405f2092161b8154189055565b601c906044926040519163d4d8f3e683526020830152604082015201fd5b60020b908160ff1d82810118620d89e8811161459d5763ffffffff9192600182167001fffcb933bd6fad37aa2d162d1a59400102700100000000000000000000000000000000189160028116614581575b60048116614565575b60088116614549575b6010811661452d575b60208116614511575b604081166144f5575b608081166144d9575b61010081166144bd575b61020081166144a1575b6104008116614485575b6108008116614469575b611000811661444d575b6120008116614431575b6140008116614415575b61800081166143f9575b6201000081166143dd575b6202000081166143c2575b6204000081166143a7575b620800001661438e575b5f12614367575b0160201c90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04614360565b6b048a170391f7dc42444e8fa290910260801c90614359565b6d2216e584f5fa1ea926041bedfe9890920260801c9161434f565b916e5d6af8dedb81196699c329225ee6040260801c91614344565b916f09aa508b5b7a84e1c677de54f3e99bc90260801c91614339565b916f31be135f97d08fd981231505542fcfa60260801c9161432e565b916f70d869a156d2a1b890bb3df62baf32f70260801c91614324565b916fa9f746462d870fdf8a65dc1f90e061e50260801c9161431a565b916fd097f3bdfd2022b8845ad8f792aa58250260801c91614310565b916fe7159475a2c29b7443b29c7fa6e889d90260801c91614306565b916ff3392b0822b70005940c7a398e4b70f30260801c916142fc565b916ff987a7253ac413176f2b074cf7815e540260801c916142f2565b916ffcbe86c7900a88aedcffc83b479aa3a40260801c916142e8565b916ffe5dee046a99a2a811c461f1969c30530260801c916142de565b916fff2ea16466c96a3843ec78b326b528610260801c916142d5565b916fff973b41fa98c081472e6896dfb254c00260801c916142cc565b916fffcb9843d60f6159c9db58835c9266440260801c916142c3565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c916142ba565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c916142b1565b916ffff97272373d413259a46990580e213a0260801c916142a8565b827f8b86327a000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b905f83600f0b125f146145fe576145f4925f036fffffffffffffffffffffffffffffffff1691615b3c565b5f81126131c75790565b61461a926fffffffffffffffffffffffffffffffff1691615ae1565b5f81126131c7575f0390565b905f83600f0b125f14614651576145f4925f036fffffffffffffffffffffffffffffffff1691615c33565b61461a926fffffffffffffffffffffffffffffffff1691615b7c565b906fffffffffffffffffffffffffffffffff90600f0b911601908160801c61469157565b6393dafdf15f526004601cfd5b906146a891614024565b9015613b8c576040815103613e04576040015190565b6146e1906146d38360801d8260801d03613884565b92600f0b90600f0b03613884565b6fffffffffffffffffffffffffffffffff169060801b1790565b73fffd8963efd1fc6a506488495d951d516396168273ffffffffffffffffffffffffffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffd895d830116116149df5777ffffffffffffffffffffffffffffffffffffffff000000008160201b168060ff61477883615cda565b1691608083106149d357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8182011c5b800280607f1c8160ff1c1c800280607f1c8160ff1c1c800280607f1c8160ff1c1c800280607f1c8160ff1c1c800280607f1c8160ff1c1c800280607f1c8160ff1c1c80029081607f1c8260ff1c1c80029283607f1c8460ff1c1c80029485607f1c8660ff1c1c80029687607f1c8860ff1c1c80029889607f1c8a60ff1c1c80029a8b607f1c8c60ff1c1c80029c8d80607f1c9060ff1c1c800260cd1c6604000000000000169d60cc1c6608000000000000169c60cb1c6610000000000000169b60ca1c6620000000000000169a60c91c6640000000000000169960c81c6680000000000000169860c71c670100000000000000169760c61c670200000000000000169660c51c670400000000000000169560c41c670800000000000000169460c31c671000000000000000169360c21c672000000000000000169260c11c674000000000000000169160c01c67800000000000000016907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800160401b1717171717171717171717171717693627a301d71055774c85027ffffffffffffffffffffffffffffffffffd709b7e5480fba5a50fed5e62ffc556810160801d60020b906fdb2df09e81959a81455e260799a0632f0160801d60020b918282145f146149905750905090565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff6149c484614257565b16116149ce575090565b905090565b905081607f031b6147a8565b73ffffffffffffffffffffffffffffffffffffffff907f61487524000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b8115614a2b570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b6040519290915f614a6885612ef5565b5f855260208501925f845260408601955f875280968654956040860151159586155f146157f457610fff8860b81c16945b8151925f948a73ffffffffffffffffffffffffffffffffffffffff16918288528b60a01c60020b90526fffffffffffffffffffffffffffffffff60038d0154169052608083015162400000811615155f146157e55762bfffff16614afc8161378d565b61ffff88166157ca575b8096620f424062ffffff83161015615799575b8451156157835750508861572357606083019073ffffffffffffffffffffffffffffffffffffffff825116818110156156ec5750505173ffffffffffffffffffffffffffffffffffffffff166401000276a38111156156c157505b604051986101008a018a811067ffffffffffffffff821117611fb0576040525f8a525f60208b01525f60408b01525f60608b01525f60808b01525f60a08b01525f60c08b015288155f146156b35760018b0154949390945b60e08b01525b80158015615679575b61551f5788868d8c8e73ffffffffffffffffffffffffffffffffffffffff8351168252602083015160020b602089015160020b90815f8183071291050386155f14615374576fffffffffffffffffffffffffffffffff937ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860409460019484600560ff60609716938260020b60081d890b5f5201602052875f207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8460ff031c9054169283151593845f146153625790614cb660ff92615cda565b90031660020b900360020b0260020b5b905b15158684015260020b8060208401521315615337575b620d89e8602082015160020b1215615329575b73ffffffffffffffffffffffffffffffffffffffff614d16602083015160020b614257565b16918291015273ffffffffffffffffffffffffffffffffffffffff8551169673ffffffffffffffffffffffffffffffffffffffff60608c0151169283911516818310189118021892015116928d73ffffffffffffffffffffffffffffffffffffffff8316821015915f87125f1461517e5762ffffff8516620f424003614d9e81895f03615884565b94841561516d57614db0888483615b7c565b955b8681106150b157509660a093929173ffffffffffffffffffffffffffffffffffffffff98978891620f424062ffffff8316145f1461509d575050865b955b1561508f5791614dff92615b3c565b925b60c0820152015260808d0152168c525f8351135f1461505f5760a08a0151905f82126131c7570392614e3c60808b015160c08c0151906130f9565b5f81126131c7578103908113600116611e9357935b61ffff8716615017575b6fffffffffffffffffffffffffffffffff60408d01511680614ffd575b5073ffffffffffffffffffffffffffffffffffffffff8c511673ffffffffffffffffffffffffffffffffffffffff60608c01511681145f14614fc1575060408a0151614f0f575b88614f02577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60208b015160020b0160020b5b60020b60208d01525b9392614bd2565b60208a015160020b614ef2565b88614f95576fffffffffffffffffffffffffffffffff614f7c8d8d8d600460e08201519260206002820154935b015160020b60020b5f520160205260405f2091600183019081549003905560028201908154900390555460801d908c15614f87575b60400151831661466d565b1660408d0152614ebf565b5f91909103600f0b90614f71565b6fffffffffffffffffffffffffffffffff614f7c8d8d8d6004600183015492602060e084015193614f3c565b73ffffffffffffffffffffffffffffffffffffffff8b51168103614fe6575b50614efb565b614fef906146fb565b60020b60208d01525f614fe0565b60c08b015160801b0460e08b01510160e08b01525f614e78565b9662ffffff861661ffff8816036150425760c08a0151905b8160c08c01510360c08c01520196614e5b565b620f424060808b015161ffff89169060c08d01510102049061502f565b60808a015160c08b015101905f82126131c757019260a08a01515f81126131c75761508991613c28565b93614e51565b61509892615c33565b614dff565b62ffffff6150ac921689615d67565b614dee565b9650505092505082918415811517615160578e60a09173ffffffffffffffffffffffffffffffffffffffff96845f146150fb576150ef878284615e06565b80978a015f0395614df0565b8787116151395761513461512f6151276fffffffffffffffffffffffffffffffff84168a60601b614a21565b8a85166130f9565b615e9a565b6150ef565b61513461512f61515b6fffffffffffffffffffffffffffffffff84168a615989565b615127565b634f2461b85f526004601cfd5b615178888285615ae1565b95614db2565b9193509190831561531857615194858284615b3c565b915b8287106151f6579073ffffffffffffffffffffffffffffffffffffffff9560a09280965b156151e757916151c992615b7c565b925b6151e262ffffff8d16620f42408190039086615d67565b614e01565b6151f092615ae1565b926151cb565b50915050838315821517615160578d83156152ee575073ffffffffffffffffffffffffffffffffffffffff851161529b578460601b6fffffffffffffffffffffffffffffffff851680820615159104015b73ffffffffffffffffffffffffffffffffffffffff8316928184111561528e578f939573ffffffffffffffffffffffffffffffffffffffff60a093819803165b80966151ba565b634323a5555f526004601cfd5b6fffffffffffffffffffffffffffffffff84166152c6816c0100000000000000000000000088615a42565b908015614a2b576c010000000000000000000000008709156152475760010180615247575f80fd5b9180856153138873ffffffffffffffffffffffffffffffffffffffff9860a095615d90565b615287565b615323858383615c33565b91615196565b620d89e86020820152614cf1565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186020820152614cde565b5060020b900360020b0260020b614cc6565b60019194939650600592955001938460020b60081d60010b5f520160205260405f207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600160ff86161b0119905416908d8b831592831597885f146154c05750505050610330578f9160018f8f96907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186060928f989560409660ff896fffffffffffffffffffffffffffffffff9a5f03166101e07f804040554300526644320000502061067405302602000010750620017611707760fc7fb6db6db6ddddddddd34d34d349249249210842108c6318c639ce739cffffffff840260f81c161b60f71c167e1f0d1e100c1d070f090b19131c1706010e11080a1a141802121b1503160405601f85851693831c63d76453e004161a17031660020b9060020b0160020b0260020b5b90614cc8565b90956fffffffffffffffffffffffffffffffff955060409450600193987ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618918960ff6060969b811681031660020b9060020b0160020b0260020b6154ba565b949891955099969298919598602088015160a01b76ffffff0000000000000000000000000000000000000000167fffffffffffffffffff000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff8a51169216171782556fffffffffffffffffffffffffffffffff6003830154166fffffffffffffffffffffffffffffffff604089015116809103615634575b5082156156255760e060029101519101555b825190155f82121461560f57506155ed6155f59293613884565b925103613884565b6fffffffffffffffffffffffffffffffff169060801b1793565b6155f592509061561f9103613884565b91613884565b60e060019101519101556155d3565b6fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff000000000000000000000000000000006003840154161760038301555f6155c1565b5073ffffffffffffffffffffffffffffffffffffffff8c511673ffffffffffffffffffffffffffffffffffffffff60608501511614614bdb565b60028b015494939094614bcc565b7f9e4d7cc7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b60449250604051917f7c9c6e8f00000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b606083019073ffffffffffffffffffffffffffffffffffffffff825116818111156156ec5750505173ffffffffffffffffffffffffffffffffffffffff1673fffd8963efd1fc6a506488495d951d5263988d268110156156c15750614b74565b9a509a50509950505050505050505f925f929190565b5f85511315614b19577f96206246000000000000000000000000000000000000000000000000000000005f5260045ffd5b62ffffff610fff89169116620f424081830204910103614b06565b508960d01c62ffffff16614afc565b610fff8860c41c1694614a99565b90808202917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff828209918380841093039280840393847001000000000000000000000000000000001115610330571461587b57700100000000000000000000000000000000910990828211900360801b910360801c1790565b50505060801c90565b818102907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83820990828083109203918083039283620f424011156103305714615903577fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c2613993620f4240910990828211900360fa1b910360061c170290565b5050620f424091500490565b90808202917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff828209918380841093039280840393846c0100000000000000000000000011156103305714615980576c01000000000000000000000000910990828211900360a01b910360601c1790565b50505060601c90565b908160601b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6c010000000000000000000000008409928280851094039380850394858411156103305714615a3b576c0100000000000000000000000082910981805f03168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b5091500490565b91818302917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818509938380861095039480860395868511156103305714615ad9579082910981805f03168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b505091500490565b6fffffffffffffffffffffffffffffffff6c010000000000000000000000009173ffffffffffffffffffffffffffffffffffffffff80600195169116038060ff1d90810118931692615b33818561590f565b93091515160190565b6fffffffffffffffffffffffffffffffff9073ffffffffffffffffffffffffffffffffffffffff8061374e9594169116038060ff1d90810118911661590f565b9073ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff831611615c2d575b73ffffffffffffffffffffffffffffffffffffffff8216928315615c21577bffffffffffffffffffffffffffffffff00000000000000000000000073ffffffffffffffffffffffffffffffffffffffff615c15948185169403169160601b16615d67565b90808206151591040190565b62bfc9215f526004601cfd5b90615bb1565b73ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff821611615cd4575b73ffffffffffffffffffffffffffffffffffffffff8116918215615c215761374e937bffffffffffffffffffffffffffffffff00000000000000000000000073ffffffffffffffffffffffffffffffffffffffff615ccf948185169403169160601b16615a42565b614a21565b90615c67565b8015610330577f07060605060205000602030205040001060502050303040105050304000000006f8421084210842108cc6318c6db6d54be826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1783811c61ffff1060041b1783811c60ff1060031b1792831c1c601f161a1790565b929190615d75828286615a42565b938215614a2b5709615d8357565b9060010190811561033057565b91908115615e01577bffffffffffffffffffffffffffffffff00000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9160601b169216918282029183838311918404141615615df45761374e9261512f92820391615d67565b63f5c787f15f526004601cfd5b505090565b90918015615e945773ffffffffffffffffffffffffffffffffffffffff7bffffffffffffffffffffffffffffffff000000000000000000000000819460601b16921680820281615e568483614a21565b14615e7c575b5090615e6b615e709284614a21565b6130f9565b80820615159104011690565b8301838110615e5c579150615e9092615d67565b1690565b50905090565b9073ffffffffffffffffffffffffffffffffffffffff82169182036131c75756fea2646970667358221220cb6ff0ee75123f16780a5d0193d040e80ad0b885403a6ea219d55ca2203b9b6e64736f6c634300081a0033",
    "sourceMap": "4714:14143:21:-:0;;;;;;;;;;;;;-1:-1:-1;;4714:14143:21;;;;-1:-1:-1;;;;;4714:14143:21;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4714:14143:21;;;;;;;;-1:-1:-1;4714:14143:21;;-1:-1:-1;;;;;;4714:14143:21;;;;;;;;;1075:40:15;-1:-1:-1;;1075:40:15;719:4:20;700:24;;4714:14143:21;;;;;;700:24:20;4714:14143:21;;;;;;;-1:-1:-1;4714:14143:21;;;;;;-1:-1:-1;4714:14143:21;;;;;-1:-1:-1;4714:14143:21",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60a0806040526004361015610012575f80fd5b5f3560e01c908162fdd58e14612dd45750806301ffc9a714612d15578063095bcdb614612c6b5780630b0d9c0914612bdf57806311da60b414612b84578063156e29f614612ad45780631e2eaeaf14612a9a578063234266d7146127fb5780632d7713891461275057806335fd631a146126dc5780633dd45adb14612678578063426a8493146125f457806348c89491146123695780635275965114612251578063558a72971461217a578063598af9e7146120e25780635a6bcfda1461154e5780636276cbbe146110955780637e87ce7d14610f5857806380f0b44c14610e865780638161b87414610d305780638da5cb5b14610ce057806397e8cd4e14610c7d5780639bf6645f14610c30578063a584119414610b65578063b6363cf214610ad4578063dbd035ff14610a7e578063f02de3b214610a2d578063f135baaa146109f3578063f2fde38b14610947578063f3cd914c146104ff578063f5298aca146103345763fe99049a14610186575f80fd5b346103305760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576101bd612e3e565b6101c5612e61565b90604435917f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac72885961027973ffffffffffffffffffffffffffffffffffffffff80606435951693843314158061030d575b610287575b845f52600460205260405f20875f5260205260405f2061023a8782546130ec565b90551693845f52600460205260405f20865f5260205260405f2061025f8282546130f9565b905560408051338152602081019290925290918291820190565b0390a4602060405160018152f35b845f52600560205260405f208233165f5260205260405f20875f5260205260405f2054867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102da575b5050610219565b6102e3916130ec565b855f52600560205260405f208333165f5260205260405f20885f5260205260405f20555f866102d3565b50845f52600360205260405f208233165f5260205260ff60405f20541615610214565b5f80fd5b346103305761034236612e84565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d7577f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac7288596103ed73ffffffffffffffffffffffffffffffffffffffff805f9516956103bb6103b3866131a9565b3390896131ef565b169233841415806104a0575b6103f2575b8385526004602052604085208686526020526040852061025f8282546130ec565b0390a4005b83855260056020526040852073ffffffffffffffffffffffffffffffffffffffff33168652602052604085208686526020526040852054817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610459575b50506103cc565b610462916130ec565b84865260056020526040862073ffffffffffffffffffffffffffffffffffffffff331687526020526040862087875260205260408620558681610452565b5083855260036020526040852073ffffffffffffffffffffffffffffffffffffffff3316865260205260ff604086205416156103c7565b7f54e3ca0d000000000000000000000000000000000000000000000000000000005f5260045ffd5b34610330576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305761053836612f80565b60607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5c3601126103305760405161056e81612ef5565b60a4358015158103610330578152602081019060c435825260e4359073ffffffffffffffffffffffffffffffffffffffff8216820361033057604081019182526101043567ffffffffffffffff8111610330576105cf90369060040161304c565b9290937fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d75761060161360e565b511561091f57849160a0832093845f52600660205260405f209561062487613675565b6080850196858383868b5173ffffffffffffffffffffffffffffffffffffffff169361064f94613c43565b90959196606089015160020b9083511515905173ffffffffffffffffffffffffffffffffffffffff1691604051996106868b612f11565b8a5260208a01526040890152606088015262ffffff166080870152805115155f1460209a610869997f8d060588a299d20d6adde48169888631be20f791e7dfeb50d458ae59256484a86106fb6108569a60c0956108fe5773ffffffffffffffffffffffffffffffffffffffff85511697614a58565b9190969298816108cf575b505073ffffffffffffffffffffffffffffffffffffffff815116908862ffffff60408301986fffffffffffffffffffffffffffffffff8a5116946020850195865160020b91604051958060801d600f0b8752600f0b60208701526040860152606085015260808401521660a0820152857f40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f853393a3602073ffffffffffffffffffffffffffffffffffffffff87511696019173ffffffffffffffffffffffffffffffffffffffff8351169787155f146108c05747935b8961089a575047925b6fffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff47925116925116925160020b93604051958652602086015260408501526060840152608083015260a0820152a48673ffffffffffffffffffffffffffffffffffffffff8a5116613e80565b80949194610871575b5050823391613751565b604051908152f35b73ffffffffffffffffffffffffffffffffffffffff6108939251169083613751565b848061085f565b73ffffffffffffffffffffffffffffffffffffffff6108ba915116613b91565b926107e5565b6108c988613b91565b936107dc565b73ffffffffffffffffffffffffffffffffffffffff165f5260206001905260405f209081540190555f80610706565b8f73ffffffffffffffffffffffffffffffffffffffff908601511697614a58565b7fbe8b8507000000000000000000000000000000000000000000000000000000005f5260045ffd5b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330577fffffffffffffffffffffffff000000000000000000000000000000000000000061099f612e3e565b73ffffffffffffffffffffffffffffffffffffffff5f54916109c48284163314613106565b1691829116175f55337f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576004355c5f5260205ff35b34610330575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b3461033057610a8c3661307a565b6040519160408360208152836020820152019160051b8301916020806040850193925b8335548152019101908483821015610acb575060208091610aaf565b60408186030190f35b346103305760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057610b0b612e3e565b73ffffffffffffffffffffffffffffffffffffffff610b28612e61565b91165f52600360205273ffffffffffffffffffffffffffffffffffffffff60405f2091165f52602052602060ff60405f2054166040519015158152f35b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057610b9c612e3e565b73ffffffffffffffffffffffffffffffffffffffff81169081610be05750505f7f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95d005b610be990613b91565b907f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95d7f1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd955d005b3461033057610c3e3661307a565b6040519160408360208152836020820152019160051b8301916020806040850193925b83355c8152019101908483821015610acb575060208091610c61565b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305773ffffffffffffffffffffffffffffffffffffffff610cc9612e3e565b165f526001602052602060405f2054604051908152f35b34610330575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346103305760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057610d67612e3e565b610d6f612e61565b60443573ffffffffffffffffffffffffffffffffffffffff600254163303610e5e5773ffffffffffffffffffffffffffffffffffffffff821680151580610e1e575b610df6576020936108699280610dee5750815f526001855260405f20549384925b5f526001865260405f20610de78482546130ec565b90556132f7565b938492610dd2565b7fc79e5948000000000000000000000000000000000000000000000000000000005f5260045ffd5b508073ffffffffffffffffffffffffffffffffffffffff7f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95c1614610db1565b7f48f5c3ed000000000000000000000000000000000000000000000000000000005f5260045ffd5b346103305760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057610ebd612e3e565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d757335f90815273ffffffffffffffffffffffffffffffffffffffff8216602052604090205c610f136024356131a9565b9081600f0b03610f3057610f2e9133915f03600f0b906131ef565b005b7fbda73abf000000000000000000000000000000000000000000000000000000005f5260045ffd5b346103305760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057610f9036612f80565b610f98612f6e565b9073ffffffffffffffffffffffffffffffffffffffff600254163303610e5e57623e900062fff0008316106103e9610fff841610161561106457602060a07fe9c42593e71f84403b84352cd168d693e2c9fcd1fdbcc3feb21d92b43e6696f9922092835f526006825260405f2061100e81613675565b805479ffffff00000000000000000000000000000000000000000000008360b81b16907fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff1617905562ffffff60405191168152a2005b62ffffff827fa7abe2f7000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b346103305760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576110cd36612f80565b60a4359073ffffffffffffffffffffffffffffffffffffffff8216808303610330576110f761360e565b6060820191825160020b617fff81136115235750825160020b600181126114f8575073ffffffffffffffffffffffffffffffffffffffff815116602082019073ffffffffffffffffffffffffffffffffffffffff825116808210156114c1575050608082019073ffffffffffffffffffffffffffffffffffffffff82511690604084019161118b62ffffff84511682613ab6565b1561149657506111a062ffffff835116613b74565b96835173ffffffffffffffffffffffffffffffffffffffff8116908133036113df575b505060a0852090815f52600660205260405f2090815473ffffffffffffffffffffffffffffffffffffffff166113b7576020997fdd466e674ea557f56295e2d0218a125ea4b4f0f6f3307b95f85e6110838d6438927cffffff000000000000000000000000000000000000000000000000000061124160a0946146fb565b9260d01b168a76ffffff000000000000000000000000000000000000000084861b161717905562ffffff73ffffffffffffffffffffffffffffffffffffffff808a5116965116965116995160020b73ffffffffffffffffffffffffffffffffffffffff885116906040519b8c528c8c015260408b01528860608b015260020b98896080820152a45173ffffffffffffffffffffffffffffffffffffffff8116908133036112f3575b8585604051908152f35b61100016611302575b806112e9565b6113ae9261138c604051937f6fe7e6eb0000000000000000000000000000000000000000000000000000000088860152336024860152604485019073ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b60e48301528361010483015261010482526113a961012483612f2d565b614024565b508280806112fc565b7f7983c051000000000000000000000000000000000000000000000000000000005f5260045ffd5b612000166113ee575b806111c3565b61148f90604051907fdc98354e000000000000000000000000000000000000000000000000000000006020830152336024830152611479604483018973ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b8860e483015260e482526113a961010483612f2d565b50886113e8565b7fe65af6a0000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b60449250604051917f6e6c983000000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b7fe9e90588000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7fb70024f8000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b34610330576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305761158736612f80565b60807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5c36011261033057604051906115be82612ed9565b60a4358060020b810361033057825260c4358060020b810361033057602083015260e43560408301526101043560608301526101243567ffffffffffffffff81116103305761161190369060040161304c565b90927fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d75761164261360e565b60a0832093845f52600660205260405f20608052611661608051613675565b608084015173ffffffffffffffffffffffffffffffffffffffff811690813303611fdd575b5050815160020b92602083015160020b916116a46040850151613884565b93606087015160020b9760608201516040519960c08b018b811067ffffffffffffffff821117611fb057604052338b528860208c01528660408c015287600f0b60608c015260808b015260a08a01525f9185881215611f79577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276188812611f4d57620d89e88613611f21576040519261173b84612ed9565b5f84525f60208501525f60408501525f606085015287600f0b611c24575b600460805101978960020b5f528860205260405f20988860020b5f5260205260405f206080515460a01c60020b8b81125f14611bce575060028060018c0154600184015490039b015491015490039b5b60a073ffffffffffffffffffffffffffffffffffffffff825116910151906040519160268301528960068301528b600383015281525f603a600c83012091816040820152816020820152525f5260066080510160205260405f20976fffffffffffffffffffffffffffffffff8954169982600f0b155f14611b71578a15611b495761186e61186860409f9b61194d9c61195f9e5b60018301956118606002611854848a548503615802565b95019283548503615802565b9655556131a9565b916131a9565b6fffffffffffffffffffffffffffffffff169060801b179a8b965f84600f0b12611adb575b5082600f0b611997575b5050506118c36118b48560801d8360801d01613884565b9185600f0b90600f0b01613884565b6fffffffffffffffffffffffffffffffff169060801b1791815160020b90602083015160020b8c8401516060850151918e5194855260208501528d84015260608301527ff208f4912782fd25c7f114ca3723a2d5dd6f3bcc3ac8db5af63baa85f711d5ec60803393a38873ffffffffffffffffffffffffffffffffffffffff60808201511661395a565b8094919461196b575b50833391613751565b82519182526020820152f35b6119919073ffffffffffffffffffffffffffffffffffffffff6080840151169083613751565b85611956565b60805154929350909173ffffffffffffffffffffffffffffffffffffffff81169060a01c60020b828112156119fd575050906119f1926119e66119dc6119ec94614257565b91600f0b92614257565b90614626565b613884565b60801b5b8b808061189d565b92809193125f14611aa857611a3c91611a296119ec6119ec93611a2388600f0b91614257565b87614626565b93611a3786600f0b92614257565b6145c9565b6fffffffffffffffffffffffffffffffff169060801b17906fffffffffffffffffffffffffffffffff611a7b60036080510192600f0b8284541661466d565b167fffffffffffffffffffffffffffffffff000000000000000000000000000000008254161790556119f5565b906119ec925092611abe6119dc611ac495614257565b906145c9565b6fffffffffffffffffffffffffffffffff166119f5565b808f9151611b1d575b0151611af1575b8e611893565b611b188260805160049160020b5f52016020525f6002604082208281558260018201550155565b611aeb565b611b448360805160049160020b5f52016020525f6002604082208281558260018201550155565b611ae4565b7faefeb924000000000000000000000000000000000000000000000000000000005f5260045ffd5b61186e61186860409f9b61194d9c61195f9e6fffffffffffffffffffffffffffffffff611ba189600f0b8361466d565b167fffffffffffffffffffffffffffffffff0000000000000000000000000000000084541617835561183d565b9099908913611bf45760028060018c0154600184015490039b015491015490039b6117a9565b9860026001608051015460018c01549003600183015490039a81806080510154910154900391015490039b6117a9565b6004608051018960020b5f5280602052898960405f20611c7d81546fffffffffffffffffffffffffffffffff611c6081831695600f0b8661466d565b16931594858515141595611eed575b508d600f0b9060801d613e39565b60801b82179055602087015285528760020b5f5260205260405f208054906fffffffffffffffffffffffffffffffff8216611cbb8b600f0b8261466d565b901592836fffffffffffffffffffffffffffffffff831615141593611ec0575b8b600f0b9060801d600f0b03916f7fffffffffffffffffffffffffffffff83137fffffffffffffffffffffffffffffffff80000000000000000000000000000000841217611e9357826fffffffffffffffffffffffffffffffff935060801b83831617905516606086015260408501525f88600f0b1215611da0575b8351611d84575b60408401511561175957611d7f60808c015160020b8860056080510161420b565b611759565b611d9b60808c015160020b8a60056080510161420b565b611d5e565b60808b015160020b6fffffffffffffffffffffffffffffffff600181602088015116925f817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276180712817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618050390620d89e8050301810416809111611e67576fffffffffffffffffffffffffffffffff6060860151161115611d5757867fb8e3c385000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b897fb8e3c385000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b6080515460a01c60020b8b13611cdb57600160805101546001840155600260805101546002840155611cdb565b6080515460a01c60020b1215611f04575b8e611c6f565b600160805101546001840155600260805101546002840155611efe565b857f1ad777f8000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b877fd5e2f7ab000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b60448887604051917fc4433ed500000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f6040850151138080916120d5575b1561206a5750506040517f259982e5000000000000000000000000000000000000000000000000000000006020820152612061916113a9826120358887898c33602487016137ca565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101845283612f2d565b505b8580611686565b1590816120c7575b5061207e575b50612063565b6040517f21d0ee700000000000000000000000000000000000000000000000000000000060208201526120c0916113a9826120358887898c33602487016137ca565b5085612078565b610200915016151587612072565b5061080082161515611fec565b346103305760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057612119612e3e565b73ffffffffffffffffffffffffffffffffffffffff612136612e61565b91165f52600560205273ffffffffffffffffffffffffffffffffffffffff60405f2091165f5260205260405f206044355f52602052602060405f2054604051908152f35b346103305760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576121b1612e3e565b602435908115158092036103305773ffffffffffffffffffffffffffffffffffffffff90335f52600360205260405f208282165f5260205260405f207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa26760203392a3602060405160018152f35b346103305760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305761228936612f80565b612291612f6e565b906280000062ffffff60408301511614801590612345575b61231d5760a0906122b98361378d565b205f52600660205260405f20906122cf82613675565b81547fffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffff1660d09190911b7cffffff000000000000000000000000000000000000000000000000000016179055005b7f30d21641000000000000000000000000000000000000000000000000000000005f5260045ffd5b5073ffffffffffffffffffffffffffffffffffffffff6080820151163314156122a9565b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305760043567ffffffffffffffff8111610330576123b890369060040161304c565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c6125cc57612444915f9160017fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235d60405193849283927f91dd734600000000000000000000000000000000000000000000000000000000845260206004850152602484019161316b565b038183335af19081156125c1575f91612519575b507f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5c6124f15760406020915f7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f835194859381855280519182918282880152018686015e5f85828601015201168101030190f35b7f5212cba1000000000000000000000000000000000000000000000000000000005f5260045ffd5b90503d805f833e61252a8183612f2d565b8101906020818303126103305780519067ffffffffffffffff8211610330570181601f820112156103305780519067ffffffffffffffff8211611fb0576040519261259d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185612f2d565b8284526020838301011161033057815f9260208093018386015e8301015281612458565b6040513d5f823e3d90fd5b7f5090d6c6000000000000000000000000000000000000000000000000000000005f5260045ffd5b346103305773ffffffffffffffffffffffffffffffffffffffff61261736612e84565b91929092335f52600560205260405f208282165f5260205260405f20845f526020528260405f205560405192835216907fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a760203392a4602060405160018152f35b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576126aa612e3e565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d75761086960209161352c565b346103305760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576024356004356040519160408360208152826020820152019060051b8301916001602060408501935b83548152019101908483821015610acb57506020600191612734565b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305773ffffffffffffffffffffffffffffffffffffffff61279c612e3e565b6127aa825f54163314613106565b16807fffffffffffffffffffffffff000000000000000000000000000000000000000060025416176002557fb4bd8ef53df690b9943d3318996006dbb82a25f54719d8c8035b516a2a5b8acc5f80a2005b34610330576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305761283436612f80565b60c4359060a43560e43567ffffffffffffffff81116103305761285b90369060040161304c565b9190937fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d75761288d61360e565b60a0842094855f52600660205260405f20946128a886613675565b60808101805173ffffffffffffffffffffffffffffffffffffffff811690813303612a42575b50506fffffffffffffffffffffffffffffffff600388015416978815612a1a576020986128fa876131a9565b5f03612905876131a9565b5f036fffffffffffffffffffffffffffffffff169060801b179887612a06575b866129f1575b5050612938338985613751565b60405190868252858a8301527f29ef05caaff9404b7cb6d1c0e9bbae9eaa7ab2541feba1a9c4248594c08156cb60403393a3519273ffffffffffffffffffffffffffffffffffffffff841693843303612996575b8888604051908152f35b6010166129a4575b8061298c565b6129e5956113a993612035926040519788957fe1b4af69000000000000000000000000000000000000000000000000000000008d88015233602488016136bb565b5082808080808061299e565b600201908660801b048154019055898061292b565b60018101828960801b048154019055612925565b7fa74f97ab000000000000000000000000000000000000000000000000000000005f5260045ffd5b602016612a50575b806128ce565b6040517fb6a8b0fa000000000000000000000000000000000000000000000000000000006020820152612a93916113a9826120358b898b8d8b33602488016136bb565b5088612a4a565b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057600435545f5260205ff35b3461033057612ae236612e84565b907fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d7577f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac7288596103ed73ffffffffffffffffffffffffffffffffffffffff805f941695612b61612b54876131a9565b8603600f0b3390896131ef565b16938484526004602052604084208685526020526040842061025f8282546130f9565b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330577fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d75760206108693361352c565b346103305760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033057612c16612e3e565b612c1e612e61565b604435907fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c156104d757610f2e92612c66612c59846131a9565b5f03600f0b3390836131ef565b6132f7565b346103305773ffffffffffffffffffffffffffffffffffffffff612c8e36612e84565b91929092335f52600460205260405f20845f5260205260405f20612cb38482546130ec565b90551690815f52600460205260405f20835f5260205260405f20612cd88282546130f9565b9055604080513380825260208201939093527f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac7288599181908101610279565b346103305760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610330576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361033057807f01ffc9a70000000000000000000000000000000000000000000000000000000060209214908115612daa575b506040519015158152f35b7f0f632fb30000000000000000000000000000000000000000000000000000000091501482612d9f565b346103305760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103305760209073ffffffffffffffffffffffffffffffffffffffff612e23612e3e565b165f526004825260405f206024355f52825260405f20548152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361033057565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361033057565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126103305760043573ffffffffffffffffffffffffffffffffffffffff8116810361033057906024359060443590565b6080810190811067ffffffffffffffff821117611fb057604052565b6060810190811067ffffffffffffffff821117611fb057604052565b60a0810190811067ffffffffffffffff821117611fb057604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611fb057604052565b60a4359062ffffff8216820361033057565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60a09101126103305760405190612fb782612f11565b8160043573ffffffffffffffffffffffffffffffffffffffff8116810361033057815260243573ffffffffffffffffffffffffffffffffffffffff8116810361033057602082015260443562ffffff811681036103305760408201526064358060020b81036103305760608201526084359073ffffffffffffffffffffffffffffffffffffffff821682036103305760800152565b9181601f840112156103305782359167ffffffffffffffff8311610330576020838186019501011161033057565b9060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126103305760043567ffffffffffffffff811161033057826023820112156103305780600401359267ffffffffffffffff84116103305760248460051b83010111610330576024019190565b91908203918211611e9357565b91908201809211611e9357565b1561310d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152fd5b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601375f8582860101520116010190565b6f800000000000000000000000000000008110156131c757600f0b90565b7f93dafdf1000000000000000000000000000000000000000000000000000000005f5260045ffd5b9190600f0b9182156132f257613225919073ffffffffffffffffffffffffffffffffffffffff8092165f521660205260405f2090565b613231815c9283613c28565b80915d6132a257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5c017f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5d5b565b156132a957565b60017f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5c017f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5d565b505050565b90919073ffffffffffffffffffffffffffffffffffffffff811690816133e95750505f80808093855af1156133295750565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f3d011673ffffffffffffffffffffffffffffffffffffffff604051927f90bfb8650000000000000000000000000000000000000000000000000000000084521660048301525f6024830152608060448301528060a00160648301523d60848301523d5f60a484013e7ff4b3b1bc0000000000000000000000000000000000000000000000000000000060c4828401600460a4820152015260e40190fd5b60205f60448194968260409573ffffffffffffffffffffffffffffffffffffffff988751998a947fa9059cbb00000000000000000000000000000000000000000000000000000000865216600485015260248401525af13d15601f3d116001855114161716928281528260208201520152156134625750565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f3d0116604051917f90bfb86500000000000000000000000000000000000000000000000000000000835260048301527fa9059cbb000000000000000000000000000000000000000000000000000000006024830152608060448301528060a00160648301523d60848301523d5f60a484013e7ff27f64e40000000000000000000000000000000000000000000000000000000060c4828401600460a4820152015260e40190fd5b7f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95c919073ffffffffffffffffffffffffffffffffffffffff8316613581576132a09034935b61357b856131a9565b906131ef565b346135e6576132a0906135bd7f1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd955c6135b886613b91565b6130ec565b935f7f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95d613572565b7fb0ec849e000000000000000000000000000000000000000000000000000000005f5260045ffd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361364d57565b7f0d89438e000000000000000000000000000000000000000000000000000000005f5260045ffd5b5473ffffffffffffffffffffffffffffffffffffffff161561369357565b7f486aa307000000000000000000000000000000000000000000000000000000005f5260045ffd5b91926137366101209473ffffffffffffffffffffffffffffffffffffffff61374e999794168552602085019073ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b60c083015260e082015281610100820152019161316b565b90565b9073ffffffffffffffffffffffffffffffffffffffff60206132a0949361378085848351168660801d906131ef565b01511690600f0b906131ef565b62ffffff16620f4240811161379f5750565b7f14002113000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9061374e95936138476101609473ffffffffffffffffffffffffffffffffffffffff61387694168552602085019073ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b8051600290810b60c08501526020820151900b60e0840152604081015161010084015260600151610120830152565b81610140820152019161316b565b9081600f0b9182036131c757565b926139409061391161374e99979473ffffffffffffffffffffffffffffffffffffffff6101a09895168752602087019073ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b8051600290810b60c08701526020820151900b60e0860152604081015161010086015260600151610120850152565b61014083015261016082015281610180820152019161316b565b939590919296945f9673ffffffffffffffffffffffffffffffffffffffff86163314613aab57885f6040870151135f14613a3a5761040087166139a1575b50505050505050565b613a2d9799985092613a26969594926139ee92613a1a956040519788967f9f063efc0000000000000000000000000000000000000000000000000000000060208901523360248901613892565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612f2d565b6002821615159161469e565b80926146be565b915f808080808080613998565b9594939291906101008616613a525750505050505050565b613a2d979950869850916139ee91613a9f9493613a26986040519788967f6c2bbe7e0000000000000000000000000000000000000000000000000000000060208901523360248901613892565b6001821615159161469e565b505f96505050505050565b608081161580613b68575b613b3e57604081161580613b5c575b613b3e5761040081161580613b50575b613b3e5761010081161580613b44575b613b3e5773ffffffffffffffffffffffffffffffffffffffff8116613b1e575062ffffff1662800000141590565b613fff161590811591613b2f575090565b62800000915062ffffff161490565b50505f90565b50600181161515613af0565b50600281161515613ae0565b50600481161515613ad0565b50600881161515613ac1565b6280000062ffffff821614613b8c5761374e8161378d565b505f90565b73ffffffffffffffffffffffffffffffffffffffff1680613bb157504790565b6020602491604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa9081156125c1575f91613bf9575090565b90506020813d602011613c20575b81613c1460209383612f2d565b81010312610330575190565b3d9150613c07565b9190915f8382019384129112908015821691151617611e9357565b6020830151955f9586959194913373ffffffffffffffffffffffffffffffffffffffff851614613e2c5760808416613c7d575b5050505050565b613d65926139ee613d5f92613d4b946040519586947f575e24b4000000000000000000000000000000000000000000000000000000006020870152336024870152613d15604487018c73ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b8051151560e487015260208101516101048701526040015173ffffffffffffffffffffffffffffffffffffffff16610124860152565b61014061014485015261016484019161316b565b82614024565b916060835103613e04576040015162ffffff166280000014613df8575b600816613d93575b80808080613c76565b604001519250608083901d600f0b8015613d8a57613db4905f861295613c28565b9315613df0575f84135b613dc8575f613d8a565b7ffa0b71d6000000000000000000000000000000000000000000000000000000005f5260045ffd5b5f8412613dbe565b60608201519350613d82565b7f1e048e1d000000000000000000000000000000000000000000000000000000005f5260045ffd5b505f965086955050505050565b90600f0b90600f0b01907fffffffffffffffffffffffffffffffff8000000000000000000000000000000082126f7fffffffffffffffffffffffffffffff831317611e9357565b9196959394929473ffffffffffffffffffffffffffffffffffffffff83163314614017578460801d94600f0b938860408516613f3f575b50505050505f9481600f0b15801590613f33575b613ed7575b5050509190565b613f0e9395505f60208201511290511515145f14613f16576fffffffffffffffffffffffffffffffff169060801b175b80936146be565b5f8080613ed0565b906fffffffffffffffffffffffffffffffff169060801b17613f07565b5082600f0b1515613ecb565b613ffb614007946139ee6119ec9561400d999895613fe0613d15966040519788967fb47b2fb1000000000000000000000000000000000000000000000000000000006020890152336024890152604488019073ffffffffffffffffffffffffffffffffffffffff6080809282815116855282602082015116602086015262ffffff6040820151166040860152606081015160020b6060860152015116910152565b8c61014485015261016061016485015261018484019161316b565b6004821615159161469e565b90613e39565b5f80808088613eb7565b5050505050909150905f90565b9190918251925f8060208301958682865af1156140c2575050604051917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f3d011683016040523d83523d9060208401915f833e602084511091821561408e575b5050613e0457565b5190517fffffffff000000000000000000000000000000000000000000000000000000009182169116141590505f80614086565b5183517fffffffff00000000000000000000000000000000000000000000000000000000811691600481106141d6575b50507fffffffff000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f3d01169173ffffffffffffffffffffffffffffffffffffffff604051947f90bfb865000000000000000000000000000000000000000000000000000000008652166004850152166024830152608060448301528060a00160648301523d60848301523d5f60a484013e7fa9e35b2f0000000000000000000000000000000000000000000000000000000060c4828401600460a4820152015260e40190fd5b7fffffffff000000000000000000000000000000000000000000000000000000009250829060040360031b1b161682806140f2565b919060020b9060020b908181076142395705908160081d5f52602052600160ff60405f2092161b8154189055565b601c906044926040519163d4d8f3e683526020830152604082015201fd5b60020b908160ff1d82810118620d89e8811161459d5763ffffffff9192600182167001fffcb933bd6fad37aa2d162d1a59400102700100000000000000000000000000000000189160028116614581575b60048116614565575b60088116614549575b6010811661452d575b60208116614511575b604081166144f5575b608081166144d9575b61010081166144bd575b61020081166144a1575b6104008116614485575b6108008116614469575b611000811661444d575b6120008116614431575b6140008116614415575b61800081166143f9575b6201000081166143dd575b6202000081166143c2575b6204000081166143a7575b620800001661438e575b5f12614367575b0160201c90565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04614360565b6b048a170391f7dc42444e8fa290910260801c90614359565b6d2216e584f5fa1ea926041bedfe9890920260801c9161434f565b916e5d6af8dedb81196699c329225ee6040260801c91614344565b916f09aa508b5b7a84e1c677de54f3e99bc90260801c91614339565b916f31be135f97d08fd981231505542fcfa60260801c9161432e565b916f70d869a156d2a1b890bb3df62baf32f70260801c91614324565b916fa9f746462d870fdf8a65dc1f90e061e50260801c9161431a565b916fd097f3bdfd2022b8845ad8f792aa58250260801c91614310565b916fe7159475a2c29b7443b29c7fa6e889d90260801c91614306565b916ff3392b0822b70005940c7a398e4b70f30260801c916142fc565b916ff987a7253ac413176f2b074cf7815e540260801c916142f2565b916ffcbe86c7900a88aedcffc83b479aa3a40260801c916142e8565b916ffe5dee046a99a2a811c461f1969c30530260801c916142de565b916fff2ea16466c96a3843ec78b326b528610260801c916142d5565b916fff973b41fa98c081472e6896dfb254c00260801c916142cc565b916fffcb9843d60f6159c9db58835c9266440260801c916142c3565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c916142ba565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c916142b1565b916ffff97272373d413259a46990580e213a0260801c916142a8565b827f8b86327a000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b905f83600f0b125f146145fe576145f4925f036fffffffffffffffffffffffffffffffff1691615b3c565b5f81126131c75790565b61461a926fffffffffffffffffffffffffffffffff1691615ae1565b5f81126131c7575f0390565b905f83600f0b125f14614651576145f4925f036fffffffffffffffffffffffffffffffff1691615c33565b61461a926fffffffffffffffffffffffffffffffff1691615b7c565b906fffffffffffffffffffffffffffffffff90600f0b911601908160801c61469157565b6393dafdf15f526004601cfd5b906146a891614024565b9015613b8c576040815103613e04576040015190565b6146e1906146d38360801d8260801d03613884565b92600f0b90600f0b03613884565b6fffffffffffffffffffffffffffffffff169060801b1790565b73fffd8963efd1fc6a506488495d951d516396168273ffffffffffffffffffffffffffffffffffffffff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffd895d830116116149df5777ffffffffffffffffffffffffffffffffffffffff000000008160201b168060ff61477883615cda565b1691608083106149d357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8182011c5b800280607f1c8160ff1c1c800280607f1c8160ff1c1c800280607f1c8160ff1c1c800280607f1c8160ff1c1c800280607f1c8160ff1c1c800280607f1c8160ff1c1c80029081607f1c8260ff1c1c80029283607f1c8460ff1c1c80029485607f1c8660ff1c1c80029687607f1c8860ff1c1c80029889607f1c8a60ff1c1c80029a8b607f1c8c60ff1c1c80029c8d80607f1c9060ff1c1c800260cd1c6604000000000000169d60cc1c6608000000000000169c60cb1c6610000000000000169b60ca1c6620000000000000169a60c91c6640000000000000169960c81c6680000000000000169860c71c670100000000000000169760c61c670200000000000000169660c51c670400000000000000169560c41c670800000000000000169460c31c671000000000000000169360c21c672000000000000000169260c11c674000000000000000169160c01c67800000000000000016907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800160401b1717171717171717171717171717693627a301d71055774c85027ffffffffffffffffffffffffffffffffffd709b7e5480fba5a50fed5e62ffc556810160801d60020b906fdb2df09e81959a81455e260799a0632f0160801d60020b918282145f146149905750905090565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff6149c484614257565b16116149ce575090565b905090565b905081607f031b6147a8565b73ffffffffffffffffffffffffffffffffffffffff907f61487524000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b8115614a2b570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b6040519290915f614a6885612ef5565b5f855260208501925f845260408601955f875280968654956040860151159586155f146157f457610fff8860b81c16945b8151925f948a73ffffffffffffffffffffffffffffffffffffffff16918288528b60a01c60020b90526fffffffffffffffffffffffffffffffff60038d0154169052608083015162400000811615155f146157e55762bfffff16614afc8161378d565b61ffff88166157ca575b8096620f424062ffffff83161015615799575b8451156157835750508861572357606083019073ffffffffffffffffffffffffffffffffffffffff825116818110156156ec5750505173ffffffffffffffffffffffffffffffffffffffff166401000276a38111156156c157505b604051986101008a018a811067ffffffffffffffff821117611fb0576040525f8a525f60208b01525f60408b01525f60608b01525f60808b01525f60a08b01525f60c08b015288155f146156b35760018b0154949390945b60e08b01525b80158015615679575b61551f5788868d8c8e73ffffffffffffffffffffffffffffffffffffffff8351168252602083015160020b602089015160020b90815f8183071291050386155f14615374576fffffffffffffffffffffffffffffffff937ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860409460019484600560ff60609716938260020b60081d890b5f5201602052875f207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8460ff031c9054169283151593845f146153625790614cb660ff92615cda565b90031660020b900360020b0260020b5b905b15158684015260020b8060208401521315615337575b620d89e8602082015160020b1215615329575b73ffffffffffffffffffffffffffffffffffffffff614d16602083015160020b614257565b16918291015273ffffffffffffffffffffffffffffffffffffffff8551169673ffffffffffffffffffffffffffffffffffffffff60608c0151169283911516818310189118021892015116928d73ffffffffffffffffffffffffffffffffffffffff8316821015915f87125f1461517e5762ffffff8516620f424003614d9e81895f03615884565b94841561516d57614db0888483615b7c565b955b8681106150b157509660a093929173ffffffffffffffffffffffffffffffffffffffff98978891620f424062ffffff8316145f1461509d575050865b955b1561508f5791614dff92615b3c565b925b60c0820152015260808d0152168c525f8351135f1461505f5760a08a0151905f82126131c7570392614e3c60808b015160c08c0151906130f9565b5f81126131c7578103908113600116611e9357935b61ffff8716615017575b6fffffffffffffffffffffffffffffffff60408d01511680614ffd575b5073ffffffffffffffffffffffffffffffffffffffff8c511673ffffffffffffffffffffffffffffffffffffffff60608c01511681145f14614fc1575060408a0151614f0f575b88614f02577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60208b015160020b0160020b5b60020b60208d01525b9392614bd2565b60208a015160020b614ef2565b88614f95576fffffffffffffffffffffffffffffffff614f7c8d8d8d600460e08201519260206002820154935b015160020b60020b5f520160205260405f2091600183019081549003905560028201908154900390555460801d908c15614f87575b60400151831661466d565b1660408d0152614ebf565b5f91909103600f0b90614f71565b6fffffffffffffffffffffffffffffffff614f7c8d8d8d6004600183015492602060e084015193614f3c565b73ffffffffffffffffffffffffffffffffffffffff8b51168103614fe6575b50614efb565b614fef906146fb565b60020b60208d01525f614fe0565b60c08b015160801b0460e08b01510160e08b01525f614e78565b9662ffffff861661ffff8816036150425760c08a0151905b8160c08c01510360c08c01520196614e5b565b620f424060808b015161ffff89169060c08d01510102049061502f565b60808a015160c08b015101905f82126131c757019260a08a01515f81126131c75761508991613c28565b93614e51565b61509892615c33565b614dff565b62ffffff6150ac921689615d67565b614dee565b9650505092505082918415811517615160578e60a09173ffffffffffffffffffffffffffffffffffffffff96845f146150fb576150ef878284615e06565b80978a015f0395614df0565b8787116151395761513461512f6151276fffffffffffffffffffffffffffffffff84168a60601b614a21565b8a85166130f9565b615e9a565b6150ef565b61513461512f61515b6fffffffffffffffffffffffffffffffff84168a615989565b615127565b634f2461b85f526004601cfd5b615178888285615ae1565b95614db2565b9193509190831561531857615194858284615b3c565b915b8287106151f6579073ffffffffffffffffffffffffffffffffffffffff9560a09280965b156151e757916151c992615b7c565b925b6151e262ffffff8d16620f42408190039086615d67565b614e01565b6151f092615ae1565b926151cb565b50915050838315821517615160578d83156152ee575073ffffffffffffffffffffffffffffffffffffffff851161529b578460601b6fffffffffffffffffffffffffffffffff851680820615159104015b73ffffffffffffffffffffffffffffffffffffffff8316928184111561528e578f939573ffffffffffffffffffffffffffffffffffffffff60a093819803165b80966151ba565b634323a5555f526004601cfd5b6fffffffffffffffffffffffffffffffff84166152c6816c0100000000000000000000000088615a42565b908015614a2b576c010000000000000000000000008709156152475760010180615247575f80fd5b9180856153138873ffffffffffffffffffffffffffffffffffffffff9860a095615d90565b615287565b615323858383615c33565b91615196565b620d89e86020820152614cf1565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186020820152614cde565b5060020b900360020b0260020b614cc6565b60019194939650600592955001938460020b60081d60010b5f520160205260405f207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600160ff86161b0119905416908d8b831592831597885f146154c05750505050610330578f9160018f8f96907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186060928f989560409660ff896fffffffffffffffffffffffffffffffff9a5f03166101e07f804040554300526644320000502061067405302602000010750620017611707760fc7fb6db6db6ddddddddd34d34d349249249210842108c6318c639ce739cffffffff840260f81c161b60f71c167e1f0d1e100c1d070f090b19131c1706010e11080a1a141802121b1503160405601f85851693831c63d76453e004161a17031660020b9060020b0160020b0260020b5b90614cc8565b90956fffffffffffffffffffffffffffffffff955060409450600193987ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618918960ff6060969b811681031660020b9060020b0160020b0260020b6154ba565b949891955099969298919598602088015160a01b76ffffff0000000000000000000000000000000000000000167fffffffffffffffffff000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff8a51169216171782556fffffffffffffffffffffffffffffffff6003830154166fffffffffffffffffffffffffffffffff604089015116809103615634575b5082156156255760e060029101519101555b825190155f82121461560f57506155ed6155f59293613884565b925103613884565b6fffffffffffffffffffffffffffffffff169060801b1793565b6155f592509061561f9103613884565b91613884565b60e060019101519101556155d3565b6fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff000000000000000000000000000000006003840154161760038301555f6155c1565b5073ffffffffffffffffffffffffffffffffffffffff8c511673ffffffffffffffffffffffffffffffffffffffff60608501511614614bdb565b60028b015494939094614bcc565b7f9e4d7cc7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b60449250604051917f7c9c6e8f00000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b606083019073ffffffffffffffffffffffffffffffffffffffff825116818111156156ec5750505173ffffffffffffffffffffffffffffffffffffffff1673fffd8963efd1fc6a506488495d951d5263988d268110156156c15750614b74565b9a509a50509950505050505050505f925f929190565b5f85511315614b19577f96206246000000000000000000000000000000000000000000000000000000005f5260045ffd5b62ffffff610fff89169116620f424081830204910103614b06565b508960d01c62ffffff16614afc565b610fff8860c41c1694614a99565b90808202917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff828209918380841093039280840393847001000000000000000000000000000000001115610330571461587b57700100000000000000000000000000000000910990828211900360801b910360801c1790565b50505060801c90565b818102907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83820990828083109203918083039283620f424011156103305714615903577fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c2613993620f4240910990828211900360fa1b910360061c170290565b5050620f424091500490565b90808202917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff828209918380841093039280840393846c0100000000000000000000000011156103305714615980576c01000000000000000000000000910990828211900360a01b910360601c1790565b50505060601c90565b908160601b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6c010000000000000000000000008409928280851094039380850394858411156103305714615a3b576c0100000000000000000000000082910981805f03168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b5091500490565b91818302917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818509938380861095039480860395868511156103305714615ad9579082910981805f03168092046002816003021880820260020302808202600203028082026002030280820260020302808202600203028091026002030293600183805f03040190848311900302920304170290565b505091500490565b6fffffffffffffffffffffffffffffffff6c010000000000000000000000009173ffffffffffffffffffffffffffffffffffffffff80600195169116038060ff1d90810118931692615b33818561590f565b93091515160190565b6fffffffffffffffffffffffffffffffff9073ffffffffffffffffffffffffffffffffffffffff8061374e9594169116038060ff1d90810118911661590f565b9073ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff831611615c2d575b73ffffffffffffffffffffffffffffffffffffffff8216928315615c21577bffffffffffffffffffffffffffffffff00000000000000000000000073ffffffffffffffffffffffffffffffffffffffff615c15948185169403169160601b16615d67565b90808206151591040190565b62bfc9215f526004601cfd5b90615bb1565b73ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff821611615cd4575b73ffffffffffffffffffffffffffffffffffffffff8116918215615c215761374e937bffffffffffffffffffffffffffffffff00000000000000000000000073ffffffffffffffffffffffffffffffffffffffff615ccf948185169403169160601b16615a42565b614a21565b90615c67565b8015610330577f07060605060205000602030205040001060502050303040105050304000000006f8421084210842108cc6318c6db6d54be826fffffffffffffffffffffffffffffffff1060071b83811c67ffffffffffffffff1060061b1783811c63ffffffff1060051b1783811c61ffff1060041b1783811c60ff1060031b1792831c1c601f161a1790565b929190615d75828286615a42565b938215614a2b5709615d8357565b9060010190811561033057565b91908115615e01577bffffffffffffffffffffffffffffffff00000000000000000000000073ffffffffffffffffffffffffffffffffffffffff9160601b169216918282029183838311918404141615615df45761374e9261512f92820391615d67565b63f5c787f15f526004601cfd5b505090565b90918015615e945773ffffffffffffffffffffffffffffffffffffffff7bffffffffffffffffffffffffffffffff000000000000000000000000819460601b16921680820281615e568483614a21565b14615e7c575b5090615e6b615e709284614a21565b6130f9565b80820615159104011690565b8301838110615e5c579150615e9092615d67565b1690565b50905090565b9073ffffffffffffffffffffffffffffffffffffffff82169182036131c75756fea2646970667358221220cb6ff0ee75123f16780a5d0193d040e80ad0b885403a6ea219d55ca2203b9b6e64736f6c634300081a0033",
    "sourceMap": "4714:14143:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7189:13;4714:14143;7189:13;;;4714:14143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;1928:50:16;;4714:14143:21;;;;;;1594:10:16;;;:20;;:55;;;4714:14143:21;1590:237:16;;4714:14143:21;;;;;;;;;;;;;;;;;;1837:31:16;4714:14143:21;;;1837:31:16;:::i;:::-;4714:14143:21;;;;;;;;;;;;;;;;;;;;;1879:33:16;4714:14143:21;;;1879:33:16;:::i;:::-;4714:14143:21;;;;;1594:10:16;4714:14143:21;;;;;;;;;;;;;;;;;1928:50:16;;;;4714:14143:21;;;;;;;1590:237:16;4714:14143:21;;;1683:9:16;4714:14143:21;;;;;1594:10:16;;4714:14143:21;-1:-1:-1;4714:14143:21;;;;-1:-1:-1;4714:14143:21;;;;;;;;;;1734:28:16;1745:17;1734:28;;1730:86;;1590:237;;;;;1730:86;1800:16;;;:::i;:::-;4714:14143:21;;;1683:9:16;4714:14143:21;;;;;1594:10:16;;4714:14143:21;-1:-1:-1;4714:14143:21;;;;-1:-1:-1;4714:14143:21;;;;;;;;;;1730:86:16;;;;1594:55;4714:14143:21;;;;1619:10:16;4714:14143:21;;;;;1594:10:16;;4714:14143:21;-1:-1:-1;4714:14143:21;;;;;-1:-1:-1;4714:14143:21;;;1618:31:16;1594:55;;4714:14143:21;;;;;;;;;;;:::i;:::-;837:84:41;;6048:18:21;6044:59;;3435:52:16;;4714:14143:21;;;;;16311:17;16330:10;16311:17;;;:::i;:::-;16330:10;;;;:::i;:::-;4714:14143;16330:10;;651:14:17;;;:43;;;4714:14143:21;647:269:17;;4714:14143:21;;;;;;;;;;;;;;;;;;3388:31:16;4714:14143:21;;;3388:31:16;:::i;3435:52::-;;;;4714:14143:21;647:269:17;4714:14143:21;;;736:9:17;4714:14143:21;;;;;;16330:10;4714:14143;;;;;;;;;;;;;;;;;781:36:17;800:17;781:36;;777:129;;647:269;;;;;777:129;867:24;;;:::i;:::-;4714:14143:21;;;736:9:17;4714:14143:21;;;;;;16330:10;4714:14143;;;;;;;;;;;;;;;;;777:129:17;;;;651:43;4714:14143:21;;;;670:10:17;4714:14143:21;;;;;;16330:10;4714:14143;;;;;;;;;;;669:25:17;651:43;;6044:59:21;6068:22;4714:14143;814:96:34;4714:14143:21;;814:96:34;4714:14143:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;837:84:41;;;;;6048:18:21;6044:59;;1169:76:20;;:::i;:::-;4714:14143:21;10233:27;10229:77;;357:173:61;;4714:14143:21;357:173:61;;4714:14143:21;;;;18647:6;4714:14143;;;;;10396:25;;;;:::i;:::-;10605:9;;;4714:14143;;;;;;;;;10605:43;;;;:::i;:::-;10890:15;;;;4714:14143;10890:15;;4714:14143;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;10839:302;;4714:14143;;10839:302;;4714:14143;;10839:302;;4714:14143;;;10605:9;10839:302;;4714:14143;;;;;11159:49;;4714:14143;11159:49;11556:10;11159:49;12964:237;11936:17;11315:70;11159:49;4714:14143;11159:49;;;4714:14143;5164:25;;4714:14143;11159:49;11936:17;:::i;:::-;11968:20;;;;;;11964:78;;11159:49;4714:14143;;;;;;12207:16;;4714:14143;;12207:16;;4714:14143;;;;;12237:11;4714:14143;12237:11;;4714:14143;;;;;;;;2052:83:58;;10605:9:21;2052:83:58;2241:89;4714:14143:21;;;2241:89:58;;4714:14143:21;;;;;;;;;;;;10605:9;4714:14143;;;;;;;5164:25;12092:10;12058:221;12092:10;;12058:221;;4714:14143;;5164:25;;4714:14143;12538:13;;5164:25;4714:14143;5164:25;;4714:14143;12566:16;;;12562:183;4714:14143;;;12609:21;12562:183;;12758:16;4714:14143;;12801:21;;12754:196;;4714:14143;;13082:21;4714:14143;;;;;;;;;;;;;;;;;;;;;;;;;;;;10605:9;4714:14143;;;;;;;12964:237;4714:14143;;;;;11315:70;:::i;:::-;1676:48:58;;;;11396:109:21;;12754:196;12092:10;;;;11556;;:::i;:::-;4714:14143;;;;;;11396:109;4714:14143;11486:18;4714:14143;;;11486:18;;;:::i;:::-;11396:109;;;;12754:196;4714:14143;12910:29;5164:25;;4714:14143;12910:29;:::i;:::-;12754:196;;;12562:183;12705:29;;;:::i;:::-;12562:183;;;11964:78;4714:14143;;;;;;;;;;;;;;258:35:35;4714:14143:21;;11964:78;;;;11159:49;11195:13;4714:14143;11195:13;;;5164:25;4714:14143;11159:49;11936:17;:::i;10229:77::-;10262:31;4714:14143;814:96:34;4714:14143:21;;814:96:34;4714:14143:21;;;;;;;;;;;;;;:::i;:::-;;;;;756:44:15;4714:14143:21;;;764:10:15;:19;756:44;:::i;:::-;4714:14143:21;;;;;;;;764:10:15;1424:42;4714:14143:21;1424:42:15;;4714:14143:21;;;;;;;;;;;;;;422:99:19;4714:14143:21;422:99:19;4714:14143:21;;422:99:19;4714:14143:21;;;;;;;;;;;;;931:36:22;4714:14143:21;;;;;;;;;;;;;;;:::i;:::-;;1664:936:18;;4714:14143:21;1664:936:18;;;;;;;;;;;;;;;;;;4714:14143:21;1664:936:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:14143:21;1664:936:18;;;;;;4714:14143:21;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;697:88:16;4714:14143:21;;;;;;697:88:16;4714:14143:21;-1:-1:-1;4714:14143:21;;;;;;-1:-1:-1;4714:14143:21;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4998:58:60;14151:24:21;;766:73:33;;4714:14143:21;766:73:33;;4714:14143:21;14147:341;14380:24;;;:::i;:::-;937:173:33;;;;;4714:14143:21;;;;;;;;:::i;:::-;;658:936:19;;4714:14143:21;658:936:19;;;;;;;;;;;;;;;;;;4714:14143:21;658:936:19;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:14143:21;;;;;;;;;;;;;;:::i;:::-;;;;819:71:22;4714:14143:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;1917:21:22;4714:14143:21;;1903:10:22;:35;1899:76;;4714:14143:21;;;4998:58:60;;1989:25:22;:77;;;4714:14143:21;1985:257:22;;4714:14143:21;;2421:15:22;;2271:11;;;4714:14143:21;;;;;;;;;;;2270:54:22;;;;4714:14143:21;;;;;;;;2334:48:22;4714:14143:21;;;2334:48:22;:::i;:::-;4714:14143:21;;2421:15:22;:::i;2270:54::-;;;;;;1985:257;2184:34;4714:14143:21;814:96:34;4714:14143:21;;814:96:34;1989:77:22;629:81:33;;4714:14143:21;629:81:33;;4714:14143:21;448:51:60;1989:77:22;;1899:76;1940:22;4714:14143:21;814:96:34;4714:14143:21;;814:96:34;4714:14143:21;;;;;;;;;;;;;:::i;:::-;837:84:41;;6048:18:21;6044:59;;15317:10;547:238:32;;;;;;;;;;;;956:73;15436:17:21;4714:14143;;15436:17;:::i;:::-;4714:14143;;;;15467:22;15463:77;;15674:10;15317;;4714:14143;;;;;15674:10;;:::i;:::-;4714:14143;15463:77;15491:36;4714:14143;814:96:34;4714:14143:21;;814:96:34;4714:14143:21;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;1393:21:22;4714:14143:21;;1379:10:22;:35;1375:76;;1088:252:46;;;;;;;;;;;1465:36:22;1461:97;;4714:14143:21;;1658:38:22;357:173:61;;4714:14143:21;;;;18647:6;4714:14143;;;;;5072:25:44;;;:::i;:::-;4714:14143:21;;2855:254:63;;;;;;;;;4714:14143:21;;;;;;;5164:25;;1658:38:22;4714:14143:21;1461:97:22;4714:14143:21;1084:176:34;1503:28:22;4714:14143:21;1084:176:34;4714:14143:21;;1084:176:34;;4714:14143:21;1084:176:34;4714:14143:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1169:76:20;;:::i;:::-;6960:15:21;;;4714:14143;;;;;1676:15:52;6960:34:21;;6956:96;;4714:14143;;;;;;7066:34;;7062:96;;5164:25;4714:14143;5164:25;;4714:14143;7189:13;;;5164:25;4714:14143;5164:25;;4714:14143;887:51:60;;;;7168:202:21;;7384:9;;;;;4714:14143;;;;;7413:7;4714:14143;7413:7;;4714:14143;7384:37;4714:14143;;;;7384:37;;:::i;:::-;7383:38;7379:109;;4714:14143;7514:25;4714:14143;;;;7514:25;:::i;:::-;4714:14143;;;;;;8736:10:38;;;:27;8732:59;;4714:14143:21;357:173:61;;4714:14143:21;357:173:61;;4714:14143:21;;;;7646:6;7189:13;4714:14143;;;;;;;;1502:93:63;4665:80:44;;7189:13:21;4763:41:44;8012:101:21;4763:41:44;3217:178:63;4763:41:44;4714:14143:21;4763:41:44;;:::i;:::-;3217:178:63;;;;2578:157;;;;;;3217:178;;4714:14143:21;;;;5164:25;;;4714:14143;5164:25;;4714:14143;;;;;;;;;;;;;;;5164:25;;;;;;4714:14143;;5164:25;;;;6960:15;5164:25;;4714:14143;;;5164:25;;7384:9;5164:25;;4714:14143;8012:101;4714:14143;;;;8736:10:38;;;:27;8732:59;;4714:14143:21;;;;;;;;;8732:59:38;4714:14143:21;16441:29:38;9413:164;;8732:59;;;;9413:164;9474:92;4714:14143:21;1382:7:38;4714:14143:21;;9488:77:38;;;;;;8736:10;9488:77;;;4714:14143:21;1382:7:38;;;;4714:14143:21;1829:6:38;;;;;;4714:14143:21;5164:25;;1829:6:38;;;;;4714:14143:21;1829:6:38;;;5164:25:21;4714:14143;1829:6:38;;;;4714:14143:21;1829:6:38;;;5164:25:21;1829:6:38;;;;4714:14143:21;;1829:6:38;;;4714:14143:21;1829:6:38;;4714:14143:21;1829:6:38;;5164:25:21;1829:6:38;1382:7;;;;4714:14143:21;1382:7:38;;;;4714:14143:21;1382:7:38;9488:77;;;;;;:::i;:::-;9474:92;:::i;:::-;;9413:164;;;;;4665:80:44;4701:31;4714:14143:21;814:96:34;4714:14143:21;;814:96:34;8732:59:38;4714:14143:21;16441:29:38;9007:160;;8732:59;;;;9007:160;9069:87;4714:14143:21;;;9083:72:38;;7189:13:21;9083:72:38;;;8736:10;9083:72;;;4714:14143:21;1319:7:38;;;;;4714:14143:21;1829:6:38;;;;;;4714:14143:21;5164:25;;1829:6:38;;;;;4714:14143:21;1829:6:38;;;5164:25:21;4714:14143;1829:6:38;;;;4714:14143:21;1829:6:38;;;5164:25:21;1829:6:38;;;;4714:14143:21;;1829:6:38;;;4714:14143:21;1829:6:38;;4714:14143:21;1829:6:38;;5164:25:21;1829:6:38;1319:7;;;;;4714:14143:21;1319:7:38;9083:72;;;;;;:::i;9069:87::-;;9007:160;;;7379:109:21;7423:34;4714:14143;1084:176:34;4714:14143:21;1084:176:34;;4714:14143:21;1084:176:34;7168:202:21;3008:319:34;;;4714:14143:21;3008:319:34;;7218:36:21;3008:319:34;;4714:14143:21;3008:319:34;;;;;;;;7062:96:21;7102:28;4714:14143;1431:143:34;4714:14143:21;1431:143:34;;4714:14143:21;1431:143:34;6956:96:21;6996:28;4714:14143;1431:143:34;4714:14143:21;1431:143:34;;4714:14143:21;1431:143:34;4714:14143:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;837:84:41;;;;6048:18:21;6044:59;;1169:76:20;;:::i;:::-;4714:14143:21;357:173:61;;4714:14143:21;;;;18647:6;4714:14143;;;;;;;8580:25;;;;:::i;:::-;4714:14143;8622:9;;4714:14143;;;;8736:10:38;;;:27;8732:59;;4714:14143:21;;;;;;;;;;;;;;;9004:32;4714:14143;;;;9004:32;:::i;:::-;9071:15;4714:14143;9071:15;;4714:14143;;;;;;;;;;;;;;;;;;;;;;;;;8736:10:38;4714:14143:21;;8802:342;4714:14143;8802:342;;4714:14143;8802:342;4714:14143;8802:342;;4714:14143;;;;;8802:342;;4714:14143;;8802:342;;4714:14143;;8802:342;;4714:14143;;4263:22:44;;;;;4259:85;;1032:7:52;4358:29:44;;4354:86;;1317:6:52;4454:29:44;;4450:86;;4714:14143:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6884:1188:44;;4714:14143:21;;23528:10:44;;;:21;4714:14143:21;;;;;;;;;;;23584:21:44;4714:14143:21;;;;;;;;;;23635:10:44;;4714:14143:21;;1682:98:63;4714:14143:21;1682:98:63;23691:23:44;;;23687:800;23691:23;;;23757:27;4714:14143:21;23757:27:44;4714:14143:21;23757:27:44;;4714:14143:21;;23787:27:44;;4714:14143:21;;;23855:27:44;;4714:14143:21;23885:27:44;;4714:14143:21;;;23687:800:44;;4714:14143:21;;5164:25;;4714:14143;8802:342;;4714:14143;2447:609:45;4714:14143:21;2447:609:45;;;;;;;18647:6:21;2447:609:45;;;;;;;;;;4714:14143:21;2447:609:45;;;;;;;4714:14143:21;2447:609:45;;;;4714:14143:21;2447:609:45;;;;4714:14143:21;;18647:6;8286:14:44;;;4714:14143:21;;;;;;;;;;;;;;6888:19:44;3970:270:45;4714:14143:21;;;4069:14:45;;4065:67;;8645:20:44;8623;4714:14143:21;3970:270:45;;9600:79:21;3970:270:45;9954:10:21;3970:270:45;;4714:14143:21;4434:29:45;;4714:14143:21;4537:100:45;4714:14143:21;4395:100:45;4714:14143:21;;;;;4395:100:45;:::i;:::-;4576:29;;4714:14143:21;;;;;4537:100:45;:::i;:::-;4714:14143:21;;;8623:20:44;:::i;:::-;8645;;:::i;:::-;4714:14143:21;553:115:58;;4714:14143:21;553:115:58;;4714:14143:21;;;;;;;8759:18:44;8755:255;;3970:270:45;4714:14143:21;;;;9030:1774:44;;3970:270:45;785:220:58;;;1049:15;1032;785:220;4714:14143:21;785:220:58;;4714:14143:21;785:220:58;;1032:15;:::i;:::-;785:220;;4714:14143:21;785:220:58;;4714:14143:21;785:220:58;;1049:15;:::i;:::-;4714:14143:21;553:115:58;;4714:14143:21;553:115:58;;4714:14143:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9427:103;4714:14143;8736:10:38;9427:103:21;;8622:9;4714:14143;;8622:9;;4714:14143;;9600:79;:::i;:::-;1676:48:58;;;;9791:109:21;;3970:270:45;8736:10:38;;;9954::21;;:::i;:::-;4714:14143;;;;;;;;;;9791:109;9881:18;8622:9;4714:14143;;8622:9;;4714:14143;;9881:18;;;:::i;:::-;9791:109;;;9030:1774:44;9084:10;;4714:14143:21;9084:10:44;;-1:-1:-1;9084:10:44;;4714:14143:21;1502:93:63;;;4714:14143:21;1682:98:63;4714:14143:21;1682:98:63;9201:16:44;;;;;;9568:38;;;9513:182;9568:38;9608;9568;9513:171;9568:38;;:::i;:::-;4714:14143:21;;;9608:38:44;;:::i;:::-;9513:171;;:::i;:::-;:182;:::i;:::-;4714:14143:21;553:115:58;9197:1597:44;9030:1774;;;;;9197:1597;9761:16;;;;;9757:1037;4714:14143:21;;;9998:135:44;4714:14143:21;9841:135:44;:99;9998;4714:14143:21;9885:38:44;4714:14143:21;;;9885:38:44;;:::i;:::-;9841:99;;:::i;:135::-;4714:14143:21;10028:38:44;4714:14143:21;;;10028:38:44;;:::i;:::-;9998:99;:::i;:135::-;4714:14143:21;553:115:58;;4714:14143:21;553:115:58;;10210:14:44;4714:14143:21;10187:54:44;2447:609:45;10210:14:44;;;4714:14143:21;;;;;;;10187:54:44;:::i;:::-;4714:14143:21;;;;;;;;9197:1597:44;;9757:1037;10634:38;10579:171;10634:38;;;10674;10634;10579:182;10634:38;;:::i;10674:::-;10579:171;;:::i;:182::-;4714:14143:21;553:115:58;9197:1597:44;;8755:255;4714:14143:21;;;;8797:91:44;;8755:255;4714:14143:21;;8905:91:44;;8755:255;;;;8905:91;8967:9;;;;29012:10;28935:100;4714:14143:21;;-1:-1:-1;4714:14143:21;29012:10:44;4714:14143:21;;29005:23:44;4714:14143:21;;;;;;;;;;;;;;28935:100:44;8967:9;8905:91;;8797;8859:9;;;;29012:10;28935:100;4714:14143:21;;-1:-1:-1;4714:14143:21;29012:10:44;4714:14143:21;;29005:23:44;4714:14143:21;;;;;;;;;;;;;;28935:100:44;8859:9;8797:91;;4065:67:45;4085:34;4714:14143:21;814:96:34;4714:14143:21;;814:96:34;3970:270:45;8645:20:44;8623;4714:14143:21;;;9600:79;4714:14143;9954:10;4714:14143;;4180:49:45;4714:14143:21;;;4180:49:45;;:::i;:::-;4714:14143:21;;;;;;;;3970:270:45;;23687:800:44;23937:24;;;;-1:-1:-1;4714:14143:21;;;24004:27:44;4714:14143:21;24004:27:44;;4714:14143:21;;24034:27:44;;4714:14143:21;;;24102:27:44;;4714:14143:21;24132:27:44;;4714:14143:21;;;23933:554:44;23687:800;;23933:554;24241:25;4714:14143:21;;24241:25:44;;;4714:14143:21;;24269:27:44;;4714:14143:21;;;;24299:27:44;;4714:14143:21;;;24387:25:44;;;;;;4714:14143:21;24415:27:44;;4714:14143:21;;;24445:27:44;;4714:14143:21;;;23933:554:44;23687:800;;6884:1188;4714:14143:21;25443:10:44;;;4714:14143:21;;;;;;;;;;;;;26390:35:44;4714:14143:21;;;25608:60:44;4714:14143:21;;;;;;25608:60:44;;:::i;:::-;4714:14143:21;25720:25:44;;25690:24;;;;25689:57;;25757:357;;;6884:1188;26344:81;4714:14143:21;;;;;;26390:35:44;:::i;:::-;4714:14143:21;26435:730:44;;;;;4714:14143:21;;;;;;;;;;;;;;;;;;;;;;25608:60:44;4714:14143:21;;;25608:60:44;;:::i;:::-;25720:25;;4714:14143:21;;;;;25690:24:44;25689:57;;25757:357;;;6884:1188;4714:14143:21;;;;;;;;;;;;;;;;;;;26344:81:44;4714:14143:21;26344:81:44;26435:730;4714:14143:21;26435:730:44;4714:14143:21;;;26435:730:44;;;4714:14143:21;;;;;;;;;;;;;7279:19:44;;7275:508;;6884:1188;4714:14143:21;;7801:120:44;;6884:1188;4714:14143:21;;;;7938:120:44;6884:1188;7938:120;8020:18;4714:14143:21;8802:342;;4714:14143;;;7984:15:44;;;;;8020:18;:::i;:::-;6884:1188;;7801:120;7883:18;4714:14143:21;8802:342;;4714:14143;;;7847:15:44;;;;;7883:18;:::i;:::-;7801:120;;7275:508;4714:14143:21;8802:342;;4714:14143;;;;;;;;;;;28155:357:44;4714:14143:21;28155:357:44;1032:7:52;28155:357:44;;;1032:7:52;28155:357:44;;;1317:6:52;28155:357:44;;;;;4714:14143:21;7430:52:44;;;7426:159;;4714:14143:21;;;;;;7610:52:44;7606:159;7275:508;7606:159;1431:143:34;7690:30:44;4714:14143:21;1431:143:34;4714:14143:21;1431:143:34;;4714:14143:21;1431:143:34;7426:159:44;1431:143:34;7510:30:44;4714:14143:21;1431:143:34;4714:14143:21;1431:143:34;;4714:14143:21;1431:143:34;4714:14143:21;;;;;;;;;;25757:357:44;25926:10;;4714:14143:21;;1682:98:63;4714:14143:21;1682:98:63;25918:25:44;;25757:357;25914:190;4714:14143:21;25992:25:44;;;4714:14143:21;;25963:26:44;;4714:14143:21;;26064:25:44;;;4714:14143:21;;26035:26:44;;4714:14143:21;25757:357:44;;;25926:10;;4714:14143:21;;1682:98:63;4714:14143:21;1682:98:63;-1:-1:-1;25918:25:44;25914:190;;25757:357;;;;25914:190;4714:14143:21;25992:25:44;;;4714:14143:21;;25963:26:44;;4714:14143:21;;26064:25:44;;;4714:14143:21;;26035:26:44;;4714:14143:21;25914:190:44;;4450:86;1431:143:34;4485:29:44;4714:14143:21;1431:143:34;4714:14143:21;1431:143:34;;4714:14143:21;1431:143:34;4354:86:44;1431:143:34;4389:29:44;4714:14143:21;1431:143:34;4714:14143:21;1431:143:34;;4714:14143:21;1431:143:34;4259:85:44;2092:251:34;;;4714:14143:21;2092:251:34;;4287:24:44;2092:251:34;;4714:14143:21;2092:251:34;;;;;;;;4714:14143:21;;;;;;;;;;8732:59:38;4714:14143:21;;;;;9898:25:38;;;:74;;;8732:59;9894:409;;;-1:-1:-1;;4714:14143:21;;10002:78:38;4714:14143:21;10002:78:38;;;9988:93;;10002:78;4714:14143:21;10002:78:38;8736:10;;;;;10002:78;;;;:::i;:::-;;;;;;;;;:::i;9988:93::-;;9894:409;8732:59;;;;9894:409;10102:26;:78;;;;9894:409;10098:205;;;9894:409;;;;10098:205;4714:14143:21;;10210:81:38;4714:14143:21;10210:81:38;;;10196:96;;10210:81;4714:14143:21;10210:81:38;8736:10;;;;;10210:81;;;;:::i;10196:96::-;;10098:205;;;10102:78;4714:14143:21;10132:48:38;;16441:29;:34;;10102:78;;;9898:74;9927:45;4714:14143:21;16441:29:38;;:34;;9898:74;;4714:14143:21;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;880:108:16;4714:14143:21;;;;;;880:108:16;4714:14143:21;-1:-1:-1;4714:14143:21;;;;-1:-1:-1;4714:14143:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2355:10:16;;4714:14143:21;;2344:10:16;4714:14143:21;;;;;;;;-1:-1:-1;4714:14143:21;;;;-1:-1:-1;4714:14143:21;;;;;;;;;;;;;;;;;2355:10:16;2403:43;4714:14143:21;2355:10:16;2403:43;;4714:14143:21;;;2464:4:16;4714:14143:21;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;16533:7;552:8:39;4714:14143:21;;16533:7;;4714:14143;;1379:24:39;16532:23:21;;:59;;;4714:14143;16528:142;;4714:14143;16679:24;;;;:::i;:::-;357:173:61;4714:14143:21;;16747:6;4714:14143;;;;;5306:25:44;;;;:::i;:::-;4714:14143:21;;3217:178:63;;;;;;;;;;4714:14143:21;;;16528:142;16607:39;4714:14143;814:96:34;4714:14143:21;;814:96:34;16532:59:21;16581:9;4714:14143;16581:9;;;4714:14143;;16559:10;:32;;16532:59;;4714:14143;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;837:84:41;;6324:60:21;;4714:14143;527:101:41;4714:14143:21;527:101:41;;837:84;527:101;4714:14143:21;;6535:48;;;;;4714:14143;6535:48;;4714:14143;;6535:48;;4714:14143;;;;;;:::i;:::-;6535:48;6551:10;;;6535:48;;;;;;;4714:14143;6535:48;;;4714:14143;622:89:42;;;6594:75:21;;4714:14143;;675:80:41;;837:84;675:80;4714:14143:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6594:75;6629:27;4714:14143;814:96:34;4714:14143:21;;814:96:34;6535:48:21;;;;;4714:14143;6535:48;;;;;;:::i;:::-;;;4714:14143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6535:48;;;;4714:14143;;;;;;;;;6324:60;6347:24;4714:14143;814:96:34;4714:14143:21;;814:96:34;4714:14143:21;;;;;;;;:::i;:::-;2125:10:16;;;;;4714:14143:21;;2115:9:16;4714:14143:21;;;;;;;;-1:-1:-1;4714:14143:21;;;;-1:-1:-1;4714:14143:21;;;;;;;;;;;;;;;;;2125:10:16;2174:41;4714:14143:21;2125:10:16;2174:41;;4714:14143:21;;;2233:4:16;4714:14143:21;;;;;;;;;;;;;:::i;:::-;837:84:41;;6048:18:21;6044:59;;15132:18;4714:14143;15132:18;;:::i;4714:14143::-;;;;;;;;;;;;;;;;656:871:18;;4714:14143:21;656:871:18;4714:14143:21;656:871:18;;;4714:14143:21;656:871:18;;;;;;;;;;4714:14143:21;;;656:871:18;;;;;;;;;;;;;;;;;;;;4714:14143:21;;656:871:18;;;4714:14143:21;;;;;;;;;;;;;;:::i;:::-;756:44:15;4714:14143:21;;;;764:10:15;:19;756:44;:::i;:::-;4714:14143:21;;;1153:34:22;4714:14143:21;;;1153:34:22;4714:14143:21;1202:40:22;4714:14143:21;1202:40:22;;4714:14143:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;837:84:41;;;;;6048:18:21;6044:59;;1169:76:20;;:::i;:::-;4714:14143:21;357:173:61;;4714:14143:21;;;;18647:6;4714:14143;;;;;13569:25;;;;:::i;:::-;13607:9;;;4714:14143;;;;;8736:10:38;;;:27;8732:59;;4714:14143:21;22076:15:44;;4714:14143:21;22076:15:44;;;4714:14143:21;;22105:14:44;;;22101:66;;4714:14143:21;22298:18:44;;;;:::i;:::-;4714:14143:21;;22321:18:44;;;:::i;:::-;4714:14143:21;;;553:115:58;;13607:9:21;553:115:58;;22503:11:44;;22499:143;;4714:14143:21;22659:11:44;22655:143;;4714:14143:21;8736:10:38;;13758::21;8736::38;13758::21;;;:::i;:::-;4714:14143;;;;;;;;;;;13886:44;4714:14143;8736:10:38;13886:44:21;;4714:14143;;;;;8736:10:38;;;:27;8732:59;;4714:14143:21;;;;;;;;;8732:59:38;4714:14143:21;16441:29:38;16169:164;;8732:59;;;;16169:164;16226:96;4714:14143:21;16240:81:38;4714:14143:21;16240:81:38;4714:14143:21;;;16240:81:38;;;;;;;;8736:10;16240:81;;;;:::i;16226:96::-;;16169:164;;;;;;;;22655:143:44;22690:26;;1070:86:54;;13607:9:21;1070:86:54;;4714:14143:21;;258:35:35;4714:14143:21;;22655:143:44;;;;22499;4714:14143:21;22534:26:44;;1070:86:54;;13607:9:21;1070:86:54;;4714:14143:21;;258:35:35;4714:14143:21;;22499:143:44;;22101:66;22121:33;4714:14143:21;814:96:34;4714:14143:21;;814:96:34;8732:59:38;4714:14143:21;16441:29:38;15740:166;;8732:59;;;;15740:166;4714:14143:21;;15812:82:38;4714:14143:21;15812:82:38;;;15798:97;;15812:82;4714:14143:21;15812:82:38;8736:10;;;;;;15812:82;;;;:::i;15798:97::-;;15740:166;;;4714:14143:21;;;;;;;;;;;;;411:99:18;4714:14143:21;411:99:18;4714:14143:21;;411:99:18;4714:14143:21;;;;;;;:::i;:::-;837:84:41;;;6048:18:21;6044:59;;3235:54:16;;4714:14143:21;;;;;16004:17;16024:10;16004:17;;;:::i;:::-;4714:14143;;;;16024:10;;;;:::i;:::-;4714:14143;;;;;;;;;;;;;;;;;;;3186:33:16;4714:14143:21;;;3186:33:16;:::i;4714:14143:21:-;;;;;;;;837:84:41;;6048:18:21;6044:59;;4714:14143;14960:19;14968:10;14960:19;:::i;4714:14143::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;837:84:41;;;6048:18:21;6044:59;;14810:6;14743:17;14763:10;14743:17;;;:::i;:::-;4714:14143;;;;14763:10;;;;:::i;:::-;14810:6;:::i;4714:14143::-;;;;;;;;:::i;:::-;1292:10:16;;;;;4714:14143:21;;;;;;;;;;;;;;;;1282:35:16;4714:14143:21;;;1282:35:16;:::i;:::-;4714:14143:21;;;;;;;;;;;;;;;;;;;;;1328:33:16;4714:14143:21;;;1328:33:16;:::i;:::-;4714:14143:21;;;;;1292:10:16;4714:14143:21;;;;;;;;;;1377:54:16;;4714:14143:21;;;;1377:54:16;4714:14143:21;;;;;;;;;;;;;;;;;;;;;;2762:25:16;4714:14143:21;;2762:25:16;;:100;;;;;4714:14143:21;;;;;;;;;;2762:100:16;4714:14143:21;2837:25:16;;;2762:100;;;4714:14143:21;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4714:14143:21;;;;;;;;;;;:::o;2098:168:47:-;2177:8;2172:13;;;2168:57;;4714:14143:21;;2098:168:47;:::o;2168:57::-;2187:25;814:96:34;;;;;17797:356:21;;;4714:14143;;17892:10;;;17888:23;;1367:30:32;;439:352;547:238;439:352;;547:238;;;;;;;;;439:352;;1367:30;1500:16;1408:76;;1500:16;;;:::i;:::-;1526:71;;;18003:9:21;;1271:180:42;;;;;;;17999:148:21;17797:356::o;17999:148::-;18078:13;18074:73;;17797:356::o;18074:73::-;763:180:42;;;;;;17797:356:21:o;17888:23::-;17904:7;;;:::o;1472:2873:60:-;;;;4714:14143:21;;;;4998:58:60;1769:24;;1809:163;;-1:-1:-1;1809:163:60;;;;;;;2085:8;2081:127;;1765:2574;1472:2873::o;2081:127::-;3741:1424:34;;;;;4714:14143:21;3741:1424:34;;;3710:21;3741:1424;;;;;;;-1:-1:-1;3741:1424:34;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3741:1424:34;;;;2163:29:60;3741:1424:34;;;;;;;;;;;;;;;1765:2574:60;2238:1774;-1:-1:-1;2238:1774:60;;;;;;;4714:14143:21;2238:1774:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4124:8;4120:209;;1765:2574;1472:2873::o;4120:209::-;3741:1424:34;2238:1774:60;3741:1424:34;;;2238:1774:60;3741:1424:34;;3710:21;3741:1424;;2238:1774:60;3741:1424:34;;;2238:1774:60;;3741:1424:34;;;;2238:1774:60;3741:1424:34;;;;;;;;;;;;;;;;-1:-1:-1;3741:1424:34;;;;4268:28:60;3741:1424:34;;;;2238:1774:60;3741:1424:34;;;;;;;;;;16894:825:21;629:81:33;;;16894:825:21;4714:14143;;;17161:24;;17702:9;17208;;17157:494;;17685:15;;;:::i;:::-;17702:9;;:::i;17157:494::-;17252:9;17248:59;;17702:9;1199:81:33;17566:28:21;1199:81:33;;17521:24:21;;;:::i;:::-;17566:28;:::i;:::-;766:73:33;4714:14143:21;629:81:33;766:73;17157:494:21;;17248:59;17267:27;4714:14143;814:96:34;;4714:14143:21;814:96:34;963:137:20;4714:14143:21;1039:8:20;4714:14143:21;1030:4:20;1022:25;1018:75;;963:137::o;1018:75::-;1049:31;814:96:34;;;;;28591:157:44;4714:14143:21;1502:93:63;;28669:30:44;28665:76;;28591:157::o;28665:76::-;28701:27;-1:-1:-1;814:96:34;;-1:-1:-1;814:96:34;1829:6:38;;;;;;4714:14143:21;1829:6:38;;;;4714:14143:21;;;1829:6:38;;;;4714:14143:21;1829:6:38;;;;;;4714:14143:21;5164:25;;1829:6:38;;;;;4714:14143:21;1829:6:38;;;5164:25:21;4714:14143;1829:6:38;;;;4714:14143:21;1829:6:38;;;5164:25:21;1829:6:38;;;;4714:14143:21;;1829:6:38;;;4714:14143:21;1829:6:38;;4714:14143:21;1829:6:38;;5164:25:21;1829:6:38;;;;;4714:14143:21;1829:6:38;;;4714:14143:21;1829:6:38;;;;;;;;:::i;:::-;;:::o;18231:232:21:-;;4714:14143;18417:13;18449:6;18231:232;;18386:6;5164:25;;;;4714:14143;2052:83:58;;;18386:6:21;;:::i;:::-;18417:13;5164:25;4714:14143;2241:89:58;;;18449:6:21;;:::i;1833:122:39:-;4714:14143:21;;1111:7:39;1667:18;;1888:60;;1833:122;:::o;1888:60::-;1909:22;-1:-1:-1;1084:176:34;;;;-1:-1:-1;1084:176:34;1587:6:38;;;;;;;;4714:14143:21;1587:6:38;;4714:14143:21;;;1587:6:38;;;;4714:14143:21;1829:6:38;;;;;;4714:14143:21;5164:25;;1829:6:38;;;;;4714:14143:21;1829:6:38;;;5164:25:21;4714:14143;1829:6:38;;;;4714:14143:21;1829:6:38;;;5164:25:21;1829:6:38;;;;4714:14143:21;;1829:6:38;;;4714:14143:21;1829:6:38;;4714:14143:21;1829:6:38;;5164:25:21;1829:6:38;1587;;;4714:14143:21;;;;1587:6:38;;;4714:14143:21;1587:6:38;;;;4714:14143:21;;1587:6:38;;;4714:14143:21;1587:6:38;;;;;;;4714:14143:21;1587:6:38;;;;;;4714:14143:21;1587:6:38;;;;;;;;;;:::i;1460:151:47:-;;4714:14143:21;;;1558:6:47;;;1554:50;;1460:151::o;1655:6:38:-;;;;;;;;;4714:14143:21;1655:6:38;;;4714:14143:21;;;1655:6:38;;;;4714:14143:21;1829:6:38;;;;;;4714:14143:21;5164:25;;1829:6:38;;;;;4714:14143:21;1829:6:38;;;5164:25:21;4714:14143;1829:6:38;;;;4714:14143:21;1829:6:38;;;5164:25:21;1829:6:38;;;;4714:14143:21;;1829:6:38;;;4714:14143:21;1829:6:38;;4714:14143:21;1829:6:38;;5164:25:21;1829:6:38;1655;1587;;4714:14143:21;;;;1655:6:38;;;4714:14143:21;1587:6:38;;;;4714:14143:21;;1587:6:38;;;4714:14143:21;1587:6:38;;;;;;;4714:14143:21;1587:6:38;;;;;;4714:14143:21;1587:6:38;1655;;;;4714:14143:21;1655:6:38;;;4714:14143:21;1655:6:38;;;;;;;;:::i;10406:1571::-;;;;;;;;4714:14143:21;;;;;10726:10:38;:27;10722:79;;10812:19;4714:14143:21;10845:21:38;;;4714:14143:21;10845:25:38;10841:1130;4714:14143:21;;;;16441:29:38;;10886:518;;10841:1130;;;;;;;;10406:1571::o;10886:518::-;11366:23;4714:14143:21;;;;;11005:311:38;4714:14143:21;;;;11059:151:38;4714:14143:21;11059:151:38;4714:14143:21;10845:21:38;4714:14143:21;11059:151:38;;;;;;;;10726:10;11059:151;;;;:::i;:::-;;;;;;;;;:::i;:::-;4714:14143:21;16441:29:38;;:34;;11005:311;;:::i;:::-;11366:23;;;:::i;:::-;10886:518;;;;;;;;;;10841:1130;11438:47;;;;;;4714:14143:21;16441:29:38;;11434:527;;10841:1130;;;;;;;10406:1571::o;11434:527::-;11923:23;4714:14143:21;;;;;;;11610:154:38;4714:14143:21;11610:154:38;4714:14143:21;;11556:317:38;4714:14143:21;10845:21:38;4714:14143:21;11610:154:38;;;;;;;;10726:10;11610:154;;;;:::i;:::-;4714:14143:21;16441:29:38;;:34;;11556:317;;:::i;10722:79::-;-1:-1:-1;4714:14143:21;;-1:-1:-1;;;;;;10755:46:38:o;5407:1119::-;4714:14143:21;16441:29:38;;:34;;5625:91;;5407:1119;5621:109;;4714:14143:21;16441:29:38;;:34;;5744:89;;5407:1119;5740:107;;4714:14143:21;16441:29:38;;:34;;5861:107;;5407:1119;5857:158;;4714:14143:21;16441:29:38;;:34;;6041:129;;5407:1119;6024:169;;4714:14143:21;;;;;-1:-1:-1;4714:14143:21;;552:8:39;1379:24;6419:19:38;;5407:1119::o;6377:142::-;1247:13;6454:38;:42;;;;:64;;;6377:142;5407:1119;:::o;6454:64::-;552:8:39;4714:14143:21;;;;1379:24:39;5407:1119:38;:::o;6024:169::-;6181:12;;4714:14143:21;6181:12:38;:::o;6041:129::-;6109:61;4714:14143:21;16441:29:38;;:34;;6041:129;;5861:107;5910:58;4714:14143:21;16441:29:38;;:34;;5861:107;;5744:89;5784:49;4714:14143:21;16441:29:38;;:34;;5744:89;;5625:91;5666:50;4714:14143:21;16441:29:38;;:34;;5625:91;;2333:220:39;552:8;4714:14143:21;;;1379:24:39;2467:33;;2510:13;;;:::i;2467:33::-;2492:8;4714:14143:21;2492:8:39;:::o;4351:276:60:-;4714:14143:21;;4998:58:60;4439:24;;4486:21;;4479:28;:::o;4435:186::-;4714:14143:21;4545:65:60;4714:14143:21;;;4545:65:60;;;;4714:14143:21;4545:65:60;;4604:4;4545:65;;;4714:14143:21;4545:65:60;;;;;;;4714:14143:21;4545:65:60;;;4538:72;;:::o;4545:65::-;;;4714:14143:21;4545:65:60;;4714:14143:21;4545:65:60;;;;;;4714:14143:21;4545:65:60;;;:::i;:::-;;;4714:14143:21;;;;;4538:72:60;:::o;4545:65::-;;;-1:-1:-1;4545:65:60;;809:23:59;;;;;;;;;;;;;;;;;;;;;;;;:::o;12064:1980:38:-;12315:22;;;4714:14143:21;;;;;;12064:1980:38;;;12351:10;4714:14143:21;;;12351:27:38;12347:104;;4714:14143:21;16441:29:38;;12462:1576;;12064:1980;;;;;;:::o;12462:1576::-;12540:86;4714:14143:21;809:23:59;12555:70:38;4714:14143:21;809:23:59;4714:14143:21;;;12555:70:38;;;;12315:22;12555:70;;;12351:10;12555:70;;;4714:14143:21;809:23:59;;;;;4714:14143:21;1829:6:38;;;;;;4714:14143:21;5164:25;;1829:6:38;;;;;4714:14143:21;1829:6:38;;;5164:25:21;4714:14143;1829:6:38;;;;4714:14143:21;1829:6:38;;;5164:25:21;1829:6:38;;;;4714:14143:21;;1829:6:38;;;4714:14143:21;1829:6:38;;4714:14143:21;1829:6:38;;5164:25:21;1829:6:38;809:23:59;;;4714:14143:21;;809:23:59;;;4714:14143:21;809:23:59;;;;;;;4714:14143:21;809:23:59;;;4714:14143:21;;809:23:59;;;4714:14143:21;809:23:59;;;;;;;;;;;;:::i;12555:70:38:-;12540:86;;:::i;:::-;4714:14143:21;12761:2:38;4714:14143:21;;12744:19:38;12740:66;;4714:14143:21;13080:7:38;4714:14143:21;;;552:8:39;1379:24;13076:61:38;;12462:1576;4714:14143:21;16441:29:38;13223:805;;12462:1576;;;;;;;13223:805;4714:14143:21;1104:87:43;;;-1:-1:-1;1713:6:38;2052:83:58;;;4714:14143:21;;13682:332:38;;13223:805;13682:332;13789:34;13751:16;4714:14143:21;13751:16:38;;13789:34;;:::i;:::-;13849:48;;;;4714:14143:21;13862:16:38;;13849:48;13845:151;;13682:332;13223:805;;13845:151;13925:35;4714:14143:21;814:96:34;;4714:14143:21;814:96:34;13849:48:38;4714:14143:21;13881:16:38;;13849:48;;13076:61;12761:2;828:82:43;;;;-1:-1:-1;13076:61:38;;12740:66;12765:28;4714:14143:21;814:96:34;;4714:14143:21;814:96:34;12347:104:38;-1:-1:-1;4714:14143:21;;-1:-1:-1;4714:14143:21;;-1:-1:-1;;;;;12380:71:38:o;4714:14143:21:-;;;;;;;;;;;;;;;;;;:::o;14130:1351:38:-;;;;;;;;4714:14143:21;;;14422:10:38;:27;14418:83;;2052::58;;;2241:89;;;14677:35:38;16441:29;4714:14143:21;16441:29:38;;14673:308;;14130:1351;14991:22;;;;;4714:14143:21;;;2241:89:58;4714:14143:21;15027:25:38;;;:52;;;14130:1351;15023:413;;14130:1351;15445:29;;;;14130:1351;:::o;15023:413::-;15404:21;15108:22;;;4714:14143:21;15108:22:38;;;4714:14143:21;15108:26:38;4714:14143:21;;;;15108:47:38;15107:199;;;;553:115:58;;;2052:83;553:115;;15107:199:38;15095:211;15404:21;;:::i;:::-;15023:413;;;;;15107:199;553:115:58;;;;2052:83;553:115;;15107:199:38;;15027:52;4714:14143:21;;2241:89:58;4714:14143:21;15056:23:38;;15027:52;;14673:308;14798:80;14752:218;4714:14143:21;;14752:207:38;4714:14143:21;14728:242:38;4714:14143:21;;;;;;1769:6:38;4714:14143:21;14798:80:38;;;;;;;;14422:10;14798:80;;;4714:14143:21;;;;;;1829:6:38;;;;;;4714:14143:21;5164:25;;1829:6:38;;;;;4714:14143:21;1829:6:38;;;5164:25:21;4714:14143;1829:6:38;;;;4714:14143:21;1829:6:38;;;5164:25:21;1829:6:38;;;;4714:14143:21;;1829:6:38;;;4714:14143:21;1829:6:38;;4714:14143:21;1829:6:38;;5164:25:21;1829:6:38;4714:14143:21;;;;;;;;;;;;;;;;:::i;14798:80:38:-;4714:14143:21;16441:29:38;;:34;;14752:207;;:::i;:218::-;14728:242;;:::i;:::-;14673:308;;;;;;;14418:83;14451:50;;;;;;;;;4714:14143:21;14451:50:38;:::o;6702:1276::-;;;;6823:116;;;-1:-1:-1;6823:116:38;;;;;;;;;;7033:8;7029:102;;7202:504;;;;;;;;;;;;;;;;;;;6823:116;7202:504;;;-1:-1:-1;7202:504:38;;6823:116;4714:14143:21;;7836:18:38;:68;;;;;6702:1276;7832:140;;;;6702:1276::o;7836:68::-;563:85:43;;;4714:14143:21;;;;;;7858:46:38;;;-1:-1:-1;7836:68:38;;;;7029:102;4714:14143:21;;;;;;;;;;;;7029:102:38;3741:1424:34;;4714:14143:21;3741:1424:34;;;;;;4714:14143:21;3741:1424:34;;;3710:21;3741:1424;;4714:14143:21;;3741:1424:34;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3741:1424:34;;;;7107:23:38;3741:1424:34;;;;4714:14143:21;3741:1424:34;;;;;;;;;;4714:14143:21;;;;;;;;;;;;;;;;;2108:1410:51;;;2509:1003;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2108:1410::o;2509:1003::-;;;;;;;;;;;;;;;;;;;;;3149:4018:52;3297:459;;;;;;;;;;1317:6;3774:35;;3770:78;;6424:727;4356:13;;4383:160;;;;;;;4560:13;3297:459;4560:13;;4556:83;;3149:4018;4667:3;4657:13;;4653:83;;3149:4018;4764:3;4754:13;;4750:83;;3149:4018;4861:4;4851:14;;4847:84;;3149:4018;4959:4;4949:14;;4945:84;;3149:4018;5057:4;5047:14;;5043:84;;3149:4018;4383:160;5145:14;;5141:84;;3149:4018;5253:5;5243:15;;5239:85;;3149:4018;5352:5;5342:15;;5338:85;;3149:4018;5451:5;5441:15;;5437:85;;3149:4018;5550:5;5540:15;;5536:85;;3149:4018;5649:6;5639:16;;5635:86;;3149:4018;5749:6;5739:16;;5735:86;;3149:4018;5849:6;5839:16;;5835:86;;3149:4018;5949:6;5939:16;;5935:86;;3149:4018;6049:7;6039:17;;6035:86;;3149:4018;6149:7;6139:17;;6135:85;;3149:4018;6248:7;6238:17;;6234:83;;3149:4018;6345:7;6335:17;6331:78;;3149:4018;-1:-1:-1;;6424:727:52;;3149:4018;6424:727;4959:4;6424:727;3149:4018;:::o;6424:727::-;;;;;6331:78;6376:25;4714:14143:21;;;4383:160:52;4714:14143:21;;6331:78:52;;6234:83;6279:30;4714:14143:21;;;4383:160:52;4714:14143:21;;6234:83:52;;6135:85;4714:14143:21;6180:32:52;4714:14143:21;4383:160:52;4714:14143:21;6135:85:52;;;6035:86;4714:14143:21;6080:33:52;4714:14143:21;4383:160:52;4714:14143:21;6035:86:52;;;5935;4714:14143:21;5979:34:52;4714:14143:21;4383:160:52;4714:14143:21;5935:86:52;;;5835;4714:14143:21;5879:34:52;4714:14143:21;4383:160:52;4714:14143:21;5835:86:52;;;5735;4714:14143:21;5779:34:52;4714:14143:21;4383:160:52;4714:14143:21;5735:86:52;;;5635;4714:14143:21;5679:34:52;4714:14143:21;4383:160:52;4714:14143:21;5635:86:52;;;5536:85;4714:14143:21;5579:34:52;4714:14143:21;4383:160:52;4714:14143:21;5536:85:52;;;5437;4714:14143:21;5480:34:52;4714:14143:21;4383:160:52;4714:14143:21;5437:85:52;;;5338;4714:14143:21;5381:34:52;4714:14143:21;4383:160:52;4714:14143:21;5338:85:52;;;5239;4714:14143:21;5282:34:52;4714:14143:21;4383:160:52;4714:14143:21;5239:85:52;;;5141:84;4714:14143:21;5183:34:52;4714:14143:21;4383:160:52;4714:14143:21;5141:84:52;;;5043;4714:14143:21;5085:34:52;4714:14143:21;4383:160:52;4714:14143:21;5043:84:52;;;4945;4714:14143:21;4987:34:52;4714:14143:21;4383:160:52;4714:14143:21;4945:84:52;;;4847;4714:14143:21;4889:34:52;4714:14143:21;4383:160:52;4714:14143:21;4847:84:52;;;4750:83;4714:14143:21;4791:34:52;4714:14143:21;4383:160:52;4714:14143:21;4750:83:52;;;4653;4714:14143:21;4694:34:52;4714:14143:21;4383:160:52;4714:14143:21;4653:83:52;;;4556;4714:14143:21;4597:34:52;4714:14143:21;4383:160:52;4714:14143:21;4556:83:52;;;3770:78;1431:143:34;3811:20:52;1431:143:34;;;;;;;13649:424:48;;13850:1;4714:14143:21;;;13838:13:48;:218;13850:1;;;13870:73;4714:14143:21;13850:1:48;4714:14143:21;;;13870:73:48;;:::i;:::-;13850:1;1875:5:47;;1871:49;;13649:424:48;:::o;13838:218::-;13974:71;4714:14143:21;;;13974:71:48;;:::i;:::-;13850:1;1875:5:47;;1871:49;;13850:1:48;4714:14143:21;13649:424:48;:::o;12876:::-;;13077:1;4714:14143:21;;;13065:13:48;:218;13077:1;;;13097:73;4714:14143:21;13077:1:48;4714:14143:21;;;13097:73:48;;:::i;13065:218::-;13201:71;4714:14143:21;;;13201:71:48;;:::i;369:370:40:-;;452:281;369:370;452:281;;;;;;;;;;;369:370::o;452:281::-;;;;;;;8118:485:38;;8259:20;8118:485;8259:20;:::i;:::-;8371:12;;8367:26;;8509:2;4714:14143:21;;8492:19:38;8488:66;;8509:2;1104:87:43;;8118:485:38;:::o;1070:396:58:-;1447:15;1070:396;1430:15;1183:220;;;;;;;1430:15;:::i;:::-;1183:220;;;;;;;1447:15;:::i;:::-;553:115;;;1183:220;553:115;;1070:396;:::o;7627:4752:52:-;2282:66;4714:14143:21;1862:10:52;;;4714:14143:21;8182:79:52;8178:168;;4714:14143:21;;8401:2:52;4714:14143:21;;2282:66:52;4714:14143:21;8463:29:52;;;:::i;:::-;4714:14143:21;;8518:3:52;8511:10;;8518:3;;4714:14143:21;;;;;8507:83:52;8660:196;;;;;;4714:14143:21;8660:196:52;;8869;;;8660;8869;;4714:14143:21;8869:196:52;;9078;;;8660;9078;;4714:14143:21;9078:196:52;;9287;;;8660;9287;;4714:14143:21;9287:196:52;;9496;;;8660;9496;;4714:14143:21;9496:196:52;;9705;;;8660;9705;;4714:14143:21;9705:196:52;;9914;;;;8660;9914;;4714:14143:21;9914:196:52;;10123;;;;8660;10123;;4714:14143:21;10123:196:52;;10332;;;;8660;10332;;4714:14143:21;10332:196:52;;10541;;;;8660;10541;;4714:14143:21;10541:196:52;;10750;;;;8660;10750;;4714:14143:21;10750:196:52;;10959;;;;8660;10959;;4714:14143:21;10959:196:52;;11168;;;;;8660;11168;;4714:14143:21;11168:196:52;;11377:165;;;;;;11168:196;;;;;10959;;;;;10750;;;;;10541;;;;;10332;;;;;10123;;;;;9914;;;;;9705;;;;;9496;;;;;9287;;;;;9078;;;;;8869;;;;;8660;;;;;2282:66;;;8643:2;4714:14143:21;8660:196:52;8869;9078;9287;9496;9705;9914;10123;10332;10541;10750;10959;11168;11377:165;11587:24;2282:66;;;;8518:3;2282:66;4714:14143:21;;2282:66:52;12201:39;2282:66;8518:3;2282:66;4714:14143:21;;12271:91:52;:17;;;:91;4714:14143:21;;;12271:91:52;;;7627:4752;:::o;12271:91::-;4714:14143:21;;;12301:26:52;;;:::i;:::-;4714:14143:21;12301:42:52;:61;;;7627:4752;:::o;12301:61::-;;;1829:6:38;:::o;8507:83:52:-;4714:14143:21;;;8580:3:52;4714:14143:21;;8507:83:52;;8178:168;4714:14143:21;1084:176:34;8281:25:52;1084:176:34;;;;;;;;633:9:46;;;;;;;:::o;:::-;;;;;;;;;;12231:9620:44;4714:14143:21;;;12231:9620:44;;4714:14143:21;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12391:24:44;4714:14143:21;;;12488:17:44;4714:14143:21;12488:17:44;;4714:14143:21;;12550:102:44;4714:14143:21;;12550:102:44;4714:14143:21;;;750:5:46;1882:117:63;;;743:12:46;12550:102:44;;4714:14143:21;;12929:27:44;4714:14143:21;1502:93:63;;;;4714:14143:21;;;;1682:98:63;;;;;4714:14143:21;;;13221:14:44;;;4714:14143:21;;;;13451:20:44;;;4714:14143:21;819:8:39;2836:24;;:29;;13451:141:44;819:8:39;;;975;3147:27;3572:12;;;:::i;:::-;4714:14143:21;;;;;13617:70:44;13607:80;4714:14143:21;563:3:50;4714:14143:21;;;13847:32:44;;13843:200;;13617:70;4714:14143:21;;14251:27:44;14247:92;;-1:-1:-1;;4714:14143:21;;;;14384:24:44;;4714:14143:21;1502:93:63;4714:14143:21;;;14384:53:44;;;;14380:190;;-1:-1:-1;;4714:14143:21;1502:93:63;4714:14143:21;1862:10:52;14818:51:44;;;14814:157;;14350:1021;;4714:14143:21;;;2042:49:52;4714:14143:21;;;;;;;;;;;;;;2042:49:52;;4714:14143:21;;2042:49:52;;;4714:14143:21;;2042:49:52;;;4714:14143:21;;2042:49:52;;;4714:14143:21;13451:20:44;2042:49:52;;;4714:14143:21;1682:98:63;2042:49:52;;;4714:14143:21;2042:49:52;;;;4714:14143:21;;15446:66:44;4714:14143:21;;;15459:25:44;;;4714:14143:21;15446:66:44;;;;;2042:49:52;;;4714:14143:21;15639:5244:44;15648:29;;:80;;;;15639:5244;15646:83;;4714:14143:21;;;;;1502:93:63;4714:14143:21;;;;;;15905:11:44;;4714:14143:21;1682:98:63;4714:14143:21;;15918:18:44;;4714:14143:21;1682:98:63;4714:14143:21;15856:93:44;846:396:51;4714:14143:21;846:396:51;;;;;;;4714:14143:21;;4565:1682:51;4714:14143:21;;;;1676:170:51;1032:7:52;4714:14143:21;1676:170:51;1328:919:50;1676:170:51;;15856:15:44;1676:170:51;4714:14143:21;1676:170:51;;4839:13;1676:170;1682:98:63;1676:170:51;;;4714:14143:21;;-1:-1:-1;4714:14143:21;15856:15:44;4714:14143:21;;;-1:-1:-1;4714:14143:21;4748:17:51;4714:14143:21;1676:170:51;4714:14143:21;;;;4839:20:51;5014:11;;;;5164:194;;;;;;5234:34;;1676:170;5234:34;;:::i;:::-;4714:14143:21;;;1682:98:63;4714:14143:21;633:9:46;;1682:98:63;4714:14143:21;;1682:98:63;4714:14143:21;5164:194:51;4565:1682;;4714:14143:21;;2042:49:52;;;4714:14143:21;1682:98:63;4714:14143:21;2042:49:52;4714:14143:21;2042:49:52;;4714:14143:21;16081:34:44;;16077:106;;4565:1682:51;1317:6:52;4714:14143:21;2042:49:52;;4714:14143:21;1682:98:63;4714:14143:21;16200:34:44;;16196:106;;4565:1682:51;1502:93:63;16387:42:44;4714:14143:21;2042:49:52;;4714:14143:21;1682:98:63;4714:14143:21;16387:42:44;:::i;:::-;4714:14143:21;2042:49:52;;;;4714:14143:21;1502:93:63;4714:14143:21;;;16776:24:44;1502:93:63;4714:14143:21;16776:24:44;;4714:14143:21;;;;;;1328:919:50;;;;;;;;;16819:16:44;;4714:14143:21;;16634:282:44;4714:14143:21;1502:93:63;4714:14143:21;;3923:41:50;;;3993:19;4714:14143:21;3993:19:50;;4027:2922;4714:14143:21;;;;;;563:3:50;4714:14143:21;4111:81:50;4714:14143:21;;;;4111:81:50;:::i;:::-;4221:230;;;;;4254:87;;;;;:::i;:::-;4221:230;;4473:34;;;;;4595:37;;1682:98:63;4595:37:50;;;1502:93:63;4595:37:50;4666:256;;;563:3;4714:14143:21;;;4666:24:50;:256;563:3;;;4666:256;;;;4469:969;;5467:228;;;5500:86;;;;:::i;:::-;4027:2922;;2042:49:52;;;4714:14143:21;2042:49:52;4714:14143:21;13451:20:44;2042:49:52;;4714:14143:21;;;;;;;16965:26:44;16961:568;4714:14143:21;;;1682:98:63;2042:49:52;;;1875:5:47;4714:14143:21;1875:5:47;;1871:49;;4714:14143:21;2042:49:52;17153:30:44;13451:20;2042:49:52;;;;;;;17153:30:44;;:::i;:::-;4714:14143:21;1875:5:47;;1871:49;;2042::52;;;;;1328:919:50;2042:49:52;;;16961:568:44;;4714:14143:21;;;17660:951:44;;16961:568;4714:14143:21;;16819:16:44;;4714:14143:21;;18670:20:44;18666:382;;16961:568;4714:14143:21;1502:93:63;4714:14143:21;;;1502:93:63;4714:14143:21;2042:49:52;;4714:14143:21;;19488:44:44;;19484:1389;1502:93:63;;;2042:49:52;4714:14143:21;2042:49:52;;4714:14143:21;19623:835:44;;19484:1389;4714:14143:21;;;633:9:46;4714:14143:21;2042:49:52;;4714:14143:21;1682:98:63;4714:14143:21;633:9:46;1682:98:63;4714:14143:21;20522:46:44;1682:98:63;4714:14143:21;;15905:11:44;;4714:14143:21;19484:1389:44;15639:5244;;;;20522:46;4714:14143:21;2042:49:52;;4714:14143:21;1682:98:63;4714:14143:21;20522:46:44;;19623:835;4714:14143:21;;;;20385:54:44;2042:49:52;;;29769:10:44;2042:49:52;;;;19794:25:44;4714:14143:21;1682:98:63;19794:25:44;;4714:14143:21;19730:170:44;;2042:49:52;4714:14143:21;1682:98:63;4714:14143:21;;;-1:-1:-1;4714:14143:21;29769:10:44;4714:14143:21;;;-1:-1:-1;4714:14143:21;29851:26:44;1328:919:50;29851:26:44;;4714:14143:21;;;;;;;1682:98:63;29943:26:44;;4714:14143:21;;;;;;;;13451:20:44;4714:14143:21;;;;20277:44:44;;19730:170;4714:14143:21;16819:16:44;4714:14143:21;;;20385:54:44;:::i;:::-;4714:14143:21;;16819:16:44;;4714:14143:21;19623:835:44;;20277:44;4714:14143:21;;;;;;;;20277:44:44;;19730:170;4714:14143:21;20385:54:44;19848:25;;;29769:10;1328:919:50;19848:25:44;;4714:14143:21;2042:49:52;4714:14143:21;2042:49:52;;;;19730:170:44;;;19484:1389;1502:93:63;4714:14143:21;;;20611:45:44;;20607:266;;19484:1389;;;;20607:266;20810:48;;;:::i;:::-;1682:98:63;4714:14143:21;;15905:11:44;;4714:14143:21;20607:266:44;;;18666:382;2042:49:52;;;;13451:20:44;1070:86:54;;2042:49:52;;;;258:35:35;2042:49:52;;;4714:14143:21;18666:382:44;;;17660:951;18159:242;4714:14143:21;;;;;;18160:22:44;4714:14143:21;;2042:49:52;;;;18159:242:44;;2042:49:52;;;;;4714:14143:21;2042:49:52;;;4714:14143:21;258:35:35;17660:951:44;;;18159:242;563:3:50;13451:20:44;2042:49:52;;;4714:14143:21;;;2042:49:52;;;;;258:35:35;4714:14143:21;633:9:46;18159:242:44;;;16961:568;13451:20;2042:49:52;;;;;;;258:35:35;1875:5:47;4714:14143:21;1875:5:47;;1871:49;;258:35:35;2042:49:52;1682:98:63;2042:49:52;;;4714:14143:21;1875:5:47;;1871:49;;17469:45:44;;;:::i;:::-;16961:568;;;5467:228:50;5609:86;;;:::i;:::-;5467:228;;4666:256;4714:14143:21;4852:70:50;4714:14143:21;;4852:70:50;;:::i;:::-;4666:256;;4469:969;5021:33;;;;;;;;6731:358:48;;;;;;;;7172:190;1682:98:63;7172:190:48;1502:93:63;7172:190:48;;;;;;7197:74;;;;;:::i;:::-;4714:14143:21;;;;;;4469:969:50;;;7172:190:48;4834:27;;;4714:14143:21;;5042:42:48;5043:28;4884:47;4714:14143:21;;;;295:2:36;4714:14143:21;4884:47:48;:::i;:::-;4714:14143:21;;;5043:28:48;:::i;:::-;5042:42;:::i;:::-;7172:190;;4834:172;5042:42;5043:28;4954:52;4714:14143:21;;;4954:52:48;;:::i;:::-;4834:172;;6731:358;;4714:14143:21;6731:358:48;;;;4221:230:50;4364:87;;;;;:::i;:::-;4221:230;;;4027:2922;5746:232;;-1:-1:-1;5746:232:50;;;;;;5779:88;;;;;:::i;:::-;5746:232;;6000:37;;;;;6126;1502:93:63;6126:37:50;1682:98:63;6126:37:50;5996:516;;;6540:226;;;6573:85;;;;:::i;:::-;6540:226;;6864:70;4714:14143:21;;;563:3:50;4714:14143:21;;;;6529:237:50;6864:70;:::i;:::-;4027:2922;;6540:226;6681:85;;;:::i;:::-;6540:226;;;5996:516;6297:36;;;;;8211:358:48;;;;;;;8646:194;;;;;-1:-1:-1;4714:14143:21;5152:27:48;;4714:14143:21;;;295:2:36;4714:14143:21;;;;558:86:54;;;;;;;;5152:205:48;4714:14143:21;5468:277:48;;;;;;;;;4714:14143:21;;;;1682:98:63;4714:14143:21;;;;;8646:194:48;5996:516:50;;;;5468:277:48;;4714:14143:21;5468:277:48;;;;5152:205;4714:14143:21;;;5315:25:37;;335:27:36;5315:25:37;;:::i;:::-;5358;;;;;335:27:36;5358:25:37;;5354:90;5152:205:48;5354:90:37;4714:14143:21;;5416:12:37;5152:205:48;4714:14143:21;;;;8646:194:48;8764:76;;;;;1502:93:63;8764:76:48;1682:98:63;8764:76:48;;:::i;:::-;8646:194;;5746:232:50;5890:88;;;;;:::i;:::-;5746:232;;;16196:106:44;1317:6:52;4714:14143:21;2042:49:52;;4714:14143:21;16196:106:44;;16077;1032:7:52;4714:14143:21;2042:49:52;;4714:14143:21;16077:106:44;;5164:194:51;4714:14143:21;1682:98:63;4714:14143:21;633:9:46;;1682:98:63;4714:14143:21;;1682:98:63;4714:14143:21;5164:194:51;;4565:1682;1328:919:50;4714:14143:21;;;;;15856:15:44;4714:14143:21;;;;5702:13:51;4714:14143:21;1682:98:63;4714:14143:21;1676:170:51;;4714:14143:21;;;;15856:15:44;4714:14143:21;;;;;;1328:919:50;1676:170:51;4714:14143:21;;;;5647:20:51;4714:14143:21;;5702:20:51;5869:11;;;;;;;;6019:213;;;;;;4714:14143:21;;;;;;1766:834:31;;1328:919:50;1766:834:31;;;;1032:7:52;4714:14143:21;1766:834:31;;;;4714:14143:21;1766:834:31;1676:170:51;1766:834:31;4714:14143:21;1766:834:31;4714:14143:21;1766:834:31;;;;;;;;;;;;;;;;4714:14143:21;1676:170:51;;;1766:834:31;;;;;;;;4714:14143:21;;1682:98:63;4714:14143:21;;1682:98:63;4714:14143:21;;1682:98:63;4714:14143:21;;1682:98:63;4714:14143:21;6019:213:51;4565:1682;;;6019:213;1676:170;;4714:14143:21;1676:170:51;;4714:14143:21;1676:170:51;;1328:919:50;1676:170:51;;1032:7:52;1676:170:51;;;4714:14143:21;1676:170:51;;;;4714:14143:21;;;1682:98:63;4714:14143:21;;1682:98:63;4714:14143:21;;1682:98:63;4714:14143:21;;1682:98:63;4714:14143:21;6019:213:51;;15646:83:44;;;;;;;;;;;;;4714:14143:21;20925:11:44;;4714:14143:21;1682:98:63;2578:157;;;2342:131;1502:93;4714:14143:21;;;2342:131:63;;;;4714:14143:21;;;13221:14:44;;;4714:14143:21;;;;21049:16:44;;4714:14143:21;;21031:34:44;;;21027:73;;15639:5244;-1:-1:-1;4714:14143:21;;;;2042:49:52;1682:98:63;2042:49:52;;;21178:25:44;;4714:14143:21;21147:177:44;4714:14143:21;;;;;21420:26:44;;21405:42;4714:14143:21;;21515:27:44;;21544:62;21515:27;;;:::i;:::-;4714:14143:21;;;21544:62:44;:::i;:::-;4714:14143:21;553:115:58;;13451:20:44;553:115:58;;21401:434:44;12231:9620::o;21401:434::-;21775:27;4714:14143:21;;;21711:62:44;4714:14143:21;;21711:62:44;:::i;:::-;21775:27;;:::i;21147:177::-;2042:49:52;1328:919:50;2042:49:52;;;21261:25:44;;4714:14143:21;21147:177:44;;21027:73;4714:14143:21;;;13221:14:44;;;4714:14143:21;;;13221:14:44;;;4714:14143:21;21027:73:44;;;15648:80;4714:14143:21;1502:93:63;4714:14143:21;;;1502:93:63;4714:14143:21;15704:24:44;;4714:14143:21;;15681:47:44;15648:80;;15446:66;1682:98:63;15487:25:44;;4714:14143:21;15446:66:44;;;;;;14814:157;14889:30;4714:14143:21;1084:176:34;;;;4714:14143:21;1084:176:34;14380:190:44;3008:319:34;;;4714:14143:21;3008:319:34;;14457:34:44;3008:319:34;;;;;;;;;;;14350:1021:44;4714:14143:21;15005:24:44;;4714:14143:21;1502:93:63;4714:14143:21;;;15005:53:44;;;;15001:190;;-1:-1:-1;;4714:14143:21;1502:93:63;4714:14143:21;2042:49:52;15208:51:44;;;15204:157;;14350:1021;;;14247:92;14280:59;;;;;;;;;;;;;;4714:14143:21;14280:59:44;4714:14143:21;14280:59:44;;;:::o;13843:200::-;4714:14143:21;;;13929:26:44;13925:108;13843:200;13925:108;13975:30;4714:14143:21;814:96:34;;4714:14143:21;814:96:34;13617:70:44;4714:14143:21;1864:240:46;;;;;;;;;;;;;13617:70:44;;13451:141;2089:105:63;;;;4714:14143:21;2089:105:63;13451:141:44;;12550:102;4714:14143:21;;;;;12550:102:44;;;741:4141:37;;4714:14143:21;;;1347:147:37;;;;;;;;;;;;;;;;1619:19;;258:35:35;1619:19:37;4714:14143:21;;;1720:10:37;1716:177;;258:35:35;2224:95:37;;2391:145;;;;;;2977:82;4714:14143:21;2391:145:37;;2977:82;;3363:21;741:4141;:::o;1716:177::-;1750:98;;;;;1865:13;:::o;741:4141::-;4714:14143:21;;;1347:147:37;;;;;;;;;;;;;;;;1619:19;;563:3:50;1619:19:37;4714:14143:21;;;1720:10:37;1716:177;;4714:14143:21;2224:95:37;563:3:50;2224:95:37;;2391:145;;;;;;4714:14143:21;;2391:145:37;;2977:82;;3363:21;4714:14143:21;741:4141:37;:::o;1716:177::-;1750:98;;563:3:50;1750:98:37;;;1865:13;:::o;741:4141::-;;4714:14143:21;;;1347:147:37;;;;;;;;;;;;;;;;1619:19;;335:27:36;1619:19:37;4714:14143:21;;;1720:10:37;1716:177;;335:27:36;2224:95:37;;2391:145;;;;;;4714:14143:21;;2391:145:37;;2977:82;;3363:21;741:4141;:::o;1716:177::-;1750:98;;;;;1865:13;:::o;741:4141::-;;4714:14143:21;;;1347:147:37;;335:27:36;1347:147:37;;;;;;;;;;;;;1619:19;;;;4714:14143:21;;;1720:10:37;1716:177;;335:27:36;2224:95:37;;;4714:14143:21;;;;2716:31:37;2811:94;;;3776:1;4714:14143:21;3757:1:37;4714:14143:21;3756:21:37;4714:14143:21;;;3776:1:37;4714:14143:21;;;;;3776:1:37;4714:14143:21;;;;;3776:1:37;4714:14143:21;;;;;3776:1:37;4714:14143:21;;;;;3776:1:37;4714:14143:21;;;;;3776:1:37;4714:14143:21;;3254:96:37;;;;4714:14143:21;3254:96:37;;;2391:145;;;;;;4714:14143:21;2391:145:37;;2977:82;3363:21;4714:14143:21;741:4141:37;:::o;1716:177::-;1750:98;;;;1865:13;:::o;741:4141::-;;4714:14143:21;;;1347:147:37;;;;;;;;;;;;;;;;1619:19;;;;4714:14143:21;;;1720:10:37;1716:177;;2224:95;;;;4714:14143:21;;;;2716:31:37;2811:94;;;3776:1;4714:14143:21;3757:1:37;4714:14143:21;3756:21:37;4714:14143:21;;;3776:1:37;4714:14143:21;;;;;3776:1:37;4714:14143:21;;;;;3776:1:37;4714:14143:21;;;;;3776:1:37;4714:14143:21;;;;;3776:1:37;4714:14143:21;;;;;3776:1:37;4714:14143:21;;3254:96:37;;;;4714:14143:21;3254:96:37;;;2391:145;;;;;;4714:14143:21;2391:145:37;;2977:82;3363:21;4714:14143:21;741:4141:37;:::o;1716:177::-;1750:98;;;;;1865:13;:::o;11589:938:48:-;4714:14143:21;335:27:36;11589:938:48;10595:530;11589:938;14040:4;11589:938;10595:530;;;;;;;;;;;4714:14143:21;;12323:51:48;;;;;:::i;:::-;12384:137;;;;;;11589:938;:::o;:::-;4714:14143:21;11589:938:48;10595:530;11589:938;12323:51;11589:938;;10595:530;;;;;;;;;;;4714:14143:21;;12323:51:48;:::i;9398:1050::-;;4714:14143:21;;;;;;9600:29:48;9596:98;;9398:1050;4714:14143:21;9783:262:48;;;;;;;4714:14143:21;;10262:64:48;10211:220;4714:14143:21;;;1862:10:52;;4714:14143:21;;295:2:36;4714:14143:21;;10262:64:48;:::i;:::-;558:86:54;;;;;;;;;9398:1050:48;:::o;9783:262::-;;;;;;;9596:98;;;;9398:1050;4714:14143:21;;;;;;9600:29:48;9596:98;;9398:1050;4714:14143:21;9783:262:48;;;;;;;10361:70;10211:220;4714:14143:21;;10361:54:48;10211:220;4714:14143:21;;;1862:10:52;;4714:14143:21;;295:2:36;4714:14143:21;;10361:54:48;:::i;:::-;:70;:::i;9596:98::-;9631:63;9596:98;;653:664:31;742:5;;4714:14143:21;;759:552:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:664;:::o;5164:296:37:-;;;;5315:25;;;;;:::i;:::-;5358;;;;;;5354:90;;5164:296::o;5354:90::-;4714:14143:21;;;5416:12:37;;;4714:14143:21;;5164:296:37:o;1535:2065:48:-;;;1831:11;;1827:32;;4714:14143:21;;;295:2:36;4714:14143:21;;1946:1648:48;4714:14143:21;;;;;2951:462:48;;;;;;;;;;;;;3497:72;4714:14143:21;3497:60:48;4714:14143:21;;;3497:60:48;;:::i;2951:462::-;;1946:1648;2951:462;;;;1827:32;1844:15;;;:::o;1535:2065::-;;;1831:11;;1827:32;;4714:14143:21;;;;295:2:36;4714:14143:21;;;;;;;2054:16:48;;;;;:::i;:::-;:28;2050:345;;1535:2065;2526:21;;;2525:32;2526:21;;;:::i;:::-;2525:32;:::i;:::-;558:86:54;;;;;;;;4714:14143:21;1535:2065:48;:::o;2050:345::-;258:35:35;;2174:25:48;;;2050:345;2170:207;2293:60;;;;;:::i;:::-;4714:14143:21;2278:76:48;:::o;1827:32::-;1844:15;;;;:::o;460:155:47:-;;4714:14143:21;;;562:6:47;;;558:50;;460:155::o",
    "linkReferences": {},
    "immutableReferences": {
      "35993": [
        {
          "start": 13861,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowance(address,address,uint256)": "598af9e7",
    "approve(address,uint256,uint256)": "426a8493",
    "balanceOf(address,uint256)": "00fdd58e",
    "burn(address,uint256,uint256)": "f5298aca",
    "clear(address,uint256)": "80f0b44c",
    "collectProtocolFees(address,address,uint256)": "8161b874",
    "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": "234266d7",
    "extsload(bytes32)": "1e2eaeaf",
    "extsload(bytes32,uint256)": "35fd631a",
    "extsload(bytes32[])": "dbd035ff",
    "exttload(bytes32)": "f135baaa",
    "exttload(bytes32[])": "9bf6645f",
    "initialize((address,address,uint24,int24,address),uint160)": "6276cbbe",
    "isOperator(address,address)": "b6363cf2",
    "mint(address,uint256,uint256)": "156e29f6",
    "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "5a6bcfda",
    "owner()": "8da5cb5b",
    "protocolFeeController()": "f02de3b2",
    "protocolFeesAccrued(address)": "97e8cd4e",
    "setOperator(address,bool)": "558a7297",
    "setProtocolFee((address,address,uint24,int24,address),uint24)": "7e87ce7d",
    "setProtocolFeeController(address)": "2d771389",
    "settle()": "11da60b4",
    "settleFor(address)": "3dd45adb",
    "supportsInterface(bytes4)": "01ffc9a7",
    "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "f3cd914c",
    "sync(address)": "a5841194",
    "take(address,address,uint256)": "0b0d9c09",
    "transfer(address,uint256,uint256)": "095bcdb6",
    "transferFrom(address,address,uint256,uint256)": "fe99049a",
    "transferOwnership(address)": "f2fde38b",
    "unlock(bytes)": "48c89491",
    "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": "52759651"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyUnlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency1\",\"type\":\"address\"}],\"name\":\"CurrenciesOutOfOrderOrEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCallNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ManagerLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustClearExactPositiveDelta\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonzeroNativeValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCurrencySynced\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAmountCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedDynamicLPFeeUpdate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ModifyLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currency0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currency1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nativeGlobalBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"PoolReserves\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"protocolFee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"startSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nSlots\",\"type\":\"uint256\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"modifyLiquidity\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"callerDelta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newProtocolFee\",\"type\":\"uint24\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"settleFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"swapDelta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newDynamicLPFee\",\"type\":\"uint24\"}],\"name\":\"updateDynamicLPFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount donated in currency0\",\"amount1\":\"The amount donated in currency1\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was donated to\",\"sender\":\"The address that initiated the donate call\"}},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"params\":{\"currency0\":\"The first currency of the pool by address sort order\",\"currency1\":\"The second currency of the pool by address sort order\",\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"hooks\":\"The hooks contract address for the pool, or address(0) if none\",\"id\":\"The abi encoded hash of the pool key struct for the new pool\",\"sqrtPriceX96\":\"The price of the pool on initialization\",\"tick\":\"The initial tick of the pool corresponding to the initialized price\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\"}},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"params\":{\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidityDelta\":\"The amount of liquidity that was added or removed\",\"salt\":\"The extra data to make positions unique\",\"sender\":\"The address that modified the pool\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"params\":{\"amount0\":\"The delta of the currency0 balance of the pool\",\"amount1\":\"The delta of the currency1 balance of the pool\",\"fee\":\"The swap fee in hundredths of a bip\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidity\":\"The liquidity of the pool after the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of the price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"burn(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to burn\",\"from\":\"The address to burn the tokens from\",\"id\":\"The currency address to burn from ERC6909s, as a uint256\"}},\"clear(address,uint256)\":{\"details\":\"This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared.\"},\"collectProtocolFees(address,address,uint256)\":{\"details\":\"This will revert if the contract is unlocked\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw\",\"recipient\":\"The address to receive the protocol fees\"},\"returns\":{\"amountCollected\":\"The amount of currency successfully withdrawn\"}},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"details\":\"Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.\",\"params\":{\"amount0\":\"The amount of currency0 to donate\",\"amount1\":\"The amount of currency1 to donate\",\"hookData\":\"The data to pass through to the donate hooks\",\"key\":\"The key of the pool to donate to\"},\"returns\":{\"delta\":\"BalanceDelta The delta of the caller after the donate\"}},\"extsload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to sload\"},\"returns\":{\"_0\":\"The value of the slot as bytes32\"}},\"extsload(bytes32,uint256)\":{\"params\":{\"nSlots\":\"Number of slots to load into return value\",\"startSlot\":\"Key of slot to start sloading from\"},\"returns\":{\"_0\":\"List of loaded values.\"}},\"extsload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to SLOAD from.\"},\"returns\":{\"_0\":\"List of loaded values.\"}},\"exttload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to tload\"},\"returns\":{\"_0\":\"The value of the slot as bytes32\"}},\"exttload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to tload\"},\"returns\":{\"_0\":\"List of loaded values\"}},\"initialize((address,address,uint24,int24,address),uint160)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The pool key for the pool to initialize\",\"sqrtPriceX96\":\"The initial square root price\"},\"returns\":{\"tick\":\"The initial tick of the pool\"}},\"mint(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to mint\",\"id\":\"The currency address to mint to ERC6909s, as a uint256\",\"to\":\"The address to mint the tokens to\"}},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"details\":\"Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme\",\"params\":{\"hookData\":\"The data to pass through to the add/removeLiquidity hooks\",\"key\":\"The pool to modify liquidity in\",\"params\":\"The parameters for modifying the liquidity\"},\"returns\":{\"callerDelta\":\"The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\",\"feesAccrued\":\"The balance delta of the fees generated in the liquidity range. Returned for informational purposes\"}},\"setOperator(address,bool)\":{\"params\":{\"approved\":\"The approval status.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"params\":{\"key\":\"The key of the pool to set a protocol fee for\",\"newProtocolFee\":\"The fee to set\"}},\"setProtocolFeeController(address)\":{\"params\":{\"controller\":\"The new protocol fee controller\"}},\"settle()\":{\"returns\":{\"_0\":\"The amount of currency settled\"}},\"settleFor(address)\":{\"params\":{\"recipient\":\"The address to credit for the payment\"},\"returns\":{\"_0\":\"The amount of currency settled\"}},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"details\":\"Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.\",\"params\":{\"hookData\":\"The data to pass through to the swap hooks\",\"key\":\"The pool to swap in\",\"params\":\"The parameters for swapping\"},\"returns\":{\"swapDelta\":\"The balance delta of the address swapping\"}},\"sync(address)\":{\"details\":\"This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency\"},\"take(address,address,uint256)\":{\"details\":\"Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw from the pool manager\",\"to\":\"The address to withdraw to\"}},\"transfer(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"transferFrom(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"unlock(bytes)\":{\"details\":\"The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\",\"params\":{\"data\":\"Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\"},\"returns\":{\"result\":\"The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`\"}},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The key of the pool to update dynamic LP fees for\",\"newDynamicLPFee\":\"The new dynamic pool LP fee\"}}},\"title\":\"PoolManager\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyUnlocked()\":[{\"notice\":\"Thrown when unlock is called, but the contract is already unlocked\"}],\"CurrenciesOutOfOrderOrEqual(address,address)\":[{\"notice\":\"PoolKey must have currencies where address(currency0) < address(currency1)\"}],\"CurrencyNotSettled()\":[{\"notice\":\"Thrown when a currency is not netted out after the contract is unlocked\"}],\"InvalidCaller()\":[{\"notice\":\"Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\"}],\"ManagerLocked()\":[{\"notice\":\"Thrown when a function is called that requires the contract to be unlocked, but it is not\"}],\"MustClearExactPositiveDelta()\":[{\"notice\":\"Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta.\"}],\"NonzeroNativeValue()\":[{\"notice\":\"Thrown when native currency is passed to a non native settlement\"}],\"PoolNotInitialized()\":[{\"notice\":\"Thrown when trying to interact with a non-initialized pool\"}],\"ProtocolFeeCurrencySynced()\":[{\"notice\":\"Thrown when collectProtocolFees is attempted on a token that is synced.\"}],\"ProtocolFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when protocol fee is set too high\"}],\"SwapAmountCannotBeZero()\":[{\"notice\":\"Thrown when trying to swap amount of 0\"}],\"TickSpacingTooLarge(int24)\":[{\"notice\":\"Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\"}],\"TickSpacingTooSmall(int24)\":[{\"notice\":\"Pools must have a positive non-zero tickSpacing passed to #initialize\"}],\"UnauthorizedDynamicLPFeeUpdate()\":[{\"notice\":\"Thrown when a call to updateDynamicLPFee is made by an address that is not the hook, or on a pool that does not have a dynamic swap fee.\"}]},\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"notice\":\"Emitted for donations\"},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"notice\":\"Emitted when a new pool is initialized\"},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"notice\":\"Emitted when a liquidity position is modified\"},\"PoolReserves(bytes32,address,address,uint256,uint256,uint256,uint160,uint128,int24)\":{\"notice\":\"\\u65b0\\u589e: \\u4ea4\\u6362\\u5b8c\\u6210\\u540e\\u5e7f\\u64ad\\u6c60\\u5185\\u5f53\\u524d\\u4e24\\u79cd\\u5e01\\u7684\\u4f59\\u989d(\\u5168\\u5c40\\u6301\\u6709\\u89c6\\u89d2)\\u4e0e\\u4ef7\\u683c\\u72b6\\u6001 reserve0 / reserve1 \\u4e3a\\u8be5\\u6b21 swap \\u6d89\\u53ca\\u6c60\\u7684\\u4e24\\u79cd\\u5e01\\u5728 PoolManager \\u5408\\u7ea6\\u5730\\u5740\\u4e0a\\u7684\\u5f53\\u524d\\u4f59\\u989d(\\u539f\\u751f\\u5e01\\u7528 address(this).balance \\u8fd1\\u4f3c) nativeGlobalBalance \\u4e3a PoolManager \\u5f53\\u524d\\u6301\\u6709\\u7684\\u5168\\u90e8\\u539f\\u751f\\u5e01\\u5168\\u5c40\\u4f59\\u989d\\uff08\\u4e0e\\u5177\\u4f53\\u6c60\\u65e0\\u5173\\uff0c\\u7528\\u4e8e mindshare \\u7edf\\u8ba1\\uff09\"},\"ProtocolFeeControllerUpdated(address)\":{\"notice\":\"Emitted when the protocol fee controller address is updated in setProtocolFeeController.\"},\"ProtocolFeeUpdated(bytes32,uint24)\":{\"notice\":\"Emitted when the protocol fee is updated for a pool.\"},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"notice\":\"Emitted for swaps between currency0 and currency1\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,uint256)\":{\"notice\":\"Spender allowance of an id.\"},\"approve(address,uint256,uint256)\":{\"notice\":\"Approves an amount of an id to a spender.\"},\"balanceOf(address,uint256)\":{\"notice\":\"Owner balance of an id.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value from ERC6909 balance\"},\"clear(address,uint256)\":{\"notice\":\"WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\"},\"collectProtocolFees(address,address,uint256)\":{\"notice\":\"Collects the protocol fees for a given recipient and currency, returning the amount collected\"},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"Donate the given currency amounts to the in-range liquidity providers of a pool\"},\"extsload(bytes32)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32,uint256)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse pool state\"},\"exttload(bytes32)\":{\"notice\":\"Called by external contracts to access transient storage of the contract\"},\"exttload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse transient pool state\"},\"initialize((address,address,uint24,int24,address),uint160)\":{\"notice\":\"Initialize the state for a given pool ID\"},\"isOperator(address,address)\":{\"notice\":\"Checks if a spender is approved by an owner as an operator\"},\"mint(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value into ERC6909 balance\"},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"Modify the liquidity for the given pool\"},\"protocolFeeController()\":{\"notice\":\"Returns the current protocol fee controller address\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"setOperator(address,bool)\":{\"notice\":\"Sets or removes an operator for the caller.\"},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Sets the protocol fee for the given pool\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets the protocol fee controller\"},\"settle()\":{\"notice\":\"Called by the user to pay what is owed\"},\"settleFor(address)\":{\"notice\":\"Called by the user to pay on behalf of another address\"},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"Swap against the given pool\"},\"sync(address)\":{\"notice\":\"Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller.\"},\"take(address,address,uint256)\":{\"notice\":\"Called by the user to net out some value owed to the user\"},\"transfer(address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from the caller to a receiver.\"},\"transferFrom(address,address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from a sender to a receiver.\"},\"unlock(bytes)\":{\"notice\":\"All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\"},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\"}},\"notice\":\"Holds the state for all pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-core/src/PoolManager.sol\":\"PoolManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-core/lib/openzeppelin-contracts/\",\":ds-test/=lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-core/src/\"],\"viaIR\":true},\"sources\":{\"lib/v4-core/lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/v4-core/src/ERC6909.sol\":{\"keccak256\":\"0x22476a1c183be1b547a509b3e6906abaccb6408375f798fce805ff7877aca09f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e85580e1563ea0556705132fb6bd038ca4aa355749039923853ebcb76b7c84e6\",\"dweb:/ipfs/QmVoxPrbagRKpFdRWoaCSKmStYLZrhNFuedcuyGycSGR7q\"]},\"lib/v4-core/src/ERC6909Claims.sol\":{\"keccak256\":\"0xf496ef3a5a9bf4f4aa2eec951dbeff09a01ef058bb9f64b1664cf46c9e85cd49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a0a97c359a7a4c526ba9fc4ceb20af8050f9cf7886ea7e1f38c9c10b4a3750c\",\"dweb:/ipfs/QmPy6pCQbvzCdJRqG1thHRSwEZoLBAaLo3KQnueL3wxb8i\"]},\"lib/v4-core/src/Extsload.sol\":{\"keccak256\":\"0x784074bd04a1541c7c6ace074e30245746133fd37c3ba16b025dce394db986ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f1f4fb306bf01e98b7eca012b85f3ab978b39fa5136193363e2519c4435e51\",\"dweb:/ipfs/QmeGrjGMt71dJymVhkEadh5CuCW5GxRqNEZLi5AJxvC5tU\"]},\"lib/v4-core/src/Exttload.sol\":{\"keccak256\":\"0x769ee2733a08112c652274f4b972c45fb56cc46109f233b9a30f81561b15dd54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd19e88d50ae77c1ed5581baca1c75b3fb828d0b58cded90188d55c4e336266c\",\"dweb:/ipfs/Qmc8YM6Tfpwwa4qivHHzRxNdhZzdzGiD7VexWsDvkaQTxG\"]},\"lib/v4-core/src/NoDelegateCall.sol\":{\"keccak256\":\"0xacb81aecb7c74c86650a035462dae38c313b4b7b5842e14b645f864f61da2b51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363a0e15fc30ea68a5d52a78772facecde6433ea156e3ec2ce25068c97cd5ad6\",\"dweb:/ipfs/QmYhWaF3wH71SDx5TZr9qEXXQf5FYQvdjoo3B2qWiAbm18\"]},\"lib/v4-core/src/PoolManager.sol\":{\"keccak256\":\"0x9b0f92ec953892571b234da1b07e82f3a5581cf04f3d761bf3374aea94edb58d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1d4741d3faf379a64c244d5a19d1af63121ebe1640fad3ff21ae8a968df705b1\",\"dweb:/ipfs/QmTuvXFtyWNVU74nz3QnbSBfEpTwdFRVw9oH6taNUpxrSE\"]},\"lib/v4-core/src/ProtocolFees.sol\":{\"keccak256\":\"0x81362ef1d19670b41cefc2b6f2dc0333b6743fe39a1929edd36bd9b6a1111755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de483bbd8bf9a53b9644d7f9a6a6fe77ae527b755cf29e1db8725de89e70c7aa\",\"dweb:/ipfs/Qmex3PcgJGbYsuDNaMXc8mg5fW1DNaPGiNToPpAAzz6GEq\"]},\"lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e\",\"dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi\"]},\"lib/v4-core/src/libraries/CurrencyDelta.sol\":{\"keccak256\":\"0x80dbd898cf0f90c5c27192689b16c34edc765d6ab21b8358e3bb792c7fef238c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://107698da024313f132d9fe28deb920b5c03d14624889c3ce5720e588f03635bb\",\"dweb:/ipfs/QmQteUbhj5SsWbvSF6U8niBUSrETqVbEwULc8E7vS4Kbnn\"]},\"lib/v4-core/src/libraries/CurrencyReserves.sol\":{\"keccak256\":\"0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725\",\"dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX\"]},\"lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-core/src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb\",\"dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy\"]},\"lib/v4-core/src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xef5c3fd41aee26bb12aa1c32873cfee88e67eddfe7c2b32283786265ac669741\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4de298d02f662a1c36c7be0a150f18c2a161408a5d3e48432e707efd01fac9a4\",\"dweb:/ipfs/QmSiM4oeMmLVKmAtJXz2feYkv4R9ZcyBpkTRW5Nhw5KDyJ\"]},\"lib/v4-core/src/libraries/FullMath.sol\":{\"keccak256\":\"0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52\",\"dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC\"]},\"lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0x27b1c3b8aa3d07d8e3123970695745929315685a5ffaa7342c3ba3582f37fecb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa3bb092dc205eaa1b9defc93e9bbad5f4c5c44e1c4aa531dfca2574c2aba9ba\",\"dweb:/ipfs/QmR1soxkepHNkbGxAMaK4XqhQ4VxWn69dewzGkQJNx5byM\"]},\"lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]},\"lib/v4-core/src/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99\",\"dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD\"]},\"lib/v4-core/src/libraries/Lock.sol\":{\"keccak256\":\"0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c\",\"dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF\"]},\"lib/v4-core/src/libraries/NonzeroDeltaCount.sol\":{\"keccak256\":\"0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59\",\"dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm\"]},\"lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17\",\"dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa\"]},\"lib/v4-core/src/libraries/Pool.sol\":{\"keccak256\":\"0xb8191707c5913f5e2f589cec5167e3fac4a5b86bd84f61fdba0fbe6a8ce8a3a0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a609f9c365f05becf61877d9dc767e7825bce8c34607dbfc0f0437a71f6ff407\",\"dweb:/ipfs/QmThDUzLePs2Hbp6XTpRSHT67rdsjQLhdmS6krm8cpKSey\"]},\"lib/v4-core/src/libraries/Position.sol\":{\"keccak256\":\"0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2\",\"dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5\"]},\"lib/v4-core/src/libraries/ProtocolFeeLibrary.sol\":{\"keccak256\":\"0xf483001899229ab10f5a626fe1c5866134d9e965b48ce6cf55ce0d7f74f7d8ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ba9211a7f69bbb44649c35211eb29d193c09032ec600064ef9d04b4625dd8ba\",\"dweb:/ipfs/QmQSjQvtguYgMJSkkKRhHjxasfX9xfTbrbcZ1QmjUVb787\"]},\"lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/v4-core/src/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xf8079fe6e3460db495451d06b1705e18f1c4075c1af96a31ad313545f7082982\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://582fc51546723a0a8acccf782f69b530bacf9b3ef929458e82569b7121f0b138\",\"dweb:/ipfs/QmSBXcmqZdFsM7M4sRaiyQAxykCeMNFKyKgBcwSMTw1bcF\"]},\"lib/v4-core/src/libraries/SwapMath.sol\":{\"keccak256\":\"0x6baa782ae523269c079cc763639a9b91a25fcfa1743c049c76e43741ef494bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://035c337e62e05262a5bd5d3bc85bc9a383c1013001216b429f49cf1e129a0812\",\"dweb:/ipfs/QmU7s4h58Fh2A6mM8yeorZ2ygwEJMQw8zdZLLkHeDoSWxD\"]},\"lib/v4-core/src/libraries/TickBitmap.sol\":{\"keccak256\":\"0x6779f89e28a0b4af6e09d518caf014b7e8fc627400f5561f86fed11635b1458a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a64dee983106de3be3f968be94368c1e37592f5418aa2a39e8dd358d5a962b0d\",\"dweb:/ipfs/QmYuECZTiEeQVxDLYx6pBSSnVrg56Apw75bugQiM3FmGwy\"]},\"lib/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70\",\"dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva\"]},\"lib/v4-core/src/libraries/UnsafeMath.sol\":{\"keccak256\":\"0xa6e55e0a43a15df2df471d9972cd48f613d07c663ecb8bbeaf7623f6f99bcce4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02ea6e13879fc5a5f35149a2f1cd8af3a1f0877ff69101dad53841d16f515572\",\"dweb:/ipfs/QmcpL4gdG6hL2w1wqs2Vw4J1EFCwBs9T1Qd4p16CtECQkn\"]},\"lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-core/src/types/Slot0.sol\":{\"keccak256\":\"0x8b4912fac7e25ea680056748121113f902d56f8b2640f421d5c38d438db11c1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c19b1ff5b951fb54129268d2be37d82c8bb3ea6e29ac9bc78a8a37794fc082b8\",\"dweb:/ipfs/QmTAQ2mUoiT77hoWJAfn9pyoGy47qaevn45QHrbyovGt2C\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.26+commit.8a97fa7a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyUnlocked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currency1",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CurrenciesOutOfOrderOrEqual"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrencyNotSettled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DelegateCallNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ManagerLocked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MustClearExactPositiveDelta"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonzeroNativeValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolNotInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProtocolFeeCurrencySynced"
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            }
          ],
          "type": "error",
          "name": "ProtocolFeeTooLarge"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SwapAmountCannotBeZero"
        },
        {
          "inputs": [
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            }
          ],
          "type": "error",
          "name": "TickSpacingTooLarge"
        },
        {
          "inputs": [
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            }
          ],
          "type": "error",
          "name": "TickSpacingTooSmall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnauthorizedDynamicLPFeeUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Donate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "liquidityDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModifyLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "currency0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "currency1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "reserve0",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "reserve1",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nativeGlobalBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolReserves",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolFeeController",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ProtocolFeeControllerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint24",
              "name": "protocolFee",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int128",
              "name": "amount0",
              "type": "int128",
              "indexed": false
            },
            {
              "internalType": "int128",
              "name": "amount1",
              "type": "int128",
              "indexed": false
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clear"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectProtocolFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountCollected",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "donate",
          "outputs": [
            {
              "internalType": "BalanceDelta",
              "name": "delta",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "slot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "startSlot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "nSlots",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "slots",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "extsload",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "slots",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exttload",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "slot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exttload",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceX96",
              "type": "uint160"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOperator",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyLiquidityParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyLiquidity",
          "outputs": [
            {
              "internalType": "BalanceDelta",
              "name": "callerDelta",
              "type": "int256"
            },
            {
              "internalType": "BalanceDelta",
              "name": "feesAccrued",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeeController",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFeesAccrued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint24",
              "name": "newProtocolFee",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFeeController"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "settle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "settleFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "BalanceDelta",
              "name": "swapDelta",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sync"
        },
        {
          "inputs": [
            {
              "internalType": "Currency",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "take"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlock",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint24",
              "name": "newDynamicLPFee",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateDynamicLPFee"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256,uint256)": {
            "params": {
              "amount": "The amount of the token.",
              "id": "The id of the token.",
              "spender": "The address of the spender."
            },
            "returns": {
              "_0": "bool True, always"
            }
          },
          "burn(address,uint256,uint256)": {
            "details": "The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out",
            "params": {
              "amount": "The amount of currency to burn",
              "from": "The address to burn the tokens from",
              "id": "The currency address to burn from ERC6909s, as a uint256"
            }
          },
          "clear(address,uint256)": {
            "details": "This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared."
          },
          "collectProtocolFees(address,address,uint256)": {
            "details": "This will revert if the contract is unlocked",
            "params": {
              "amount": "The amount of currency to withdraw",
              "currency": "The currency to withdraw",
              "recipient": "The address to receive the protocol fees"
            },
            "returns": {
              "amountCollected": "The amount of currency successfully withdrawn"
            }
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "details": "Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.",
            "params": {
              "amount0": "The amount of currency0 to donate",
              "amount1": "The amount of currency1 to donate",
              "hookData": "The data to pass through to the donate hooks",
              "key": "The key of the pool to donate to"
            },
            "returns": {
              "delta": "BalanceDelta The delta of the caller after the donate"
            }
          },
          "extsload(bytes32)": {
            "params": {
              "slot": "Key of slot to sload"
            },
            "returns": {
              "_0": "The value of the slot as bytes32"
            }
          },
          "extsload(bytes32,uint256)": {
            "params": {
              "nSlots": "Number of slots to load into return value",
              "startSlot": "Key of slot to start sloading from"
            },
            "returns": {
              "_0": "List of loaded values."
            }
          },
          "extsload(bytes32[])": {
            "params": {
              "slots": "List of slots to SLOAD from."
            },
            "returns": {
              "_0": "List of loaded values."
            }
          },
          "exttload(bytes32)": {
            "params": {
              "slot": "Key of slot to tload"
            },
            "returns": {
              "_0": "The value of the slot as bytes32"
            }
          },
          "exttload(bytes32[])": {
            "params": {
              "slots": "List of slots to tload"
            },
            "returns": {
              "_0": "List of loaded values"
            }
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "details": "A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee",
            "params": {
              "key": "The pool key for the pool to initialize",
              "sqrtPriceX96": "The initial square root price"
            },
            "returns": {
              "tick": "The initial tick of the pool"
            }
          },
          "mint(address,uint256,uint256)": {
            "details": "The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out",
            "params": {
              "amount": "The amount of currency to mint",
              "id": "The currency address to mint to ERC6909s, as a uint256",
              "to": "The address to mint the tokens to"
            }
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "details": "Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme",
            "params": {
              "hookData": "The data to pass through to the add/removeLiquidity hooks",
              "key": "The pool to modify liquidity in",
              "params": "The parameters for modifying the liquidity"
            },
            "returns": {
              "callerDelta": "The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable",
              "feesAccrued": "The balance delta of the fees generated in the liquidity range. Returned for informational purposes"
            }
          },
          "setOperator(address,bool)": {
            "params": {
              "approved": "The approval status.",
              "operator": "The address of the operator."
            },
            "returns": {
              "_0": "bool True, always"
            }
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "params": {
              "key": "The key of the pool to set a protocol fee for",
              "newProtocolFee": "The fee to set"
            }
          },
          "setProtocolFeeController(address)": {
            "params": {
              "controller": "The new protocol fee controller"
            }
          },
          "settle()": {
            "returns": {
              "_0": "The amount of currency settled"
            }
          },
          "settleFor(address)": {
            "params": {
              "recipient": "The address to credit for the payment"
            },
            "returns": {
              "_0": "The amount of currency settled"
            }
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "details": "Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.",
            "params": {
              "hookData": "The data to pass through to the swap hooks",
              "key": "The pool to swap in",
              "params": "The parameters for swapping"
            },
            "returns": {
              "swapDelta": "The balance delta of the address swapping"
            }
          },
          "sync(address)": {
            "details": "This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency"
          },
          "take(address,address,uint256)": {
            "details": "Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans",
            "params": {
              "amount": "The amount of currency to withdraw",
              "currency": "The currency to withdraw from the pool manager",
              "to": "The address to withdraw to"
            }
          },
          "transfer(address,uint256,uint256)": {
            "params": {
              "amount": "The amount of the token.",
              "id": "The id of the token.",
              "receiver": "The address of the receiver."
            },
            "returns": {
              "_0": "bool True, always, unless the function reverts"
            }
          },
          "transferFrom(address,address,uint256,uint256)": {
            "params": {
              "amount": "The amount of the token.",
              "id": "The id of the token.",
              "receiver": "The address of the receiver.",
              "sender": "The address of the sender."
            },
            "returns": {
              "_0": "bool True, always, unless the function reverts"
            }
          },
          "unlock(bytes)": {
            "details": "The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`",
            "params": {
              "data": "Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`"
            },
            "returns": {
              "result": "The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`"
            }
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "details": "A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee",
            "params": {
              "key": "The key of the pool to update dynamic LP fees for",
              "newDynamicLPFee": "The new dynamic pool LP fee"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowance(address,address,uint256)": {
            "notice": "Spender allowance of an id."
          },
          "approve(address,uint256,uint256)": {
            "notice": "Approves an amount of an id to a spender."
          },
          "balanceOf(address,uint256)": {
            "notice": "Owner balance of an id."
          },
          "burn(address,uint256,uint256)": {
            "notice": "Called by the user to move value from ERC6909 balance"
          },
          "clear(address,uint256)": {
            "notice": "WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer."
          },
          "collectProtocolFees(address,address,uint256)": {
            "notice": "Collects the protocol fees for a given recipient and currency, returning the amount collected"
          },
          "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "notice": "Donate the given currency amounts to the in-range liquidity providers of a pool"
          },
          "extsload(bytes32)": {
            "notice": "Called by external contracts to access granular pool state"
          },
          "extsload(bytes32,uint256)": {
            "notice": "Called by external contracts to access granular pool state"
          },
          "extsload(bytes32[])": {
            "notice": "Called by external contracts to access sparse pool state"
          },
          "exttload(bytes32)": {
            "notice": "Called by external contracts to access transient storage of the contract"
          },
          "exttload(bytes32[])": {
            "notice": "Called by external contracts to access sparse transient pool state"
          },
          "initialize((address,address,uint24,int24,address),uint160)": {
            "notice": "Initialize the state for a given pool ID"
          },
          "isOperator(address,address)": {
            "notice": "Checks if a spender is approved by an owner as an operator"
          },
          "mint(address,uint256,uint256)": {
            "notice": "Called by the user to move value into ERC6909 balance"
          },
          "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "notice": "Modify the liquidity for the given pool"
          },
          "protocolFeeController()": {
            "notice": "Returns the current protocol fee controller address"
          },
          "protocolFeesAccrued(address)": {
            "notice": "Given a currency address, returns the protocol fees accrued in that currency"
          },
          "setOperator(address,bool)": {
            "notice": "Sets or removes an operator for the caller."
          },
          "setProtocolFee((address,address,uint24,int24,address),uint24)": {
            "notice": "Sets the protocol fee for the given pool"
          },
          "setProtocolFeeController(address)": {
            "notice": "Sets the protocol fee controller"
          },
          "settle()": {
            "notice": "Called by the user to pay what is owed"
          },
          "settleFor(address)": {
            "notice": "Called by the user to pay on behalf of another address"
          },
          "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "notice": "Swap against the given pool"
          },
          "sync(address)": {
            "notice": "Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller."
          },
          "take(address,address,uint256)": {
            "notice": "Called by the user to net out some value owed to the user"
          },
          "transfer(address,uint256,uint256)": {
            "notice": "Transfers an amount of an id from the caller to a receiver."
          },
          "transferFrom(address,address,uint256,uint256)": {
            "notice": "Transfers an amount of an id from a sender to a receiver."
          },
          "unlock(bytes)": {
            "notice": "All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract."
          },
          "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
            "notice": "Updates the pools lp fees for the a pool that has enabled dynamic lp fees."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=lib/v4-core/node_modules/@ensdomains/",
        "@openzeppelin/=lib/v4-core/lib/openzeppelin-contracts/",
        "ds-test/=lib/v4-core/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "hardhat/=lib/v4-core/node_modules/hardhat/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solmate/=lib/v4-core/lib/solmate/",
        "v4-core/=lib/v4-core/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/v4-core/src/PoolManager.sol": "PoolManager"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/v4-core/lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
        "urls": [
          "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
          "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v4-core/src/ERC6909.sol": {
        "keccak256": "0x22476a1c183be1b547a509b3e6906abaccb6408375f798fce805ff7877aca09f",
        "urls": [
          "bzz-raw://e85580e1563ea0556705132fb6bd038ca4aa355749039923853ebcb76b7c84e6",
          "dweb:/ipfs/QmVoxPrbagRKpFdRWoaCSKmStYLZrhNFuedcuyGycSGR7q"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/ERC6909Claims.sol": {
        "keccak256": "0xf496ef3a5a9bf4f4aa2eec951dbeff09a01ef058bb9f64b1664cf46c9e85cd49",
        "urls": [
          "bzz-raw://2a0a97c359a7a4c526ba9fc4ceb20af8050f9cf7886ea7e1f38c9c10b4a3750c",
          "dweb:/ipfs/QmPy6pCQbvzCdJRqG1thHRSwEZoLBAaLo3KQnueL3wxb8i"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/Extsload.sol": {
        "keccak256": "0x784074bd04a1541c7c6ace074e30245746133fd37c3ba16b025dce394db986ce",
        "urls": [
          "bzz-raw://35f1f4fb306bf01e98b7eca012b85f3ab978b39fa5136193363e2519c4435e51",
          "dweb:/ipfs/QmeGrjGMt71dJymVhkEadh5CuCW5GxRqNEZLi5AJxvC5tU"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/Exttload.sol": {
        "keccak256": "0x769ee2733a08112c652274f4b972c45fb56cc46109f233b9a30f81561b15dd54",
        "urls": [
          "bzz-raw://dd19e88d50ae77c1ed5581baca1c75b3fb828d0b58cded90188d55c4e336266c",
          "dweb:/ipfs/Qmc8YM6Tfpwwa4qivHHzRxNdhZzdzGiD7VexWsDvkaQTxG"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/NoDelegateCall.sol": {
        "keccak256": "0xacb81aecb7c74c86650a035462dae38c313b4b7b5842e14b645f864f61da2b51",
        "urls": [
          "bzz-raw://363a0e15fc30ea68a5d52a78772facecde6433ea156e3ec2ce25068c97cd5ad6",
          "dweb:/ipfs/QmYhWaF3wH71SDx5TZr9qEXXQf5FYQvdjoo3B2qWiAbm18"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/PoolManager.sol": {
        "keccak256": "0x9b0f92ec953892571b234da1b07e82f3a5581cf04f3d761bf3374aea94edb58d",
        "urls": [
          "bzz-raw://1d4741d3faf379a64c244d5a19d1af63121ebe1640fad3ff21ae8a968df705b1",
          "dweb:/ipfs/QmTuvXFtyWNVU74nz3QnbSBfEpTwdFRVw9oH6taNUpxrSE"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/ProtocolFees.sol": {
        "keccak256": "0x81362ef1d19670b41cefc2b6f2dc0333b6743fe39a1929edd36bd9b6a1111755",
        "urls": [
          "bzz-raw://de483bbd8bf9a53b9644d7f9a6a6fe77ae527b755cf29e1db8725de89e70c7aa",
          "dweb:/ipfs/Qmex3PcgJGbYsuDNaMXc8mg5fW1DNaPGiNToPpAAzz6GEq"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IExtsload.sol": {
        "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
        "urls": [
          "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
          "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IExttload.sol": {
        "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
        "urls": [
          "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
          "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IHooks.sol": {
        "keccak256": "0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0",
        "urls": [
          "bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c",
          "dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IPoolManager.sol": {
        "keccak256": "0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea",
        "urls": [
          "bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27",
          "dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IProtocolFees.sol": {
        "keccak256": "0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848",
        "urls": [
          "bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d",
          "dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
        "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
        "urls": [
          "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
          "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
        "keccak256": "0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f",
        "urls": [
          "bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de",
          "dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
        "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
        "urls": [
          "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
          "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/BitMath.sol": {
        "keccak256": "0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d",
        "urls": [
          "bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e",
          "dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/CurrencyDelta.sol": {
        "keccak256": "0x80dbd898cf0f90c5c27192689b16c34edc765d6ab21b8358e3bb792c7fef238c",
        "urls": [
          "bzz-raw://107698da024313f132d9fe28deb920b5c03d14624889c3ce5720e588f03635bb",
          "dweb:/ipfs/QmQteUbhj5SsWbvSF6U8niBUSrETqVbEwULc8E7vS4Kbnn"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/CurrencyReserves.sol": {
        "keccak256": "0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3",
        "urls": [
          "bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725",
          "dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/CustomRevert.sol": {
        "keccak256": "0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de",
        "urls": [
          "bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd",
          "dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/FixedPoint128.sol": {
        "keccak256": "0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542",
        "urls": [
          "bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb",
          "dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/FixedPoint96.sol": {
        "keccak256": "0xef5c3fd41aee26bb12aa1c32873cfee88e67eddfe7c2b32283786265ac669741",
        "urls": [
          "bzz-raw://4de298d02f662a1c36c7be0a150f18c2a161408a5d3e48432e707efd01fac9a4",
          "dweb:/ipfs/QmSiM4oeMmLVKmAtJXz2feYkv4R9ZcyBpkTRW5Nhw5KDyJ"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/FullMath.sol": {
        "keccak256": "0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2",
        "urls": [
          "bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52",
          "dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/Hooks.sol": {
        "keccak256": "0x27b1c3b8aa3d07d8e3123970695745929315685a5ffaa7342c3ba3582f37fecb",
        "urls": [
          "bzz-raw://fa3bb092dc205eaa1b9defc93e9bbad5f4c5c44e1c4aa531dfca2574c2aba9ba",
          "dweb:/ipfs/QmR1soxkepHNkbGxAMaK4XqhQ4VxWn69dewzGkQJNx5byM"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/LPFeeLibrary.sol": {
        "keccak256": "0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b",
        "urls": [
          "bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475",
          "dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/LiquidityMath.sol": {
        "keccak256": "0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353",
        "urls": [
          "bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99",
          "dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/Lock.sol": {
        "keccak256": "0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5",
        "urls": [
          "bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c",
          "dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/NonzeroDeltaCount.sol": {
        "keccak256": "0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87",
        "urls": [
          "bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59",
          "dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/ParseBytes.sol": {
        "keccak256": "0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15",
        "urls": [
          "bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17",
          "dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/Pool.sol": {
        "keccak256": "0xb8191707c5913f5e2f589cec5167e3fac4a5b86bd84f61fdba0fbe6a8ce8a3a0",
        "urls": [
          "bzz-raw://a609f9c365f05becf61877d9dc767e7825bce8c34607dbfc0f0437a71f6ff407",
          "dweb:/ipfs/QmThDUzLePs2Hbp6XTpRSHT67rdsjQLhdmS6krm8cpKSey"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/Position.sol": {
        "keccak256": "0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9",
        "urls": [
          "bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2",
          "dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/ProtocolFeeLibrary.sol": {
        "keccak256": "0xf483001899229ab10f5a626fe1c5866134d9e965b48ce6cf55ce0d7f74f7d8ec",
        "urls": [
          "bzz-raw://6ba9211a7f69bbb44649c35211eb29d193c09032ec600064ef9d04b4625dd8ba",
          "dweb:/ipfs/QmQSjQvtguYgMJSkkKRhHjxasfX9xfTbrbcZ1QmjUVb787"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/SafeCast.sol": {
        "keccak256": "0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86",
        "urls": [
          "bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59",
          "dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/SqrtPriceMath.sol": {
        "keccak256": "0xf8079fe6e3460db495451d06b1705e18f1c4075c1af96a31ad313545f7082982",
        "urls": [
          "bzz-raw://582fc51546723a0a8acccf782f69b530bacf9b3ef929458e82569b7121f0b138",
          "dweb:/ipfs/QmSBXcmqZdFsM7M4sRaiyQAxykCeMNFKyKgBcwSMTw1bcF"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/SwapMath.sol": {
        "keccak256": "0x6baa782ae523269c079cc763639a9b91a25fcfa1743c049c76e43741ef494bd9",
        "urls": [
          "bzz-raw://035c337e62e05262a5bd5d3bc85bc9a383c1013001216b429f49cf1e129a0812",
          "dweb:/ipfs/QmU7s4h58Fh2A6mM8yeorZ2ygwEJMQw8zdZLLkHeDoSWxD"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/TickBitmap.sol": {
        "keccak256": "0x6779f89e28a0b4af6e09d518caf014b7e8fc627400f5561f86fed11635b1458a",
        "urls": [
          "bzz-raw://a64dee983106de3be3f968be94368c1e37592f5418aa2a39e8dd358d5a962b0d",
          "dweb:/ipfs/QmYuECZTiEeQVxDLYx6pBSSnVrg56Apw75bugQiM3FmGwy"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/TickMath.sol": {
        "keccak256": "0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8",
        "urls": [
          "bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70",
          "dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/UnsafeMath.sol": {
        "keccak256": "0xa6e55e0a43a15df2df471d9972cd48f613d07c663ecb8bbeaf7623f6f99bcce4",
        "urls": [
          "bzz-raw://02ea6e13879fc5a5f35149a2f1cd8af3a1f0877ff69101dad53841d16f515572",
          "dweb:/ipfs/QmcpL4gdG6hL2w1wqs2Vw4J1EFCwBs9T1Qd4p16CtECQkn"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/BalanceDelta.sol": {
        "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
        "urls": [
          "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
          "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/BeforeSwapDelta.sol": {
        "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
        "urls": [
          "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
          "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/Currency.sol": {
        "keccak256": "0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93",
        "urls": [
          "bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01",
          "dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/PoolId.sol": {
        "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
        "urls": [
          "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
          "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/PoolKey.sol": {
        "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
        "urls": [
          "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
          "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/Slot0.sol": {
        "keccak256": "0x8b4912fac7e25ea680056748121113f902d56f8b2640f421d5c38d438db11c1b",
        "urls": [
          "bzz-raw://c19b1ff5b951fb54129268d2be37d82c8bb3ea6e29ac9bc78a8a37794fc082b8",
          "dweb:/ipfs/QmTAQ2mUoiT77hoWJAfn9pyoGy47qaevn45QHrbyovGt2C"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 21
}